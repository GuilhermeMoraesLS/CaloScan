{
  "name": "onboarding copy",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "2fbc3806-4f1c-4999-8b48-eb0367157651",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -2260,
        -20
      ],
      "id": "09967598-9889-4806-b251-8a19eb81b77e",
      "name": "Webhook",
      "webhookId": "2fbc3806-4f1c-4999-8b48-eb0367157651"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "bef07082-c3c9-4da4-8f7a-6d5e345adff9",
                    "leftValue": "={{ $('Já passou pelo onboarding?').item.json.estado_atual }}",
                    "rightValue": "aguardando_nome",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "0ce2aa7e-0a90-4ae9-b8c3-6e4f4bcc157d",
                    "leftValue": "={{ $('Já passou pelo onboarding?').item.json.estado_atual }}",
                    "rightValue": "resposta_dieta",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "ad710b87-dcfd-4122-baa2-6993883ae947",
                    "leftValue": "={{ $('Já passou pelo onboarding?').item.json.estado_atual }}",
                    "rightValue": "quantidade_calorias",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "96f087a6-943b-471f-9926-2971c52b84c3",
                    "leftValue": "={{ $('Já passou pelo onboarding?').item.json.estado_atual }}",
                    "rightValue": "quantidade_proteina",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "621009d4-10db-443f-82da-c62cb19cfb56",
                    "leftValue": "={{ $('Já passou pelo onboarding?').item.json.estado_atual }}",
                    "rightValue": "quantidade_carbo",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "9d59ea8b-4ca3-4c4b-bdc6-aff510a96d0c",
                    "leftValue": "={{ $('Já passou pelo onboarding?').item.json.estado_atual }}",
                    "rightValue": "quantidade_gordura",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "842587fa-c8b0-48a8-8e26-5c9aaa0a5c22",
                    "leftValue": "={{ $('Já passou pelo onboarding?').item.json.estado_atual }}",
                    "rightValue": "info_altura",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "84f957f0-275b-4400-be71-db1192f97911",
                    "leftValue": "={{ $('Já passou pelo onboarding?').item.json.estado_atual }}",
                    "rightValue": "info_peso",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "a6217bc2-7998-45d2-9c8f-5c7a798ba7a3",
                    "leftValue": "={{ $('Já passou pelo onboarding?').item.json.estado_atual }}",
                    "rightValue": "=info_idade",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "62a42355-40dc-4de3-b564-1b152d4878b8",
                    "leftValue": "={{ $('Já passou pelo onboarding?').item.json.estado_atual }}",
                    "rightValue": "info_sexo",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "f3bb99ac-cd32-43d7-9942-b94688ca2bf1",
                    "leftValue": "={{ $('Já passou pelo onboarding?').item.json.estado_atual }}",
                    "rightValue": "info_atividade",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "252e7a8f-42b8-4690-853d-e82b8c3b60e0",
                    "leftValue": "={{ $('Já passou pelo onboarding?').item.json.estado_atual }}",
                    "rightValue": "info_objetivo",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "1c461a63-1782-4ba7-9c7f-7353c475cac7",
                    "leftValue": "={{ $('Já passou pelo onboarding?').item.json.estado_atual }}",
                    "rightValue": "opcoes_fluxos",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "66aa027a-bdb5-4329-be0a-7cc6e1c6c917",
                    "leftValue": "={{ $('Já passou pelo onboarding?').item.json.estado_atual }}",
                    "rightValue": "resposta_email",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        2000,
        -260
      ],
      "id": "8ce3b587-31de-4c26-b769-2839ae1c6b71",
      "name": "Switch"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "32671527-4b4e-4bc0-af28-cc615c062168",
              "leftValue": "={{ $('Webhook').item.json.body.text.message }}",
              "rightValue": "1",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        5220,
        -80
      ],
      "id": "229b49f3-0da5-4128-8f37-cf82d6fc0cf1",
      "name": "If1"
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "users",
        "filters": {
          "conditions": [
            {
              "keyName": "telefone",
              "condition": "eq",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "tem_dieta_previa",
              "fieldValue": "True"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        5940,
        -20
      ],
      "id": "f922032c-5f78-439a-b5c2-ee3acdc40de8",
      "name": "Supabase5",
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "tableId": "dietas",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "usuario_telefone",
              "fieldValue": "={{ $('Webhook').item.json.body.phone }}"
            },
            {
              "fieldId": "data_criacao",
              "fieldValue": "={{ $now }}"
            },
            {
              "fieldId": "usuario_id",
              "fieldValue": "={{ $('BUSCA USUÁRIO').item.json.id }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        6100,
        -20
      ],
      "id": "10c1973b-625b-4716-997a-4fc962206541",
      "name": "Supabase8",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3E1D888E8D8DE07F56022E7FADD21987/token/ED2BF32A855B887106BAAD09/send-text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "client-token",
              "value": "F60d85846fe6a4bfd986f72916b85da2fS"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $('Webhook').item.json.body.phone }}"
            },
            {
              "name": "message",
              "value": "=Legal! Vamos configurar sua dieta. Quantas calorias você consome por dia(ex: 3000)?"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5500,
        -20
      ],
      "id": "e58f47e7-d09f-47fb-9977-1f3e392270ee",
      "name": "qtd calorias",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3E1D888E8D8DE07F56022E7FADD21987/token/ED2BF32A855B887106BAAD09/send-text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "client-token",
              "value": "F60d85846fe6a4bfd986f72916b85da2fS"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $('Webhook').item.json.body.phone }}"
            },
            {
              "name": "message",
              "value": "=Registrado! Agora, qual a quantidade diária de proteínas em gramas? (exemplo: 100)"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5780,
        140
      ],
      "id": "f9b19874-245d-440b-9d55-70e38894d1f6",
      "name": "qtd proteina",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3E1D888E8D8DE07F56022E7FADD21987/token/ED2BF32A855B887106BAAD09/send-text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "client-token",
              "value": "F60d85846fe6a4bfd986f72916b85da2fS"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $('Webhook').item.json.body.phone }}"
            },
            {
              "name": "message",
              "value": "=Ótimo! E a quantidade diária de carboidratos em gramas? (exemplo: 250)"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5720,
        400
      ],
      "id": "1b0ddbe6-081a-401a-af0a-e35e39214617",
      "name": "qtd carbo",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "estados_conversa",
        "filters": {
          "conditions": [
            {
              "keyName": "usuario_telefone",
              "condition": "eq",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "estado_atual",
              "fieldValue": "resposta_dieta"
            },
            {
              "fieldId": "dados_contexto",
              "fieldValue": "={{ $('Webhook').item.json.body.text.message }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        5280,
        -1480
      ],
      "id": "f698d8bb-6697-40e3-87b0-ba36cb4231eb",
      "name": "update estado1",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "estados_conversa",
        "filters": {
          "conditions": [
            {
              "keyName": "usuario_telefone",
              "condition": "eq",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "estado_atual",
              "fieldValue": "quantidade_calorias"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        5760,
        -20
      ],
      "id": "4fdd4b82-f82a-4f23-8901-402930eedbda",
      "name": "update estado2",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "estados_conversa",
        "filters": {
          "conditions": [
            {
              "keyName": "usuario_telefone",
              "condition": "eq",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "estado_atual",
              "fieldValue": "quantidade_proteina"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        6020,
        140
      ],
      "id": "72a0a56f-4e32-43ad-820f-d9454b644c01",
      "name": "update estado3",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "estados_conversa",
        "filters": {
          "conditions": [
            {
              "keyName": "usuario_telefone",
              "condition": "eq",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "estado_atual",
              "fieldValue": "quantidade_carbo"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        5900,
        400
      ],
      "id": "4a02778f-e374-4cbb-94c6-7922b6d33705",
      "name": "Supabase",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "dietas",
        "filters": {
          "conditions": [
            {
              "keyName": "usuario_telefone",
              "condition": "eq",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "proteina_gramas",
              "fieldValue": "={{ $('Webhook').item.json.body.text.message }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        6060,
        400
      ],
      "id": "5466d906-be93-4f75-a1ca-51c7f3fb7a67",
      "name": "Supabase2",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3E1D888E8D8DE07F56022E7FADD21987/token/ED2BF32A855B887106BAAD09/send-text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "client-token",
              "value": "F60d85846fe6a4bfd986f72916b85da2fS"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $('Webhook').item.json.body.phone }}"
            },
            {
              "name": "message",
              "value": "=Perfeito! Por último, qual a quantidade diária de gorduras em gramas? (exemplo: 70)"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5720,
        720
      ],
      "id": "ca7a0f53-c765-4e8d-a1fc-657b083c6e28",
      "name": "qtd gordura",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "estados_conversa",
        "filters": {
          "conditions": [
            {
              "keyName": "usuario_telefone",
              "condition": "eq",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "estado_atual",
              "fieldValue": "quantidade_gordura"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        5900,
        720
      ],
      "id": "cce99838-e2e5-4997-872a-f91afa7353dd",
      "name": "Supabase4",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "dietas",
        "filters": {
          "conditions": [
            {
              "keyName": "usuario_telefone",
              "condition": "eq",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "carboidrato_gramas",
              "fieldValue": "={{ $('Webhook').item.json.body.text.message }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        6060,
        720
      ],
      "id": "f8c73a37-1609-458b-8fef-c95a994336bc",
      "name": "Supabase6",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "estados_conversa",
        "filters": {
          "conditions": [
            {
              "keyName": "usuario_telefone",
              "condition": "eq",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "estado_atual",
              "fieldValue": "opcoes_fluxos"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        5720,
        1040
      ],
      "id": "61026dcc-f5fb-4adf-a225-bf2a8c63b109",
      "name": "Supabase11",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "dietas",
        "filters": {
          "conditions": [
            {
              "keyName": "usuario_telefone",
              "condition": "eq",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "gordura_gramas",
              "fieldValue": "={{ $('Webhook').item.json.body.text.message }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        5940,
        1040
      ],
      "id": "ed836726-1b3d-4ee3-861d-28d7691014b5",
      "name": "Supabase12",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "dietas",
        "filters": {
          "conditions": [
            {
              "keyName": "usuario_telefone",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        6160,
        1040
      ],
      "id": "a17a35de-062d-40f7-9120-dcf1f6891741",
      "name": "Supabase13",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "estados_conversa",
        "filters": {
          "conditions": [
            {
              "keyName": "usuario_telefone",
              "condition": "eq",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "estado_atual",
              "fieldValue": "info_altura"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        5680,
        -240
      ],
      "id": "cf15122f-e273-4e76-8ae4-6e41dcfd378e",
      "name": "update estado5",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3E1D888E8D8DE07F56022E7FADD21987/token/ED2BF32A855B887106BAAD09/send-text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "client-token",
              "value": "F60d85846fe6a4bfd986f72916b85da2fS"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $('Webhook').item.json.body.phone }}"
            },
            {
              "name": "message",
              "value": "=Registrado! Agora, qual o seu peso atual em kg? (exemplo: 70)"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5280,
        1260
      ],
      "id": "9a34951d-b2c6-4ec6-ba4d-b4bb8773c255",
      "name": "info dieta2",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "estados_conversa",
        "filters": {
          "conditions": [
            {
              "keyName": "usuario_telefone",
              "condition": "eq",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "estado_atual",
              "fieldValue": "info_peso"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        5520,
        1260
      ],
      "id": "f2948ba3-7f01-4fb3-8688-c15f18dfa095",
      "name": "update estado6",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "users",
        "filters": {
          "conditions": [
            {
              "keyName": "telefone",
              "condition": "eq",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "altura",
              "fieldValue": "={{ $('Webhook').item.json.body.text.message }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        5720,
        1260
      ],
      "id": "5f82ca68-0da4-4aac-aaa3-97b36a635d8e",
      "name": "Supabase14",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3E1D888E8D8DE07F56022E7FADD21987/token/ED2BF32A855B887106BAAD09/send-text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "client-token",
              "value": "F60d85846fe6a4bfd986f72916b85da2fS"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $('Webhook').item.json.body.phone }}"
            },
            {
              "name": "message",
              "value": "=Perfeito! Qual a sua idade? (exemplo: 32)"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5280,
        1500
      ],
      "id": "0ec46b52-c7ea-4be7-b11c-0b83d2e314fb",
      "name": "info dieta3",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "estados_conversa",
        "filters": {
          "conditions": [
            {
              "keyName": "usuario_telefone",
              "condition": "eq",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "estado_atual",
              "fieldValue": "info_idade"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        5500,
        1500
      ],
      "id": "aa93f3f3-cd31-4d01-abcf-abf0db32943e",
      "name": "update estado7",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "users",
        "filters": {
          "conditions": [
            {
              "keyName": "telefone",
              "condition": "eq",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "peso",
              "fieldValue": "={{ $('Webhook').item.json.body.text.message }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        5680,
        1500
      ],
      "id": "4a5a105c-c697-4fdb-beab-5465a4a5fa2d",
      "name": "Supabase15",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3E1D888E8D8DE07F56022E7FADD21987/token/ED2BF32A855B887106BAAD09/send-text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "client-token",
              "value": "F60d85846fe6a4bfd986f72916b85da2fS"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $('Webhook').item.json.body.phone }}"
            },
            {
              "name": "message",
              "value": "=Agora, com qual sexo você se identifica?\n 1️⃣ Masculino\n 2️⃣ Feminino"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5260,
        1840
      ],
      "id": "05986bfe-9926-4f30-8066-c0bfd2fe6b5a",
      "name": "info dieta4",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "estados_conversa",
        "filters": {
          "conditions": [
            {
              "keyName": "usuario_telefone",
              "condition": "eq",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "estado_atual",
              "fieldValue": "info_sexo"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        5440,
        1840
      ],
      "id": "27434550-4f4f-4969-a498-d228ce7f42cb",
      "name": "update estado8",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "users",
        "filters": {
          "conditions": [
            {
              "keyName": "telefone",
              "condition": "eq",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "idade",
              "fieldValue": "={{ $('Webhook').item.json.body.text.message }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        5580,
        1840
      ],
      "id": "dc0f186a-08f3-4f16-a829-9571a3dc2ced",
      "name": "Supabase16",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3E1D888E8D8DE07F56022E7FADD21987/token/ED2BF32A855B887106BAAD09/send-text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "client-token",
              "value": "F60d85846fe6a4bfd986f72916b85da2fS"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $('Webhook').item.json.body.phone }}"
            },
            {
              "name": "message",
              "value": "=Entendido! Agora, qual é o seu nível de atividade física?\n 1️⃣ Sedentário (pouco ou nenhum exercício)\n 2️⃣ Levemente ativo (exercício leve 1-3 dias/semana)\n 3️⃣ Moderadamente ativo (exercício moderado 3-5 dias/semana)\n 4️⃣ Muito ativo (exercício intenso 6-7 dias/semana)\n 5️⃣ Extremamente ativo (trabalho físico ou exercício muito intenso)"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5320,
        2180
      ],
      "id": "146d28e4-e4a9-484b-bb16-5fda8a28f173",
      "name": "info dieta5",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "estados_conversa",
        "filters": {
          "conditions": [
            {
              "keyName": "usuario_telefone",
              "condition": "eq",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "estado_atual",
              "fieldValue": "info_atividade"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        5500,
        2180
      ],
      "id": "d407262b-d568-46dd-b284-b7b6221cdad5",
      "name": "update estado9",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "users",
        "filters": {
          "conditions": [
            {
              "keyName": "telefone",
              "condition": "eq",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "sexo",
              "fieldValue": "masculino"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        6020,
        2080
      ],
      "id": "196a53a2-b47c-42a6-9dee-2fa7edc7542c",
      "name": "Supabase17",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3E1D888E8D8DE07F56022E7FADD21987/token/ED2BF32A855B887106BAAD09/send-text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "client-token",
              "value": "F60d85846fe6a4bfd986f72916b85da2fS"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $('Webhook').item.json.body.phone }}"
            },
            {
              "name": "message",
              "value": "=Entendido! Agora, qual é o seu principal objetivo?\n1️⃣ Emagrecer\n2️⃣ Manter o peso\n3️⃣ Ganhar massa muscular"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5280,
        2600
      ],
      "id": "10d31add-f36d-448a-9365-73fb0ad26fe3",
      "name": "info dieta6",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "estados_conversa",
        "filters": {
          "conditions": [
            {
              "keyName": "usuario_telefone",
              "condition": "eq",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "estado_atual",
              "fieldValue": "info_objetivo"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        5480,
        2600
      ],
      "id": "980c85ad-0667-43d8-8150-2447fa54b254",
      "name": "update estado10",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "users",
        "filters": {
          "conditions": [
            {
              "keyName": "telefone",
              "condition": "eq",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "nivel_atividade",
              "fieldValue": "={{ $('Webhook').item.json.body.text.message }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        5660,
        2600
      ],
      "id": "0754184d-7d38-4ee3-aa1c-a8aa8bddf54b",
      "name": "Supabase18",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3E1D888E8D8DE07F56022E7FADD21987/token/ED2BF32A855B887106BAAD09/send-text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "client-token",
              "value": "F60d85846fe6a4bfd986f72916b85da2fS"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $('Webhook').item.json.body.phone }}"
            },
            {
              "name": "message",
              "value": "=Calculando sua dieta personalizada..."
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5300,
        2960
      ],
      "id": "6e0ae742-fb75-42b7-b81a-9e9304d602ac",
      "name": "info dieta7",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "estados_conversa",
        "filters": {
          "conditions": [
            {
              "keyName": "usuario_telefone",
              "condition": "eq",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "estado_atual",
              "fieldValue": "aguardando_pagamento"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        5500,
        2960
      ],
      "id": "cb9770b8-f6de-45bb-8023-7343848b64a6",
      "name": "update estado11",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "users",
        "filters": {
          "conditions": [
            {
              "keyName": "telefone",
              "condition": "eq",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "objetivo",
              "fieldValue": "={{ $('Webhook').item.json.body.text.message }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        5680,
        2960
      ],
      "id": "39367f76-ee8e-41c0-b975-89a0f321918b",
      "name": "Supabase19",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "dietas",
        "filters": {
          "conditions": [
            {
              "keyName": "usuario_telefone",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        5840,
        2960
      ],
      "id": "c60d0efa-1e34-4c11-89e3-5bff46e5d81d",
      "name": "Supabase20",
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "jsCode": "// --- PEGANDO VARIÁVEIS DIRETAMENTE DO NODE 'Supabase19' ---\n// Tentamos pegar as variáveis de forma segura. Se o nó Supabase19 não tiver esses campos,\n// eles serão undefined, e as conversões/validações abaixo lidarão com isso.\nconst itemSupabase = $('Supabase19').first().json;\n\n// Extração e conversão de valores para números.\n// Number() tentará converter e retornará NaN se não for um número válido.\nconst peso = Number(itemSupabase.peso);\nconst altura = Number(itemSupabase.altura);\nconst idade = Number(itemSupabase.idade);\n\n// Variáveis que podem ser strings. Usamos || \"\" para garantir que sejam strings vazias se undefined.\n// .toLowerCase() para padronizar as entradas.\nconst sexo = (itemSupabase.sexo || \"\").toLowerCase();\nconst objetivo = 'emagrecer';\n\n// parseInt() para nível de atividade. Usamos 10 para base decimal.\n// Se não for um número válido, será NaN, o que será tratado na validação.\nconst nivelAtividadeInput = parseInt(itemSupabase.nivel_atividade, 10);\nlet nivelAtividade = 2; // Valor padrão caso a entrada seja inválida ou fora da faixa\n\n// --- VALIDAÇÃO DE ENTRADAS CRÍTICAS ---\n// Retorna um erro se qualquer dado essencial for inválido.\n\n// 1. Validação de peso, altura, idade\nif (isNaN(peso) || peso <= 0 ||\n    isNaN(altura) || altura <= 0 ||\n    isNaN(idade) || idade <= 0) {\n  return [\n    {\n      json: {\n        erro: \"Erro: Peso, altura ou idade inválidos. Certifique-se de que são números positivos.\"\n      }\n    }\n  ];\n}\n\n// 2. Validação de sexo\nif (sexo !== \"masculino\" && sexo !== \"feminino\") {\n  return [\n    {\n      json: {\n        erro: \"Erro: Sexo inválido. Use 'masculino' ou 'feminino'.\"\n      }\n    }\n  ];\n}\n\n// 3. Validação de objetivo\n// Adicionando um array de objetivos válidos para validação mais robusta\nconst objetivosValidos = [\"emagrecer\", \"manter\", \"ganhar\"];\nif (!objetivosValidos.includes(objetivo)) {\n  return [\n    {\n      json: {\n        erro: `Erro: Objetivo inválido. Use um dos seguintes: ${objetivosValidos.join(', ')}.`\n      }\n    }\n  ];\n}\n\n// 4. Validação e ajuste de Nível de Atividade\n// Se o nível de atividade do input for um número válido e dentro da faixa, use-o.\n// Caso contrário, o 'nivelAtividade' já está definido como 2 (padrão).\nif (!isNaN(nivelAtividadeInput) && nivelAtividadeInput >= 1 && nivelAtividadeInput <= 5) {\n  nivelAtividade = nivelAtividadeInput;\n} else {\n    // Podemos retornar um aviso aqui ou apenas usar o padrão sem erro fatal\n    // console.warn(\"Aviso: Nível de atividade inválido. Usando o valor padrão (2 - atividade leve).\");\n}\n\n// --- FATORES DE ATIVIDADE (PARA CÁLCULO DO GET) ---\nconst fatoresAtividade = {\n  1: 1.2,    // Sedentário\n  2: 1.375,  // Levemente Ativo (1-3 dias/semana)\n  3: 1.55,   // Moderadamente Ativo (3-5 dias/semana)\n  4: 1.725,  // Muito Ativo (6-7 dias/semana)\n  5: 1.9     // Extremamente Ativo (Atletas, 2x ao dia)\n};\n\n// --- CÁLCULO DA TMB (TAXA METABÓLICA BASAL) ---\nlet tmb = 0;\nif (sexo === \"masculino\") {\n  tmb = (10 * peso) + (6.25 * altura) - (5 * idade) + 5;\n} else { // sexo === \"feminino\" (já validado)\n  tmb = (10 * peso) + (6.25 * altura) - (5 * idade) - 161;\n}\n\n// --- CÁLCULO DO GET (GASTO ENERGÉTICO TOTAL) ---\n// Usa o fator de atividade correspondente, ou 1.2 (sedentário) como fallback.\nconst fatorAtividadeAplicado = fatoresAtividade[nivelAtividade] || 1.2;\nlet calorias = tmb * fatorAtividadeAplicado;\n\n// --- AJUSTE DE CALORIAS PELO OBJETIVO ---\nif (objetivo === \"emagrecer\") {\n  calorias *= 0.8; // Reduz em 20%\n} else if (objetivo === \"ganhar\") {\n  calorias *= 1.15; // Aumenta em 15%\n}\ncalorias = Math.round(calorias); // Arredonda para o número inteiro mais próximo\n\n// --- CÁLCULO DOS MACRONUTRIENTES ---\nlet proteinaPorKg = 2.0; // Padrão\nlet gorduraPorKg = 0.8;  // Padrão\n\nif (objetivo === \"emagrecer\") {\n  proteinaPorKg = 2.2; // Maior para emagrecimento\n  gorduraPorKg = 0.7;  // Menor para emagrecimento\n} else if (objetivo === \"ganhar\") {\n  proteinaPorKg = 2.0; // Mantém\n  gorduraPorKg = 1.0;  // Um pouco mais para ganho\n}\n\nconst proteinas = Math.round(proteinaPorKg * peso);\nconst kcalProteinas = proteinas * 4; // 1g Proteína = 4 kcal\n\nconst gorduras = Math.round(gorduraPorKg * peso);\nconst kcalGorduras = gorduras * 9; // 1g Gordura = 9 kcal\n\n// Carboidratos preenchem o restante das calorias\nconst kcalRestantesParaCarboidratos = calorias - (kcalProteinas + kcalGorduras);\n// Garante que carboidratos não sejam negativos\nconst carboidratos = Math.max(0, Math.round(kcalRestantesParaCarboidratos / 4)); // 1g Carboidrato = 4 kcal\n\n// --- RETORNO DOS RESULTADOS ---\n// O N8N espera um array de objetos, onde cada objeto tem uma propriedade 'json'.\nreturn [\n  {\n    json: {\n      peso,\n      altura,\n      idade,\n      sexo,\n      objetivo,\n      nivelAtividade, // Nível de atividade final (pode ser o padrão 2)\n      tmb: Math.round(tmb), // Arredonda TMB para facilitar a leitura\n      fatorAtividadeAplicado, // O fator usado para o cálculo do GET\n      calorias, // Este é o GET final ajustado\n      proteinas,\n      carboidratos,\n      gorduras,\n      // Opcional: retornar as calorias de cada macronutriente para verificação\n      kcalProteinas,\n      kcalGorduras,\n      kcalCarboidratos: carboidratos * 4 // Calorias dos carboidratos\n    }\n  }\n];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        6020,
        2960
      ],
      "id": "24df40c5-7c05-40f8-b128-8fd853e60419",
      "name": "Code",
      "alwaysOutputData": false,
      "retryOnFail": true
    },
    {
      "parameters": {
        "tableId": "dietas",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "calorias_diarias",
              "fieldValue": "={{ $json.calorias }}"
            },
            {
              "fieldId": "proteina_gramas",
              "fieldValue": "={{ $json.proteinas }}"
            },
            {
              "fieldId": "carboidrato_gramas",
              "fieldValue": "={{ $json.carboidratos }}"
            },
            {
              "fieldId": "gordura_gramas",
              "fieldValue": "={{ $json.gorduras }}"
            },
            {
              "fieldId": "data_criacao",
              "fieldValue": "={{ $today }}"
            },
            {
              "fieldId": "usuario_telefone",
              "fieldValue": "={{ $('Webhook').item.json.body.phone }}"
            },
            {
              "fieldId": "usuario_id",
              "fieldValue": "={{ $('BUSCA USUÁRIO').item.json.id }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        6200,
        2960
      ],
      "id": "93c897f5-d0f4-4565-9175-2e9fa18a2e26",
      "name": "Supabase21",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3E1D888E8D8DE07F56022E7FADD21987/token/ED2BF32A855B887106BAAD09/send-text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "client-token",
              "value": "F60d85846fe6a4bfd986f72916b85da2fS"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $('Webhook').item.json.body.phone }}"
            },
            {
              "name": "message",
              "value": "=Sua dieta personalizada foi criada com sucesso! 🎉\n\nConfira os detalhes:\n- Calorias diárias: {{ $json.calorias_diarias }}kcal\n- Proteínas: {{ $json.proteina_gramas }}g\n- Carboidratos: {{ $json.carboidrato_gramas }}g\n- Gorduras: {{ $json.gordura_gramas }}g\n\nLembre-se que esta é uma estimativa. Para resultados ainda melhores, consulte um profissional de saúde.\n\nAgora você está quase pronto(a) para atingir os seus objetivos! \nPor favor, clique no link e execute o pagamento.\nhttps://buy.stripe.com/9B6dR97EPgkY95Q75z7IY0a"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        6380,
        2960
      ],
      "id": "4cd63091-b53e-479b-b3c3-be260887b14a",
      "name": "info dieta8",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "estados_conversa",
        "filters": {
          "conditions": [
            {
              "keyName": "usuario_telefone",
              "condition": "eq",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "estado_atual",
              "fieldValue": "fluxo_real"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        4800,
        3320
      ],
      "id": "1f8f5eb7-ab64-4036-a3a3-d75f4e4da3f3",
      "name": "Supabase24",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "estados_conversa",
        "filters": {
          "conditions": [
            {
              "keyName": "usuario_telefone",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -1820,
        -20
      ],
      "id": "336c9e7a-71ae-4fe0-8d8a-08f39d1dc052",
      "name": "BUSCA ESTADO_C",
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "92a936be-352b-499e-91fb-0dc9d50093a2",
              "leftValue": "={{ $json.estado_atual }}",
              "rightValue": "fluxo_real",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              }
            },
            {
              "id": "0ee50b0e-0b9c-48d7-b564-d07384519389",
              "leftValue": "={{ $json.estado_atual }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notExists",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {
          "ignoreCase": false
        }
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1660,
        -20
      ],
      "id": "afdfc049-e357-43f1-9b94-02c6e72a8199",
      "name": "Já passou pelo onboarding?"
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "dietas",
        "filters": {
          "conditions": [
            {
              "keyName": "usuario_telefone",
              "keyValue": "={{ $json.body.phone }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -1980,
        -20
      ],
      "id": "c80f7208-210b-4572-b0c5-d12e222bf23c",
      "name": "BUSCA DIETA",
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "users",
        "filters": {
          "conditions": [
            {
              "keyName": "telefone",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -800,
        -20
      ],
      "id": "bda36b10-3a6e-4247-bc85-12403877c35b",
      "name": "BUSCA USUÁRIO",
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cbc2dc42-22ff-4362-bfc6-cbebf8c9afa5",
              "leftValue": "={{ $json.telefone }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -500,
        -20
      ],
      "id": "dc5a479d-2e64-4f6b-93ef-bef33cf1a11c",
      "name": "primeira mensagem?"
    },
    {
      "parameters": {
        "tableId": "users",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "telefone",
              "fieldValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        160,
        320
      ],
      "id": "5a95e05e-fc23-498c-b9bb-2e7c5a08116d",
      "name": "Cria novo usuário",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "tableId": "estados_conversa",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "usuario_telefone",
              "fieldValue": "={{ $('Webhook').item.json.body.phone }}"
            },
            {
              "fieldId": "usuario_id",
              "fieldValue": "={{ $('Cria novo usuário').item.json.id }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        580,
        320
      ],
      "id": "905096c4-3b8c-409c-9a49-6dffbd461ade",
      "name": "Inicializa estados_conversa",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3E1D888E8D8DE07F56022E7FADD21987/token/ED2BF32A855B887106BAAD09/send-text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "client-token",
              "value": "F60d85846fe6a4bfd986f72916b85da2fS"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $('Webhook').item.json.body.phone }}"
            },
            {
              "name": "message",
              "value": "👋 Olá! Bem-vindo(a) ao CaloScan! Vamos personalizar sua experiência. Para começar, me diga seu nome completo."
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        780,
        320
      ],
      "id": "3c66f433-d9a1-43f2-95f7-c0b1c00e3aca",
      "name": "Pergunta nome",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "estados_conversa",
        "filters": {
          "conditions": [
            {
              "keyName": "usuario_telefone",
              "condition": "eq",
              "keyValue": "={{ $('Cria novo usuário').item.json.telefone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "estado_atual",
              "fieldValue": "aguardando_nome"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        960,
        320
      ],
      "id": "66e48188-e173-4058-b037-5294bd0f5367",
      "name": "Atualiza estado",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "users",
        "filters": {
          "conditions": [
            {
              "keyName": "telefone",
              "condition": "eq",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "nome",
              "fieldValue": "={{ $('Webhook').item.json.body.text.message }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        5440,
        -1480
      ],
      "id": "1ef3800c-e26b-43bf-8f22-40beeca5f363",
      "name": "guarda o nome",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3E1D888E8D8DE07F56022E7FADD21987/token/ED2BF32A855B887106BAAD09/send-text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "client-token",
              "value": "F60d85846fe6a4bfd986f72916b85da2fS"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $('Webhook').item.json.body.phone }}"
            },
            {
              "name": "message",
              "value": "=Sem problemas! Vamos criar sua dieta personalizada. Para isso, preciso de algumas informações.\n Qual a sua altura em centímetros? (exemplo: 175)"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5480,
        -240
      ],
      "id": "fd77bd7f-05ec-4580-b6b0-3678a031d8f8",
      "name": "Inicializa criação dieta",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "content": "Recebe infos dieta atual\n",
        "height": 1140,
        "width": 1820,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        4700,
        120
      ],
      "id": "6644a429-64cb-461a-a5b5-5f301566b5b4",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "Cria dieta\n",
        "height": 2000,
        "width": 2600,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        3960,
        1300
      ],
      "id": "6e159fe7-cfbe-4ef4-98c3-39ab29c78ef7",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3E1D888E8D8DE07F56022E7FADD21987/token/ED2BF32A855B887106BAAD09/send-text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "client-token",
              "value": "F60d85846fe6a4bfd986f72916b85da2fS"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $('Webhook').item.json.body.phone }}"
            },
            {
              "name": "message",
              "value": "=Perfeito, {{ $('Webhook').item.json.body.text.message }}! \nAgora, me conte: você já tem uma dieta estabelecida?  \n1️⃣ Sim, já tenho uma dieta definida  \n2️⃣ Não, preciso de ajuda para criar uma "
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5600,
        -1480
      ],
      "id": "dd4dd1b8-1ef1-419e-8ca4-538a69796c01",
      "name": "Já tem dieta?",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "e5493b26-c7a4-4353-95bb-c3aeba91201a",
              "leftValue": "",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        4640,
        -960
      ],
      "id": "f44b3548-00e6-4432-ab3c-46790b3a11e0",
      "name": "If"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "a69c037c-8a23-44bc-886b-607495687b60",
              "leftValue": "={{ $('Webhook').item.json.body.text.message }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            },
            {
              "id": "ccfffa42-5d62-4096-b05e-8d4f1ce7a66b",
              "leftValue": "={{ $json.valid }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        5460,
        240
      ],
      "id": "e12a4f61-2508-4ada-b4dd-9632b5dab5f4",
      "name": "If2"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "25a2d426-914b-4155-8a51-6d0ad050302d",
              "leftValue": "={{ $('Webhook').item.json.body.text.message }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            },
            {
              "id": "3f2d2383-429c-4539-b14a-3ec5dc8d9e8b",
              "leftValue": "={{ $json.valid }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        5460,
        480
      ],
      "id": "e1a87ede-c657-4ec1-8ef4-df927a651bc7",
      "name": "If3"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "7df40a8f-e45f-4b8e-9b53-1241779aadf1",
              "leftValue": "={{ $('Webhook').item.json.body.text.message }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            },
            {
              "id": "af9ff47e-63a1-40ad-aa2c-1fbc354fc397",
              "leftValue": "={{ $json.valid }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        5460,
        740
      ],
      "id": "4f6d488a-6232-4ad7-86aa-d3a36096b0d6",
      "name": "If4"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cba8d89d-a89a-44f8-88fa-3db23e2552f2",
              "leftValue": "={{ $('Webhook').item.json.body.text.message }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            },
            {
              "id": "adc2a7aa-6166-41ce-b623-9f6494bb434e",
              "leftValue": "={{ $json.valid }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        5380,
        1060
      ],
      "id": "b54cce53-c36d-413c-9e75-c736e6eb163b",
      "name": "If5"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "5fc2e957-0a47-4127-8f07-7299bd7210f0",
              "leftValue": "={{ $('Webhook').item.json.body.text.message }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            },
            {
              "id": "523b3b9c-58c3-46ad-bbb3-70c3caba8bcb",
              "leftValue": "={{ $json.valid }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        4940,
        1260
      ],
      "id": "e9ddf50a-064c-4b2c-8d38-9a88ae2e7aed",
      "name": "If6"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "a55ef95c-0d50-4e99-aa8c-e0db6b75768c",
              "leftValue": "={{ $('Webhook').item.json.body.text.message }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            },
            {
              "id": "2b41c78c-a672-4410-bb86-9e70f2c980ed",
              "leftValue": "={{ $json.valid }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        4940,
        1500
      ],
      "id": "69dfa7a3-d4ce-4d05-beaa-ef984a8d07a6",
      "name": "If7"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "7e96bc71-95f1-4faa-bd1d-bd44ea85576a",
              "leftValue": "={{ $('Webhook').item.json.body.text.message }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            },
            {
              "id": "809cc22f-2096-49b0-b3dd-edaca22101b9",
              "leftValue": "={{ $json.valid }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        4960,
        1840
      ],
      "id": "30a489ca-d086-487f-9f04-07780149bb41",
      "name": "If8"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "a2e94a2c-7ea9-4b2f-a364-7087b579d5a6",
              "leftValue": "={{ $('Webhook').item.json.body.text.message }}",
              "rightValue": "2",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            },
            {
              "id": "c3cd0cfa-7b27-4417-95cf-6a151c841bb9",
              "leftValue": "={{ $('Webhook').item.json.body.text.message }}",
              "rightValue": "=1",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        5020,
        2140
      ],
      "id": "55283631-eb9a-49e5-8997-dc82c04b7b33",
      "name": "If9"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "19a245e3-f13d-4b80-b128-1bb84cf9f868",
              "leftValue": "={{ $('Webhook').item.json.body.text.message }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        5020,
        2620
      ],
      "id": "017330b1-7cf1-48f0-864f-4bf06b841e7f",
      "name": "If10"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "30892285-c34b-48c6-a673-ef914efebd8f",
              "leftValue": "={{ $('Webhook').item.json.body.text.message }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        5020,
        2940
      ],
      "id": "948e0223-05fc-46ca-86c8-1ab17439027e",
      "name": "If11"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3E1D888E8D8DE07F56022E7FADD21987/token/ED2BF32A855B887106BAAD09/send-text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "client-token",
              "value": "F60d85846fe6a4bfd986f72916b85da2fS"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $('Webhook').item.json.body.phone }}"
            },
            {
              "name": "message",
              "value": "=Não entendi, mande novamente seus carboidratos diários mas seguindo estritamente o formato de exemplo (ex: 300)."
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5800,
        880
      ],
      "id": "ed7cdf0b-1f1c-452d-8d5b-4adfacdad0f3",
      "name": "qtd carbo1",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "estados_conversa",
        "filters": {
          "conditions": [
            {
              "keyName": "usuario_telefone",
              "condition": "eq",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "estado_atual",
              "fieldValue": "quantidade_carbo"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        5980,
        880
      ],
      "id": "46484fbc-0c99-4a32-8459-67deed380dbc",
      "name": "Supabase1",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "dietas",
        "filters": {
          "conditions": [
            {
              "keyName": "usuario_telefone",
              "condition": "eq",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "proteina_gramas",
              "fieldValue": "={{ $('Webhook').item.json.body.text.message }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        6200,
        880
      ],
      "id": "1533c4f4-6fdb-44ca-aedd-4911a3b1182e",
      "name": "Supabase3",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "dietas",
        "filters": {
          "conditions": [
            {
              "keyName": "usuario_telefone",
              "condition": "eq",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "calorias_diarias",
              "fieldValue": "={{ $('Webhook').item.json.body.text.message }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        6060,
        560
      ],
      "id": "688a29b1-5b8b-497d-ae5d-31606999396f",
      "name": "Supabase9",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3E1D888E8D8DE07F56022E7FADD21987/token/ED2BF32A855B887106BAAD09/send-text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "client-token",
              "value": "F60d85846fe6a4bfd986f72916b85da2fS"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $('Webhook').item.json.body.phone }}"
            },
            {
              "name": "message",
              "value": "=Não entendi, mande novamente suas proteínas diárias mas seguindo o formato de exemplo (ex: 200)."
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5720,
        560
      ],
      "id": "ec1548bb-54f6-4752-a045-c6023da31b01",
      "name": "qtd proteina1",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "estados_conversa",
        "filters": {
          "conditions": [
            {
              "keyName": "usuario_telefone",
              "condition": "eq",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "estado_atual",
              "fieldValue": "quantidade_proteina"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        5900,
        560
      ],
      "id": "d7000684-56e5-4db5-89f8-e97822a10010",
      "name": "update estado",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3E1D888E8D8DE07F56022E7FADD21987/token/ED2BF32A855B887106BAAD09/send-text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "client-token",
              "value": "F60d85846fe6a4bfd986f72916b85da2fS"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $('Webhook').item.json.body.phone }}"
            },
            {
              "name": "message",
              "value": "=Não entedi. Por favor, envie apenas o número correspondente ao seu peso em kilos(exemplo: 70)"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5280,
        1680
      ],
      "id": "edd9ff36-8708-4c68-af5a-b9e1a99bf9b2",
      "name": "info dieta",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "estados_conversa",
        "filters": {
          "conditions": [
            {
              "keyName": "usuario_telefone",
              "condition": "eq",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "estado_atual",
              "fieldValue": "info_peso"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        5500,
        1680
      ],
      "id": "cafa37fc-6da9-4738-a6b5-7005d8d1f159",
      "name": "update estado12",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "users",
        "filters": {
          "conditions": [
            {
              "keyName": "telefone",
              "condition": "eq",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "peso",
              "fieldValue": "={{ $('Webhook').item.json.body.text.message }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        5700,
        1680
      ],
      "id": "36f4fada-7025-4a4c-9c0e-ee92449b2a44",
      "name": "Supabase22",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3E1D888E8D8DE07F56022E7FADD21987/token/ED2BF32A855B887106BAAD09/send-text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "client-token",
              "value": "F60d85846fe6a4bfd986f72916b85da2fS"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $('Webhook').item.json.body.phone }}"
            },
            {
              "name": "message",
              "value": "=Não entendi. Envie apenas o número corresponde a sua idade(exemplo: 32)"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5320,
        2000
      ],
      "id": "736825ac-6cda-45c8-9e42-f3ed53d3c5ad",
      "name": "info dieta10",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "estados_conversa",
        "filters": {
          "conditions": [
            {
              "keyName": "usuario_telefone",
              "condition": "eq",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "estado_atual",
              "fieldValue": "info_idade"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        5540,
        2000
      ],
      "id": "d8ab01cd-e340-498f-88c6-85f80543b2bd",
      "name": "update estado13",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "users",
        "filters": {
          "conditions": [
            {
              "keyName": "telefone",
              "condition": "eq",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "peso",
              "fieldValue": "={{ $('Webhook').item.json.body.text.message }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        5720,
        2000
      ],
      "id": "d4371f4d-b64b-4fc1-a2bb-bc1b2aea094d",
      "name": "Supabase23",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3E1D888E8D8DE07F56022E7FADD21987/token/ED2BF32A855B887106BAAD09/send-text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "client-token",
              "value": "F60d85846fe6a4bfd986f72916b85da2fS"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $('Webhook').item.json.body.phone }}"
            },
            {
              "name": "message",
              "value": "=Não entendi. Insira apenas o número corresponte para cada sexo.\n 1️⃣ para masculino\n 2️⃣ para feminino"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5320,
        2380
      ],
      "id": "46aa29cc-5c8e-4f40-8967-2e7e704bc181",
      "name": "info dieta11",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "estados_conversa",
        "filters": {
          "conditions": [
            {
              "keyName": "usuario_telefone",
              "condition": "eq",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "estado_atual",
              "fieldValue": "info_sexo"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        5500,
        2380
      ],
      "id": "a2b7b21a-c891-465e-9ad3-d774227c071f",
      "name": "update estado14",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "users",
        "filters": {
          "conditions": [
            {
              "keyName": "telefone",
              "condition": "eq",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "idade",
              "fieldValue": "={{ $('Webhook').item.json.body.text.message }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        5660,
        2380
      ],
      "id": "5acfc43f-8619-482a-9f02-7f904a2792b1",
      "name": "Supabase26",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3E1D888E8D8DE07F56022E7FADD21987/token/ED2BF32A855B887106BAAD09/send-text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "client-token",
              "value": "F60d85846fe6a4bfd986f72916b85da2fS"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $('Webhook').item.json.body.phone }}"
            },
            {
              "name": "message",
              "value": "=Entendido! Agora, qual é o seu nível de atividade física?\n 1️⃣ Sedentário (pouco ou nenhum exercício)\n 2️⃣ Levemente ativo (exercício leve 1-3 dias/semana)\n 3️⃣ Moderadamente ativo (exercício moderado 3-5 dias/semana)\n 4️⃣ Muito ativo (exercício intenso 6-7 dias/semana)\n 5️⃣ Extremamente ativo (trabalho físico ou exercício muito intenso)"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5280,
        2780
      ],
      "id": "1fd00b42-dbc2-4635-96be-3a98641c439f",
      "name": "info dieta12",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "estados_conversa",
        "filters": {
          "conditions": [
            {
              "keyName": "usuario_telefone",
              "condition": "eq",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "estado_atual",
              "fieldValue": "info_atividade"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        5440,
        2780
      ],
      "id": "2abb6397-4e8a-42e6-83af-f01ca1d19b41",
      "name": "update estado15",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "users",
        "filters": {
          "conditions": [
            {
              "keyName": "telefone",
              "condition": "eq",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "sexo",
              "fieldValue": "={{ $('Webhook').item.json.body.text.message }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        5600,
        2780
      ],
      "id": "578bbcb2-10e1-4d58-8576-805339eb47b1",
      "name": "Supabase27",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3E1D888E8D8DE07F56022E7FADD21987/token/ED2BF32A855B887106BAAD09/send-text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "client-token",
              "value": "F60d85846fe6a4bfd986f72916b85da2fS"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $('Webhook').item.json.body.phone }}"
            },
            {
              "name": "message",
              "value": "=Entendido! Agora, qual é o seu principal objetivo?\n1️⃣ Emagrecer\n2️⃣ Manter o peso\n3️⃣ Ganhar massa muscular"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5300,
        3100
      ],
      "id": "4a9c212b-6f83-4cff-887b-eb3ba70940cd",
      "name": "info dieta13",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "estados_conversa",
        "filters": {
          "conditions": [
            {
              "keyName": "usuario_telefone",
              "condition": "eq",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "estado_atual",
              "fieldValue": "info_objetivo"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        5500,
        3100
      ],
      "id": "bc987b95-b010-4f59-bf0b-0be4f49cb673",
      "name": "update estado16",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "users",
        "filters": {
          "conditions": [
            {
              "keyName": "telefone",
              "condition": "eq",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "nivel_atividade",
              "fieldValue": "={{ $('Webhook').item.json.body.text.message }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        5680,
        3100
      ],
      "id": "22139238-b527-449e-a43e-c70839c2772e",
      "name": "Supabase28",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "tableId": "users",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "telefone",
              "fieldValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        5240,
        -880
      ],
      "id": "e5f25bfe-9cc6-40fc-89ff-9444e41e747c",
      "name": "Cria novo usuário1",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "tableId": "estados_conversa",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "usuario_telefone",
              "fieldValue": "={{ $('Webhook').item.json.body.phone }}"
            },
            {
              "fieldId": "usuario_id",
              "fieldValue": "={{ $('BUSCA USUÁRIO').item.json.id }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        5440,
        -880
      ],
      "id": "bfe15625-61a2-4f55-b9ff-997f8ebfba97",
      "name": "Inicializa estados_conversa1",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3E1D888E8D8DE07F56022E7FADD21987/token/ED2BF32A855B887106BAAD09/send-text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "client-token",
              "value": "F60d85846fe6a4bfd986f72916b85da2fS"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $('Webhook').item.json.body.phone }}"
            },
            {
              "name": "message",
              "value": "👋 Olá! Bem-vindo(a) ao CaloScan! Vamos personalizar sua experiência. Para começar, me diga seu nome completo."
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5640,
        -880
      ],
      "id": "23fe286b-9e68-498b-88be-be192dfd3e77",
      "name": "Pergunta nome1",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "estados_conversa",
        "filters": {
          "conditions": [
            {
              "keyName": "usuario_telefone",
              "condition": "eq",
              "keyValue": "={{ $('Cria novo usuário1').item.json.telefone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "estado_atual",
              "fieldValue": "aguardando_nome"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        5840,
        -880
      ],
      "id": "8cd00875-e518-4da6-aa2b-afa48923e6bf",
      "name": "Atualiza estado1",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "estados_conversa",
        "filters": {
          "conditions": [
            {
              "keyName": "usuario_telefone",
              "condition": "eq",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "estado_atual",
              "fieldValue": "info_altura"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        6180,
        1380
      ],
      "id": "a6801c1b-1376-4996-aa05-5bf53e8be6f6",
      "name": "update estado17",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3E1D888E8D8DE07F56022E7FADD21987/token/ED2BF32A855B887106BAAD09/send-text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "client-token",
              "value": "F60d85846fe6a4bfd986f72916b85da2fS"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $('Webhook').item.json.body.phone }}"
            },
            {
              "name": "message",
              "value": "=Não entendi.\nQual a sua altura em centímetros? (exemplo: 175)"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5840,
        1400
      ],
      "id": "934b0124-47ad-439e-a2b5-83e4f418af90",
      "name": "Inicializa criação dieta1",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3E1D888E8D8DE07F56022E7FADD21987/token/ED2BF32A855B887106BAAD09/send-text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "client-token",
              "value": "F60d85846fe6a4bfd986f72916b85da2fS"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $('Webhook').item.json.body.phone }}"
            },
            {
              "name": "message",
              "value": "=Estamos quase lá!\nPara ter acesso a todos os nossos benefícios, complete a assinatura através do link:\nhttps://buy.stripe.com/00wbJ1aR16Ko4PA61v7IY02"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5020,
        3320
      ],
      "id": "3ca24334-6a73-495f-9272-acd270b37703",
      "name": "info dieta14",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "users",
        "filters": {
          "conditions": [
            {
              "keyName": "telefone",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -1440,
        80
      ],
      "id": "9d6673c2-d10a-4802-af1a-38c75429123f",
      "name": "Supabase10",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "861eb2d7-2abd-43af-b6d1-1f82f1ef6f43",
              "leftValue": "={{ $json.assinatura_ativa }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1220,
        80
      ],
      "id": "3f170f0e-871a-467c-bfc3-30722493bf25",
      "name": "If12"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3E1D888E8D8DE07F56022E7FADD21987/token/ED2BF32A855B887106BAAD09/send-text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "client-token",
              "value": "F60d85846fe6a4bfd986f72916b85da2fS"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $('Webhook').item.json.body.phone }}"
            },
            {
              "name": "message",
              "value": "=Estamos quase lá!\nPara ter acesso a todos os nossos benefícios, complete a assinatura através do link:\nhttps://buy.stripe.com/00wbJ1aR16Ko4PA61v7IY02\n"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -5200,
        1340
      ],
      "id": "f21f4876-d4c6-4261-97a2-a5bb56d5c1f5",
      "name": "info dieta15",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "estados_conversa",
        "filters": {
          "conditions": [
            {
              "keyName": "usuario_telefone",
              "condition": "eq",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "estado_atual",
              "fieldValue": "aguardando_pagamento"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -4980,
        1340
      ],
      "id": "da6e7f30-50a6-41fc-bfa3-2065cc012dd6",
      "name": "Supabase29",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "amount": 300
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -4760,
        1340
      ],
      "id": "70f7aaf2-de9b-4e66-a318-f1b304fcec3c",
      "name": "Wait",
      "webhookId": "29b9ef6c-54e7-4f85-926a-f4773aba5c3e"
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "users",
        "filters": {
          "conditions": [
            {
              "keyName": "telefone",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -4540,
        1340
      ],
      "id": "e859cd0a-c115-44d2-8e80-fd68f6f9a7b1",
      "name": "Supabase30",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "df0cee08-b2ed-4cfe-ac60-9702bc0ebfb9",
              "leftValue": "={{ $json.assinatura_ativa }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -4320,
        1340
      ],
      "id": "341a36e2-4190-4bad-8c49-ff4275ab5307",
      "name": "If13"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3E1D888E8D8DE07F56022E7FADD21987/token/ED2BF32A855B887106BAAD09/send-text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "client-token",
              "value": "F60d85846fe6a4bfd986f72916b85da2fS"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $('Webhook').item.json.body.phone }}"
            },
            {
              "name": "message",
              "value": "=Não conseguimos identificar o seu pagamento...\nPara ter acesso a todos os nossos benefícios, complete a assinatura através do link:\nhttps://buy.stripe.com/00wbJ1aR16Ko4PA61v7IY02\n"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -4020,
        1680
      ],
      "id": "2539cab0-d47c-4fbf-8c8c-8b8a199a126a",
      "name": "info dieta17",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "estados_conversa",
        "filters": {
          "conditions": [
            {
              "keyName": "usuario_telefone",
              "condition": "eq",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "estado_atual",
              "fieldValue": "aguardando_pagamento"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -3860,
        1680
      ],
      "id": "9aacfcf7-e6fb-4eea-85f6-e78b3d9fed28",
      "name": "Supabase32",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "906511c9-457d-4610-961d-d817039a350c",
              "name": "body.messageId",
              "value": "={{ $('Webhook').item.json.body.messageId }}",
              "type": "string"
            },
            {
              "id": "59f45bf0-18d5-408d-bb51-448d2afccbc7",
              "name": "body.phone",
              "value": "={{ $('Webhook').item.json.body.phone }}",
              "type": "string"
            },
            {
              "id": "df0f1137-3fa2-4fbc-81e9-8e4d1dace7c0",
              "name": "body.chatName",
              "value": "={{ $('Webhook').item.json.body.chatName }}",
              "type": "string"
            },
            {
              "id": "aed460bc-bec5-4e9a-8c55-45247dc3478f",
              "name": "body.photo",
              "value": "={{ $('Webhook').item.json.body.photo }}",
              "type": "string"
            },
            {
              "id": "3ccd9ed9-d315-4b5c-b1d1-84d22fee88f2",
              "name": "body.image",
              "value": "={{ $('Webhook').item.json.body.image }}",
              "type": "object"
            },
            {
              "id": "19aae071-e4db-43f8-940e-f315dc43cd16",
              "name": "body.image.imageUrl",
              "value": "={{ $('Webhook').item.json.body.image.imageUrl }}",
              "type": "string"
            },
            {
              "id": "3bf4069e-8ae4-4d15-9bd9-4ff679a84f5d",
              "name": "body.image.thumbnailUrl",
              "value": "={{ $('Webhook').item.json.body.image.thumbnailUrl }}",
              "type": "string"
            },
            {
              "id": "a54c2772-da1c-4311-966c-44a4c9adf188",
              "name": "body.text",
              "value": "={{ $json.text }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -6480,
        3720
      ],
      "id": "03e59fe0-2e92-4a03-b02e-607dc9683279",
      "name": "Edit Fields1",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://barcode-scanner-production.up.railway.app/detect-flexible",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer 91c4c1f5-e612-4718-8d08-4777e73d8a15"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "image_url",
              "value": "={{ $('Webhook1').item.json.body.image.imageUrl }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -2200,
        3380
      ],
      "id": "f5aea03f-f2a8-49bf-9a6a-30c2258e55f6",
      "name": "barcode-scanner1",
      "alwaysOutputData": true,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "jsCode": "return items.map(item => {\n\t// --- Extrai e garante que são números ---\n\tconst {\n\t\tserving_quantity,\n\t\tfat_100g,\n\t\tcarbohydrates_100g,\n\t\tproteins_100g,\n\t} = item.json;\n\n\tconst porcao = Number(serving_quantity) || 0;\n\tconst fat100  = Number(fat_100g) || 0;\n\tconst carb100 = Number(carbohydrates_100g) || 0;\n\tconst prot100 = Number(proteins_100g) || 0;\n\n\t// --- Converte valores para a porção específica ---\n\tconst fator = porcao / 100;\n\tconst gordPorcao = +(fat100  * fator).toFixed(1);   // uma casa decimal\n\tconst carbPorcao = +(carb100 * fator).toFixed(1);\n\tconst protPorcao = +(prot100 * fator).toFixed(1);\n\n\t// --- Calcula calorias ---\n\tconst kcal = Math.round(gordPorcao*9 + (carbPorcao + protPorcao)*4);\n\n\t// --- Monta a frase no formato pedido ---\n\tconst prompt = `O produto tem ${porcao} g: ${kcal} kcal (${carbPorcao} g carb, ${protPorcao} g prot, ${gordPorcao} g gord). Deseja adicionar ao diário? (sim/não)`;\n\n\t// Anexa a nova chave ao item e devolve\n\titem.json.prompt = prompt;\n\treturn item;\n});"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1540,
        3180
      ],
      "id": "477c1910-6724-4f2b-9344-38bfbd1d376c",
      "name": "Code1"
    },
    {
      "parameters": {
        "collection": "products",
        "options": {},
        "query": "={\"code\": \"{{ $json.data.barcodeValue }}\"}"
      },
      "type": "n8n-nodes-base.mongoDb",
      "typeVersion": 1.1,
      "position": [
        -1760,
        3180
      ],
      "id": "31087501-f447-4eed-9f0d-c7dedbdd5b69",
      "name": "MongoDB",
      "credentials": {
        "mongoDb": {
          "id": "R0XB7GXfu4DVDkeF",
          "name": "MongoDB account 2"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Se a resposta for positiva, registre no Supabase o seguinte conteúdo:\n\nMensagem do usuário: {{ $('Code2').item.json.message }}\n\nPergunta correspondente: {{ $json.question }}\n\nUtilize esses dois campos como base para o registro no banco de dados.",
        "options": {
          "systemMessage": "A partir da mensagem escrita pelo usuário, extraia:\n\n- nome do alimento ou refeição\n- valor estimado de calorias\n- quantidade de proteínas, carboidratos e gorduras\n\nUse esses dados para preencher uma linha da tabela `registros_alimentares` no Supabase.\n\nRetorne apenas o corpo do JSON a ser enviado por POST para o endpoint REST do Supabase:\n\n```json\n{\n  \"nome_alimento\": \"<nome do alimento>\",\n  \"calorias\": <valor em kcal>,\n  \"carboidratos\": <gramas>,\n  \"proteinas\": <gramas>,\n  \"gorduras\": <gramas>\n}\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        -1380,
        4320
      ],
      "id": "20ebb654-0e96-4052-9bdb-8282cd1620cf",
      "name": "AI Agent",
      "executeOnce": true
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -1340,
        4540
      ],
      "id": "3b04e62d-ff12-40ff-9552-5678abc4db63",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "1GukOqQFTAL9y3Gf",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3E1D888E8D8DE07F56022E7FADD21987/token/ED2BF32A855B887106BAAD09/send-text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "client-token",
              "value": "F60d85846fe6a4bfd986f72916b85da2fS"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $('Webhook').item.json.body.phone }}"
            },
            {
              "name": "message",
              "value": "=Item adicionado ao log"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1000,
        4420
      ],
      "id": "c4194117-e66a-481a-9346-caa31431641f",
      "name": "HTTP Request3"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3E1D888E8D8DE07F56022E7FADD21987/token/ED2BF32A855B887106BAAD09/send-text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "client-token",
              "value": "F60d85846fe6a4bfd986f72916b85da2fS"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $('Webhook').item.json.body.phone }}"
            },
            {
              "name": "message",
              "value": "=Posso te ajudar de uma outra forma?"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -780,
        4420
      ],
      "id": "95c85697-ce4d-49aa-a598-93122dc9eb72",
      "name": "HTTP Request4"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('Code2').item.json.message }}",
        "options": {
          "systemMessage": "Você é uma nutricionista virtual altamente qualificada, com conhecimento avançado em nutrição, bioquímica, dietética, saúde metabólica e hábitos alimentares.\n\nSeu papel é orientar, educar e responder às dúvidas dos usuários com base em evidências científicas, usando uma linguagem amigável, clara e adaptada ao público geral.\n\n### Seu tom:\n- Profissional, mas acolhedor\n- Didático, sem ser técnico demais\n- Sem julgamentos ou imposições\n- Motivacional, quando apropriado\n\n### Seu objetivo:\nAjudar o usuário a compreender melhor a alimentação, tomar decisões mais conscientes e manter uma relação saudável com a comida.\n\n### Você pode:\n- Explicar diferenças entre alimentos (ex: arroz branco vs integral)\n- Avaliar escolhas alimentares (ex: “comi pão à noite, é ruim?”)\n- Estimar calorias e macronutrientes de refeições\n- Sugerir substituições mais saudáveis\n- Explicar conceitos como índice glicêmico, déficit calórico, jejum intermitente, etc.\n- Ajudar com metas como emagrecimento, ganho de massa ou alimentação consciente\n\n### Você não pode:\n- Prescrever dietas específicas ou recomendar suplementação medicamentosa\n- Fazer diagnóstico médico\n- Repreender o usuário\n\nSempre responda de forma humanizada, empática e fundamentada. Se não tiver dados suficientes para responder com confiança, diga isso com honestidade e oriente o usuário a procurar um nutricionista humano presencial.\n\nExemplos de respostas:\n- \"Essa escolha pode ser boa dependendo do seu objetivo! Posso te explicar as diferenças.\"\n- \"Sim, arroz integral tem mais fibras, o que ajuda na saciedade.\"\n- \"Se quiser perder peso, o ideal é manter um déficit calórico. Posso te ajudar a entender isso melhor.\"\n\n⚠️ Você está aqui para **educar e apoiar**, nunca para julgar.\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        -2600,
        5480
      ],
      "id": "88c7b974-0e8d-4f2b-a9e8-702597ab3dda",
      "name": "AI Agent1"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -2600,
        5700
      ],
      "id": "fa7ec333-de90-480a-b4e1-2883a0be5207",
      "name": "OpenAI Chat Model1",
      "credentials": {
        "openAiApi": {
          "id": "1GukOqQFTAL9y3Gf",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3E1D888E8D8DE07F56022E7FADD21987/token/ED2BF32A855B887106BAAD09/send-text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "client-token",
              "value": "F60d85846fe6a4bfd986f72916b85da2fS"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $('Webhook').item.json.body.phone }}"
            },
            {
              "name": "message",
              "value": "={{ $json.output }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -2220,
        5480
      ],
      "id": "535377f0-0fbd-40c9-93d3-a96b4e0f3af0",
      "name": "HTTP Request5"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3E1D888E8D8DE07F56022E7FADD21987/token/ED2BF32A855B887106BAAD09/send-text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "client-token",
              "value": "F60d85846fe6a4bfd986f72916b85da2fS"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $('Webhook').item.json.body.phone }}"
            },
            {
              "name": "message",
              "value": "={{ $json.originalMessage }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1100,
        3380
      ],
      "id": "75ee1291-295c-4cf1-a6a8-7e0b1077e546",
      "name": "Http Request retorna Mensagem para Wpp"
    },
    {
      "parameters": {
        "tableId": "pending_questions",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "phone",
              "fieldValue": "={{ $('Edit Fields1').item.json.body.phone }}"
            },
            {
              "fieldId": "question",
              "fieldValue": "={{ $('gpt-api-com-msg').item.json.choices[0].message.content }}"
            },
            {
              "fieldId": "status",
              "fieldValue": "Pending"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -880,
        3380
      ],
      "id": "b2ce933e-7f2c-435c-b759-7bb615c3a909",
      "name": "Supabase cria pending request",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3E1D888E8D8DE07F56022E7FADD21987/token/ED2BF32A855B887106BAAD09/send-text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "client-token",
              "value": "F60d85846fe6a4bfd986f72916b85da2fS"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $('Webhook').item.json.body.phone }}"
            },
            {
              "name": "message",
              "value": "={{ $json.prompt }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1320,
        3180
      ],
      "id": "c80b00d9-fee9-4b62-8176-7cbcd278c058",
      "name": "HTTP Request retorna macros para wpp"
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $('Edit Fields1').item.json.body.phone }}",
        "messageData": "={{ JSON.stringify({ \n  ...$('Edit Fields1').item.json.body, \n  timestamp: Date.now(),\n  created_at: $json.formattedDate\n}) }}"
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -6040,
        3720
      ],
      "id": "8c6b8b9f-6bed-411a-8518-42930e59f610",
      "name": "Redis",
      "credentials": {
        "redis": {
          "id": "SorfswMQy49pOxNc",
          "name": "Redis account 2"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "key": "={{ $('Edit Fields1').item.json.body.phone }}",
        "options": {}
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -5300,
        4420
      ],
      "id": "c9ce3ec4-cf18-491d-8304-343888818c81",
      "name": "Redis1",
      "credentials": {
        "redis": {
          "id": "SorfswMQy49pOxNc",
          "name": "Redis account 2"
        }
      }
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "={{ $('Code2').item.json.phoneNumber }}"
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -4420,
        4180
      ],
      "id": "9f3de2fb-f82e-4f10-9ade-05ca9bc57e4d",
      "name": "Redis2",
      "credentials": {
        "redis": {
          "id": "SorfswMQy49pOxNc",
          "name": "Redis account 2"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -4860,
        4440
      ],
      "id": "4f1fc71e-b82b-41ca-9da8-11c66d5ee038",
      "name": "No Operation, do nothing"
    },
    {
      "parameters": {
        "jsCode": "const rawMessages = $input.first().json.propertyName;\n\n// 1. Parsear as strings JSON, filtrando as que forem inválidas\nconst parsed = rawMessages\n  .map(str => {\n    try { return JSON.parse(str); }\n    catch { return null; }\n  })\n  .filter(Boolean);\n\n// 2. Encontrar a URL da imagem mais recente.\n// A sua lógica está correta, pois o array já vem ordenado do mais novo para o mais antigo.\n// O primeiro item com imagem que o loop encontrar será o mais recente.\nlet latestImageUrl = null;\nfor (const msg of parsed) {\n  if (msg.image?.imageUrl) {\n    latestImageUrl = msg.image.imageUrl;\n    break; // Encontrou a mais recente, pode parar o loop\n  }\n}\n\n// 3. Extrair um único número de telefone (são todos iguais)\nconst phoneNumber = parsed.length > 0 ? parsed[0].phone : null;\n\n// 4. Concatenar todas as mensagens de texto da MAIS ANTIGA para a MAIS NOVA\nconst message = [...parsed] // Cria uma cópia para não alterar o array 'parsed'\n  .reverse() // Inverte para ordenar da mais antiga para a mais nova\n  .map(msg => {\n    // LÓGICA CORRIGIDA: Verifica a estrutura {\"text\": {\"message\": \"...\"}}\n    if (msg.text?.message) {\n      return msg.text.message;\n    }\n    // Mantém a verificação para outras possíveis estruturas\n    if (typeof msg.text === 'string') {\n      return msg.text;\n    }\n    return ''; // Retorna string vazia para mensagens sem texto (ex: só imagem)\n  })\n  .filter(text => text) // Remove as strings vazias\n  .join(' '); // Junta todas as mensagens com um espaço\n\n// 5. Retornar o objeto final\nreturn [{\n  json: {\n    message: message || null, // Retorna a string ou nulo se não houver mensagens\n    imageUrl: latestImageUrl,\n    phoneNumber: phoneNumber\n  }\n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -4860,
        4180
      ],
      "id": "e137ab1c-0b99-46a1-a48b-de505ba90515",
      "name": "Code2"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.propertyName.length }}",
                    "rightValue": 5,
                    "operator": {
                      "type": "number",
                      "operation": "gte"
                    },
                    "id": "9f965796-dc0d-494a-9230-073bd8817904"
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ JSON.parse($json.propertyName[0]).timestamp }}",
                    "rightValue": "={{ Date.now() - 5000 }}",
                    "operator": {
                      "type": "number",
                      "operation": "lte"
                    },
                    "id": "eeebb6dc-eb66-44fd-ae07-f0fc7470039e"
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -5080,
        4340
      ],
      "id": "ecf9325f-32d0-4bb7-9bb2-b5cc6c1023db",
      "name": "Switch2"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3E1D888E8D8DE07F56022E7FADD21987/token/ED2BF32A855B887106BAAD09/send-text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "client-token",
              "value": "F60d85846fe6a4bfd986f72916b85da2fS"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $('Code2').item.json.phoneNumber }}"
            },
            {
              "name": "message",
              "value": "={{ $json.correctedMessage }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1100,
        3580
      ],
      "id": "40e970e8-ef3b-4222-bdf2-fbfcd4ab129e",
      "name": "Http Request retorna Mensagem para Wpp1"
    },
    {
      "parameters": {
        "tableId": "pending_questions",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "phone",
              "fieldValue": "={{ $('Edit Fields1').item.json.body.phone }}"
            },
            {
              "fieldId": "question",
              "fieldValue": "={{ $('Code7').item.json.correctedMessage }}"
            },
            {
              "fieldId": "status",
              "fieldValue": "Pending"
            },
            {
              "fieldId": "calories",
              "fieldValue": "={{ $('Code7').item.json.calories.calculated }}"
            },
            {
              "fieldId": "protein",
              "fieldValue": "={{ $('Code7').item.json.nutritionalBreakdown.proteins.grams }}"
            },
            {
              "fieldId": "carbs",
              "fieldValue": "={{ $('Code7').item.json.nutritionalBreakdown.carbs.grams }}"
            },
            {
              "fieldId": "fat",
              "fieldValue": "={{ $('Code7').item.json.nutritionalBreakdown.fats.grams }}"
            },
            {
              "fieldId": "food_name",
              "fieldValue": "={{ $('Code7').item.json.name }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -880,
        3580
      ],
      "id": "b1c57aa4-7ed2-48b9-a4fc-dc7c6792f888",
      "name": "Supabase cria pending request1",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3E1D888E8D8DE07F56022E7FADD21987/token/ED2BF32A855B887106BAAD09/send-text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "client-token",
              "value": "F60d85846fe6a4bfd986f72916b85da2fS"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $('Webhook').item.json.body.phone }}"
            },
            {
              "name": "message",
              "value": "Deseja adicionar esta refeição ao relatório?"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -660,
        3580
      ],
      "id": "46471b60-95e6-45d0-9629-47c574b8d6b5",
      "name": "Http Request retorna Mensagem para Wpp2"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3E1D888E8D8DE07F56022E7FADD21987/token/ED2BF32A855B887106BAAD09/send-text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "client-token",
              "value": "F60d85846fe6a4bfd986f72916b85da2fS"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $('Webhook').item.json.body.phone }}"
            },
            {
              "name": "message",
              "value": "Deseja adicionar esta refeição ao relatório?"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -660,
        3380
      ],
      "id": "1538b2bc-35aa-4b51-beca-72d281949af9",
      "name": "Http Request retorna Mensagem para Wpp3"
    },
    {
      "parameters": {
        "jsCode": "const currentCounter = parseInt($execution.customData.get('counter') || '0');\n$execution.customData.set('counter', (currentCounter + 1).toString());\n\nreturn {\n  json: {\n    counter: currentCounter + 1,\n    item: $input.first().json // pass through your loop data\n  }\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -4640,
        4440
      ],
      "id": "76fee5d8-57d3-47b2-a2bb-3dc75b66b095",
      "name": "Code3"
    },
    {
      "parameters": {
        "jsCode": "$execution.customData.set('counter', '0');\n\nreturn {\n  json: {\n    message: \"Counter initialized to 0\"\n  }\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -5600,
        3720
      ],
      "id": "24bd93a2-3c39-473a-acc3-48f5b28cefba",
      "name": "Code4"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -4200,
        4380
      ],
      "id": "99e0dedf-f1c1-41cc-9e51-9935e199c51d",
      "name": "No Operation, do nothing1"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3E1D888E8D8DE07F56022E7FADD21987/token/ED2BF32A855B887106BAAD09/send-text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "client-token",
              "value": "F60d85846fe6a4bfd986f72916b85da2fS"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $('Webhook').item.json.body.phone }}"
            },
            {
              "name": "message",
              "value": "Calculando..."
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -2420,
        3380
      ],
      "id": "fc15070e-6a4b-4c8f-925e-34a83b6c64bb",
      "name": "Http Request retorna Mensagem para Wpp4"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3E1D888E8D8DE07F56022E7FADD21987/token/ED2BF32A855B887106BAAD09/send-text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "client-token",
              "value": "F60d85846fe6a4bfd986f72916b85da2fS"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $('Webhook').item.json.body.phone }}"
            },
            {
              "name": "message",
              "value": "Adicionando..."
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -2480,
        4560
      ],
      "id": "4033ff5b-28f8-4b87-a073-f2f2dbc751d9",
      "name": "Http Request retorna Mensagem para Wpp5"
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "users",
        "filters": {
          "conditions": [
            {
              "keyName": "telefone",
              "keyValue": "={{ $('Switch1').item.json.phone }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -2300,
        4560
      ],
      "id": "79214fc4-77e6-43bd-9e4e-cc313b99b697",
      "name": "get-user-id",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "pending_questions",
        "filters": {
          "conditions": [
            {
              "keyName": "phone",
              "condition": "eq",
              "keyValue": "={{ $json.telefone }}"
            },
            {
              "keyName": "status",
              "condition": "eq",
              "keyValue": "Pending "
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "status",
              "fieldValue": "Processing "
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -2160,
        4560
      ],
      "id": "869fa7aa-4121-4d5e-80ab-481cf64f12f9",
      "name": "get-message",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "jsCode": "function determineMealType(currentTime, existingMeals) {\n  const timeToMinutes = (timeStr) => {\n    if (!timeStr || typeof timeStr !== 'string') {\n      return 0; // Default to midnight if invalid\n    }\n    const [hours, minutes] = timeStr.split(':').map(Number);\n    return hours * 60 + minutes;\n  };\n  \n  const currentMinutes = timeToMinutes(currentTime);\n  const morningCutoff = 11 * 60 + 30; // 11:30\n  const afternoonCutoff = 18 * 60 + 30; // 18:30\n  \n  let mealType;\n  \n  if (currentMinutes < morningCutoff) {\n    // Morning period\n    const morningMeals = existingMeals.filter(meal => {\n      if (!meal || !meal.hora_consumo) return false;\n      const mealMinutes = timeToMinutes(meal.hora_consumo);\n      return mealMinutes < morningCutoff;\n    });\n    \n    const count = morningMeals.length + 1;\n    mealType = count === 1 ? 'cafe da manha' : `lanche da manha ${count - 1}`;\n    \n  } else if (currentMinutes < afternoonCutoff) {\n    // Afternoon period\n    const afternoonMeals = existingMeals.filter(meal => {\n      if (!meal || !meal.hora_consumo) return false;\n      const mealMinutes = timeToMinutes(meal.hora_consumo);\n      return mealMinutes >= morningCutoff && mealMinutes < afternoonCutoff;\n    });\n    \n    const count = afternoonMeals.length + 1;\n    mealType = count === 1 ? 'almoco' : `lanche da tarde ${count - 1}`;\n    \n  } else {\n    // Evening period\n    const eveningMeals = existingMeals.filter(meal => {\n      if (!meal || !meal.hora_consumo) return false;\n      const mealMinutes = timeToMinutes(meal.hora_consumo);\n      return mealMinutes >= afternoonCutoff;\n    });\n    \n    const count = eveningMeals.length + 1;\n    mealType = count === 1 ? 'jantar' : `lanche da noite ${count - 1}`;\n  }\n  \n  return mealType;\n}\n\n// Get data from previous nodes using correct n8n syntax\nconst nutritionData = $('nutrition-extractor').first().json;\nconst existingMealsData = $('Supabase35').first().json;\n\n// Get current time in Brazil timezone (UTC-3)\nconst now = new Date();\nconst brazilTime = new Date(now.getTime() - (3 * 60 * 60 * 1000)); // UTC-3\nconst currentTime = brazilTime.toTimeString().split(' ')[0].substring(0, 5);\n\n// Handle the case where existingMealsData might be an array or single object\nlet existingMeals = [];\nif (Array.isArray(existingMealsData)) {\n  existingMeals = existingMealsData;\n} else if (existingMealsData) {\n  existingMeals = [existingMealsData];\n}\n\nconst mealType = determineMealType(currentTime, existingMeals);\n\nreturn [{\n  json: {\n    ...nutritionData,\n    tipo_refeicao: mealType,\n    data_consumo: new Date().toISOString().split('T')[0],\n    hora_consumo: currentTime\n  }\n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -780,
        4720
      ],
      "id": "1ccd9eca-e115-4ec7-9ac3-b625705cb675",
      "name": "Code5"
    },
    {
      "parameters": {
        "jsCode": "function extractNutrition(text) {\n  const nutrition = {\n    calories: 0,\n    carbs: 0,\n    proteins: 0,\n    fats: 0\n  };\n  \n  // Check if text exists and is a string\n  if (!text || typeof text !== 'string') {\n    return nutrition;\n  }\n  \n  // Calories patterns\n  const caloriesRegex = /(?:calorias?|kcal|energia)\\s*:?\\s*~?(\\d+(?:[.,]\\d+)?)/i;\n  const caloriesMatch = text.match(caloriesRegex);\n  if (caloriesMatch) nutrition.calories = parseFloat(caloriesMatch[1].replace(',', '.'));\n  \n  // Carbs patterns\n  const carbsRegex = /(?:carboidratos?|carbs?)\\s*:?\\s*~?(\\d+(?:[.,]\\d+)?)g?/i;\n  const carbsMatch = text.match(carbsRegex);\n  if (carbsMatch) nutrition.carbs = parseFloat(carbsMatch[1].replace(',', '.'));\n  \n  // Proteins patterns\n  const proteinsRegex = /(?:proteínas?|proteins?)\\s*:?\\s*~?(\\d+(?:[.,]\\d+)?)g?/i;\n  const proteinsMatch = text.match(proteinsRegex);\n  if (proteinsMatch) nutrition.proteins = parseFloat(proteinsMatch[1].replace(',', '.'));\n  \n  // Fats patterns\n  const fatsRegex = /(?:gorduras?|fats?|lipídios?)\\s*:?\\s*~?(\\d+(?:[.,]\\d+)?)g?/i;\n  const fatsMatch = text.match(fatsRegex);\n  if (fatsMatch) nutrition.fats = parseFloat(fatsMatch[1].replace(',', '.'));\n  \n  return nutrition;\n}\n\n// Get the question field from your JSON input\nconst message = $input.first().json.question;\n\n// Extract nutrition data\nconst extractedData = extractNutrition(message);\n\nreturn [{\n  json: {\n    ...extractedData,\n    original_message: message,\n    extraction_method: 'regex',\n    extracted_at: new Date().toISOString(),\n    // Keep original data for reference\n    id: $input.first().json.id,\n    phone: $input.first().json.phone,\n    status: $input.first().json.status\n  }\n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1740,
        4560
      ],
      "id": "ef04854f-4e4d-4181-8864-3580dbd3a6c5",
      "name": "nutrition-extractor"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3E1D888E8D8DE07F56022E7FADD21987/token/ED2BF32A855B887106BAAD09/send-text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "client-token",
              "value": "F60d85846fe6a4bfd986f72916b85da2fS"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $('nutrition-extractor').item.json.phone }}"
            },
            {
              "name": "message",
              "value": "=Item adicionado ao relatório"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -360,
        4720
      ],
      "id": "9486faae-cdd5-45a7-9d24-c52ecce6ceef",
      "name": "HTTP Request"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "e61db71f-6cc8-4eac-8e8d-2f31e18b6a83",
              "leftValue": "={{ $json.data.barcodeValue }}",
              "rightValue": "=",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1980,
        3380
      ],
      "id": "3c918773-1b69-4055-bbb8-fd2116120f30",
      "name": "If-chaca-barcode"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "b99fd8fd-a371-42d8-a4a1-6cf909484252",
              "leftValue": "={{ $('Code2').item.json.message }}",
              "rightValue": "={{null}}",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1760,
        3480
      ],
      "id": "1048a352-2117-4427-a7ef-a332e923b51a",
      "name": "If-checa-mensagem"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.openai.com/v1/chat/completions",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer 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"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"model\": \"gpt-4o\",\n  \"messages\": [\n    {\n      \"role\": \"system\",\n      \"content\": \"*Prompt para Análise Nutricional - Logger de Comida*\\n\\nVocê é um nutricionista virtual especialista em análise de pratos via WhatsApp. Ao receber a imagem de uma refeição, siga rigorosamente este processo:\\n\\n---\\n\\n**PASSO 1: IDENTIFICAÇÃO DO PRATO**\\n- Liste cada alimento visível na foto\\n- Estime o peso aproximado de cada item em gramas (g)\\n- Use porções típicas e bom senso visual\\n\\n**PASSO 2: CÁLCULO NUTRICIONAL DETALHADO**\\nPara cada alimento identificado, informe os seguintes valores por 100g:\\n- Calorias (kcal)\\n- Carboidratos (g)\\n- Proteínas (g)\\n- Gorduras (g)\\n\\n**PASSO 3: CÁLCULO TOTAL PROPORCIONAL**\\nCom base na estimativa de peso, calcule os macros e calorias proporcionais de cada item e faça a soma total da refeição.\\n\\n**PASSO 4: RESPOSTA FINAL - FORMATO WHATSAPP**\\nA resposta final deve ser leve, amigável e com emojis. SIGA ESTE FORMATO EXATO de exemplo:\\n\\n---\\n\\n*Exemplo de resposta desejada:*\\n\\n\\\"Que prato gostoso! 🔎 Vejo aqui arroz branco (~150g) e carne moída com molho (~100g).\\n\\n**Resumo nutricional:**\\n🔥 Calorias: ~556 kcal\\n🌾 Carboidratos: ~50g\\n💪 Proteínas: ~25g\\n🥑 Gorduras: ~25g\\n\\nQuer que eu adicione essa refeição ao seu relatório de hoje? 📝\\\"\\n\\n---\\n\\n**REGRAS IMPORTANTES:**\\n- Não invente alimentos que não aparecem claramente na imagem\\n- Use linguagem simples e prática\\n- Use negrito nos valores principais (calorias, macros)\\n- Use emojis para deixar o texto leve\\n- Tamanho máximo de resposta: 2 a 3 parágrafos\\n- Inclua sempre a pergunta final sobre adicionar ao log\\n- Seja direto e objetivo\\n- O estilo e tom devem seguir o exemplo acima\\n\\nA saída precisa estar pronta para ser enviada ao WhatsApp, sem necessidade de ajustes.\"\n    },\n    {\n      \"role\": \"user\",\n      \"content\": [\n        {\n          \"type\": \"image_url\",\n          \"image_url\": {\n            \"url\": \"{{ $('Code2').item.json.imageUrl }}\"\n          }\n        }\n      ]\n    }\n  ],\n  \"max_tokens\": 500\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1540,
        3580
      ],
      "id": "dfa1e9e8-ec78-4c47-b894-cf83a1a6294b",
      "name": "gpt-api-sem-msg"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.openai.com/v1/chat/completions",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer 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"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"model\": \"gpt-4o\",\n  \"messages\": [\n    {\n      \"role\": \"system\",\n      \"content\": \"*Prompt para Análise Nutricional – Logger de Comida*\\n\\nVocê é um nutricionista virtual especializado em análise de pratos via *WhatsApp*. Ao receber a imagem de uma refeição, faça sua análise interna completa mas RESPONDA APENAS com o resultado final formatado para o usuário.\\n\\n*PROCESSO INTERNO (NÃO MOSTRAR):*\\n1. Identifique cada alimento e estime pesos em gramas\\n2. Calcule valores nutricionais por 100g de cada item\\n3. Calcule valores proporcionais ao peso estimado\\n4. Some todos os valores\\n\\n*RESPOSTA FINAL (FORMATO OBRIGATÓRIO):*\\nApenas envie uma mensagem com:\\n1. Frase animada com emoji\\n2. Descrição breve do prato identificado\\n3. Resumo nutricional total com emojis específicos:\\n   - 🔥 *XXX kcal* (calorias)\\n   - 💪 *XXg* (proteínas) \\n   - 🥑 *XXg* (gorduras)\\n   - 🌾 *XXg* (carboidratos)\\n4. Pergunta final: \\\"Quer que eu adicione essa refeição ao seu log de hoje? 📝\\\"\\n\\n*DIRETRIZES OBRIGATÓRIAS:*\\n- NÃO mostre seu processo de pensamento ou cálculos\\n- NÃO liste ingredientes individuais ou pesos\\n- NÃO explique sua metodologia\\n- APENAS envie a resposta final formatada\\n- Use *negrito* para os valores numéricos\\n- Máximo 4 linhas de texto para mobile\\n- Linguagem casual e amigável\"\n    },\n    {\n      \"role\": \"user\",\n      \"content\": [\n        {\n          \"type\": \"text\",\n          \"text\": \"{{ $('Code2').item.json.message }}\"\n        },\n        {\n          \"type\": \"image_url\",\n          \"image_url\": {\n            \"url\": \"{{ $('Code2').item.json.imageUrl }}\"\n          }\n        }\n      ]\n    }\n  ],\n  \"max_tokens\": 500\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1540,
        3380
      ],
      "id": "ad3dc3e3-168c-4a31-a4dc-8f5c95a989f0",
      "name": "gpt-api-com-msg"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "202af928-a324-411a-bf15-68a349e7bf9e",
                    "leftValue": "={{ $('Webhook').item.json.body.audio }}",
                    "rightValue": "",
                    "operator": {
                      "type": "object",
                      "operation": "exists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "audio"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Webhook').item.json.body.text }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "exists",
                      "singleValue": true
                    },
                    "id": "08fd0c80-307e-4f45-b1de-35192ee4ec5e"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "ebc3bf39-edd8-4ca2-b2cd-260ea6e89b28",
                    "leftValue": "={{ $('Webhook').item.json.body.image.imageUrl }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "exists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "image"
            }
          ]
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -7360,
        3720
      ],
      "id": "02aad744-5f0c-4118-bd2d-030621a341a9",
      "name": "Check Input Type"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "c05a7fbf-309a-407e-9fee-7e0b03f4a5c8",
              "name": "text",
              "value": "={{ $('Webhook').item.json.body.text.message }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -6900,
        3800
      ],
      "id": "bb3ebb40-34f8-4b86-a988-e0b71e7825ef",
      "name": "Text Only Prompt"
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "binaryPropertyName": "audio",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        -6920,
        3620
      ],
      "id": "296eb98e-59c0-41a1-a370-8c98eb847c53",
      "name": "Transcribe Audio",
      "credentials": {
        "openAiApi": {
          "id": "1GukOqQFTAL9y3Gf",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "219577d5-b028-48fc-90be-980f4171ab68",
              "name": "text",
              "value": "={{ $json.text }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -6700,
        3620
      ],
      "id": "e2890651-cb56-4f80-b9df-917e54f700e3",
      "name": "Audio Prompt"
    },
    {
      "parameters": {
        "url": "={{ $('Webhook').item.json.body.audio.audioUrl }}",
        "options": {
          "response": {
            "response": {
              "responseFormat": "file",
              "outputPropertyName": "audio"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -7140,
        3620
      ],
      "id": "cd31748f-3c55-4ef6-be79-27c6576342e7",
      "name": "Download Z-API Audio"
    },
    {
      "parameters": {
        "jsCode": "// Loop over input items and add a new field called 'myNewField' to the JSON of each one\n\n//valores iniciais\nlet totais = {\n  calorias : 0,\n  carboidratos : 0,\n  proteinas : 0,\n  gorduras : 0\n};\n\n\n// somatório das refeições\nfor (const item of items) {\n  const r = item.json;\n  totais.calorias += r.calorias;\n  totais.carboidratos += r.carboidratos;\n  totais.proteinas += r.proteinas;\n  totais.gorduras += r.gorduras;\n  \n}\n\n// json com os valores totais \nreturn totais;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4020,
        5060
      ],
      "id": "05e379a9-e6ad-49fa-ab7e-78b2a818a6b8",
      "name": "Calculo dos totais"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3E1D888E8D8DE07F56022E7FADD21987/token/ED2BF32A855B887106BAAD09/send-text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "client-token",
              "value": "F60d85846fe6a4bfd986f72916b85da2fS"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $json.phone }}"
            },
            {
              "name": "message",
              "value": "={{ $json.text }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5060,
        5420
      ],
      "id": "bcc7f1cd-7202-42a4-88d4-2ef6d706b535",
      "name": "enviar o historico",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "dietas",
        "filters": {
          "conditions": [
            {
              "keyName": "usuario_telefone",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        2700,
        5160
      ],
      "id": "3da540de-d6b7-46f4-8d6d-de867de1aff1",
      "name": "Busca dieta",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "operation": "getAll",
        "tableId": "registros_alimentares",
        "returnAll": true,
        "filterType": "=manual",
        "matchType": "allFilters",
        "filters": {
          "conditions": [
            {
              "keyName": "usuario_id",
              "condition": "eq",
              "keyValue": "={{ $('BUSCA DIETA').item.json.usuario_id }}"
            },
            {
              "keyName": "data_consumo",
              "condition": "eq",
              "keyValue": "={{DateTime.now() }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        2960,
        5160
      ],
      "id": "6044ff76-50ee-4b78-8d32-8c575b31f5b8",
      "name": "Busca historico diario",
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {},
      "name": "Unir Metas e Totais",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2,
      "position": [
        4820,
        5420
      ],
      "id": "4bf623ce-d468-47a5-82eb-1fe16baa0847"
    },
    {
      "parameters": {
        "jsCode": "let resposta = \"📊 Registros alimentares do dia:\\n\\n\";\n\nfor (const item of items) {\n  const r = item.json;\n  resposta += `🍽️ Refeição: ${r.tipo_refeicao}\\n`;\n  resposta += `🍛 Alimento: ${r.nome_alimento}\\n`;\n  resposta += `🔥 Calorias: ${r.calorias} kcal\\n`;\n  resposta += `🥖 Carboidratos: ${r.carboidratos}g\\n`;\n  resposta += `🥩 Proteínas: ${r.proteinas}g\\n`;\n  resposta += `🧈 Gorduras: ${r.gorduras}g\\n`;\n  resposta += `🕒 Hora: ${r.hora_consumo}\\n\\n`;\n}\n\nreturn [{ json: { text: resposta, phone: $('Webhook').first().json.body.phone } }];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4160,
        5820
      ],
      "id": "a3aa419d-3412-476b-85c1-186d92afd669",
      "name": "Monta histórico dos registros"
    },
    {
      "parameters": {
        "jsCode": "const dados_dieta = $('Busca dieta').first().json;\nconst dados_consumidos = $('Calculo dos totais').first().json;\n \n\n\nfunction avaliar(consumido, meta, unidade = \"g\") {\n  const diff = consumido - meta;\n  if (diff < 0) {\n    return `${consumido}${unidade} / ${meta}${unidade} → Faltam ${Math.abs(diff)}${unidade}`;\n  } else if (diff === 0) {\n    return `${consumido}${unidade} / ${meta}${unidade} → Meta atingida! 🎯`;\n  } else {\n    return `${consumido}${unidade} / ${meta}${unidade} → Excedeu em ${diff}${unidade} ⚠️`;\n  }\n}\n\nlet resposta = \"📊 Comparativo da dieta diária:\\n\\n\";\nresposta += `🔥 Calorias: ${avaliar(dados_consumidos.calorias, dados_dieta.calorias_diarias, \" kcal\")}\\n`;\nresposta += `🥖 Carboidratos: ${avaliar(dados_consumidos.carboidratos, dados_dieta.carboidrato_gramas)}\\n`;\nresposta += `🥩 Proteínas: ${avaliar(dados_consumidos.proteinas, dados_dieta.proteina_gramas)}\\n`;\nresposta += `🧈 Gorduras: ${avaliar(dados_consumidos.gorduras, dados_dieta.gordura_gramas)}\\n`;\n\nreturn [{ json: { text: resposta,\n                phone: dados_dieta.usuario_telefone} }];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4620,
        5060
      ],
      "id": "2c54978a-1f4f-41ef-bb3e-2557d7329f18",
      "name": "Compara com a dieta",
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "inputText": "={{ $('Code2').item.json.message }}",
        "options": {
          "categories": "Quer Relatorio, não quer relatorio"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.sentimentAnalysis",
      "typeVersion": 1,
      "position": [
        -3620,
        5140
      ],
      "id": "3763c80f-7529-4ce1-a0a7-4b7216ad4b73",
      "name": "Sentiment Analysis1"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -3640,
        5440
      ],
      "id": "88d8f7f4-6c40-418b-9a9a-6f6107f55693",
      "name": "OpenAI Chat Model3",
      "credentials": {
        "openAiApi": {
          "id": "1GukOqQFTAL9y3Gf",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Code2').item.json.imageUrl }}",
                    "rightValue": "={{ null }}",
                    "operator": {
                      "type": "string",
                      "operation": "notEquals"
                    },
                    "id": "339fe544-e0ad-4616-95e4-e3ea4f827f06"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Image"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "da1a564a-5c9b-48f8-ad18-da4df85d58cf",
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "=Pending",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Response"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "95820790-3755-4e65-b02b-0d517829ce4d",
                    "leftValue": "={{ $('Code2').item.json.message }}",
                    "rightValue": "={{ null }}",
                    "operator": {
                      "type": "string",
                      "operation": "notEquals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Text"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -4200,
        4180
      ],
      "id": "09b0e812-a6a4-403e-84e4-8f08a74c949a",
      "name": "Switch1",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "tableId": "registros_alimentares",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "usuario_id",
              "fieldValue": "={{ $('get-user-id').item.json.id }}"
            },
            {
              "fieldId": "nome_alimento",
              "fieldValue": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('fieldValues1_Field_Value', ``, 'string') }}"
            },
            {
              "fieldId": "calorias",
              "fieldValue": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('fieldValues2_Field_Value', ``, 'string') }}"
            },
            {
              "fieldId": "proteinas",
              "fieldValue": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('fieldValues3_Field_Value', ``, 'string') }}"
            },
            {
              "fieldId": "gorduras",
              "fieldValue": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('fieldValues4_Field_Value', ``, 'string') }}"
            },
            {
              "fieldId": "carboidratos",
              "fieldValue": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('fieldValues6_Field_Value', ``, 'string') }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabaseTool",
      "typeVersion": 1,
      "position": [
        -1220,
        4540
      ],
      "id": "ebdc1335-6945-43c5-9204-702e1dfac526",
      "name": "Supabase25",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "operation": "delete",
        "tableId": "pending_questions",
        "filters": {
          "conditions": [
            {
              "keyName": "phone",
              "condition": "eq",
              "keyValue": "={{ $('get-message').item.json.phone }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -560,
        4420
      ],
      "id": "111b7d41-b9b8-45c9-a95a-bff65521607b",
      "name": "Supabase31",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "content": "## Workflow de processamento de imagem\n",
        "height": 760,
        "width": 2800,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -3280,
        3060
      ],
      "typeVersion": 1,
      "id": "ccfbd52b-d400-40af-a479-1174cd6517cb",
      "name": "Sticky Note4"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -4200,
        4620
      ],
      "id": "8d132c9b-a8c3-42c5-8741-fda080384fe6",
      "name": "Wait1",
      "webhookId": "9b707558-3123-45cd-83ad-5a5d2406db17"
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "pending_questions",
        "filters": {
          "conditions": [
            {
              "keyName": "phone",
              "keyValue": "={{ $json.phoneNumber }}"
            },
            {
              "keyName": "status",
              "keyValue": "Pending"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -4640,
        4180
      ],
      "id": "9ffa483a-4aac-43b3-896d-873aca5f5d5f",
      "name": "Supabase33",
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "22851519-e7dc-462d-bd72-cf4956fdda3b",
              "leftValue": "={{ $json.counter }}",
              "rightValue": 5,
              "operator": {
                "type": "number",
                "operation": "gte"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -4420,
        4440
      ],
      "id": "2708c75f-8ba2-491a-a3b6-d39059ec4c6b",
      "name": "If14"
    },
    {
      "parameters": {
        "tableId": "workflow_locks",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "phone",
              "fieldValue": "={{ $json.body.phone }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -5820,
        3720
      ],
      "id": "48248874-ed17-4820-88a6-da54f57b2ec9",
      "name": "Supabase34",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "46a2307b-f116-48e2-9f4e-eb005e607b57",
              "leftValue": "={{  $items(\"get-message\").length}}",
              "rightValue": 0,
              "operator": {
                "type": "number",
                "operation": "gt"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -2000,
        4560
      ],
      "id": "339316f2-3a4f-43a4-a41b-6a1c79d515d4",
      "name": "If15"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "fe7f54a7-9972-464c-b84d-7903a0b558db",
              "leftValue": "={{ $json.calories }}",
              "rightValue": "",
              "operator": {
                "type": "number",
                "operation": "notExists",
                "singleValue": true
              }
            },
            {
              "id": "882e3255-e64d-40fc-8093-fd62617c6b4b",
              "leftValue": "={{ $json.carbs }}",
              "rightValue": "",
              "operator": {
                "type": "number",
                "operation": "notExists",
                "singleValue": true
              }
            },
            {
              "id": "755cbeea-5327-4f5d-aa10-7437588a54d2",
              "leftValue": "={{ $json.proteins }}",
              "rightValue": "",
              "operator": {
                "type": "number",
                "operation": "notExists",
                "singleValue": true
              }
            },
            {
              "id": "91456a8b-2bb1-480f-8b2f-861c040c658f",
              "leftValue": "={{ $json.fats }}",
              "rightValue": "",
              "operator": {
                "type": "number",
                "operation": "notExists",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1600,
        4560
      ],
      "id": "333dbc47-45fd-4706-af03-fb632f10775b",
      "name": "If16"
    },
    {
      "parameters": {
        "tableId": "registros_alimentares",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "usuario_id",
              "fieldValue": "={{ $json.id }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -1000,
        4720
      ],
      "id": "ea4f2a95-f00c-4738-90bd-7a9d0b5f89e3",
      "name": "Supabase35",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "users",
        "filters": {
          "conditions": [
            {
              "keyName": "telefone",
              "keyValue": "={{ $json.phone }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -1300,
        4720
      ],
      "id": "96c07043-e859-4ab6-b920-18ed756976f4",
      "name": "Supabase36",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "operation": "delete",
        "tableId": "pending_questions",
        "filters": {
          "conditions": [
            {
              "keyName": "phone",
              "condition": "eq",
              "keyValue": "={{ $('Switch1').item.json.phone }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -2400,
        4860
      ],
      "id": "76cc3360-1895-45a1-a5f7-8ed27d536549",
      "name": "Supabase37",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "tableId": "registros_alimentares",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "usuario_id",
              "fieldValue": "={{ $('Supabase35').item.json.usuario_id }}"
            },
            {
              "fieldId": "data_consumo",
              "fieldValue": "={{ $('Date & Time1').first().json.formattedDate }}"
            },
            {
              "fieldId": "hora_consumo",
              "fieldValue": "={{ $json.hora_consumo }}"
            },
            {
              "fieldId": "calorias",
              "fieldValue": "={{ $json.calories }}"
            },
            {
              "fieldId": "carboidratos",
              "fieldValue": "={{ $json.carbs }}"
            },
            {
              "fieldId": "proteinas",
              "fieldValue": "={{ $json.proteins }}"
            },
            {
              "fieldId": "gorduras",
              "fieldValue": "={{ $json.fats }}"
            },
            {
              "fieldId": "tipo_refeicao",
              "fieldValue": "={{ $json.tipo_refeicao }}"
            },
            {
              "fieldId": "nome_alimento",
              "fieldValue": "={{ $('get-message').first().json.food_name }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -560,
        4720
      ],
      "id": "b1319ff1-185e-48de-b407-e7b7b6f1a5b1",
      "name": "Supabase38",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "operation": "delete",
        "tableId": "pending_questions",
        "filters": {
          "conditions": [
            {
              "keyName": "phone",
              "condition": "eq",
              "keyValue": "={{ $('Supabase36').item.json.telefone }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -180,
        4720
      ],
      "id": "333fd0cd-9a58-43c9-ba5e-f7000e84932d",
      "name": "Supabase39",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Get the input message from the previous node\nconst inputMessage = $input.first().json.choices[0].message.content;\n\nconst nameRegex = /🔎 Vejo aqui (.*?)\\n/;\nconst nameMatch = inputMessage.match(nameRegex);\nconst Name = nameMatch[1];\n\nfunction parseAndValidateNutrition(message) {\n    // Regex patterns to extract nutritional values\n    const caloriesRegex = /🔥 Calorias: ~(\\d+) kcal/;\n    const carbsRegex = /🌾 Carboidratos: ~(\\d+)g/;\n    const proteinsRegex = /💪 Proteínas: ~(\\d+)g/;\n    const fatsRegex = /🥑 Gorduras: ~(\\d+)g/;\n    \n    \n    // Extract values\n    const caloriesMatch = message.match(caloriesRegex);\n    const carbsMatch = message.match(carbsRegex);\n    const proteinsMatch = message.match(proteinsRegex);\n    const fatsMatch = message.match(fatsRegex);\n    \n    if (!caloriesMatch || !carbsMatch || !proteinsMatch || !fatsMatch) {\n        throw new Error('Could not parse all nutritional values from the message');\n    }\n    \n    const originalCalories = parseInt(caloriesMatch[1]);\n    const carbs = parseInt(carbsMatch[1]);\n    const proteins = parseInt(proteinsMatch[1]);\n    const fats = parseInt(fatsMatch[1]);\n    \n    // Calculate correct calories (carbs: 4kcal/g, proteins: 4kcal/g, fats: 9kcal/g)\n    const calculatedCalories = (carbs * 4) + (proteins * 4) + (fats * 9);\n    \n    // Check if calories need correction\n    const needsCorrection = originalCalories !== calculatedCalories;\n    \n    let correctedMessage = message;\n    if (needsCorrection) {\n        // Replace the calories in the message\n        correctedMessage = message.replace(\n            caloriesRegex, \n            `🔥 Calorias: ~${calculatedCalories} kcal`\n        );\n    }\n    \n    return {\n        needsCorrection,\n        originalCalories,\n        calculatedCalories,\n        correctedMessage,\n        calorieDifference: calculatedCalories - originalCalories,\n        breakdown: {\n            carbs: { grams: carbs, calories: carbs * 4 },\n            proteins: { grams: proteins, calories: proteins * 4 },\n            fats: { grams: fats, calories: fats * 9 }\n        }\n    };\n}\n\ntry {\n    const result = parseAndValidateNutrition(inputMessage);\n    \n    return {\n        json: {\n            success: true,\n            originalMessage: inputMessage,\n            correctedMessage: result.correctedMessage,\n            needsCorrection: result.needsCorrection,\n            name: Name,\n            calories: {\n                original: result.originalCalories,\n                calculated: result.calculatedCalories,\n                difference: result.calorieDifference\n            },\n            nutritionalBreakdown: result.breakdown\n        }\n    };\n    \n} catch (error) {\n    return {\n        json: {\n            success: false,\n            error: error.message,\n            originalMessage: inputMessage\n        }\n    };\n}"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1320,
        3580
      ],
      "id": "834dcb70-e046-43cc-a67b-b9bbf931bfba",
      "name": "Code7"
    },
    {
      "parameters": {
        "content": "## Adiciona ao log a refeição",
        "height": 780,
        "width": 3160
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -2540,
        4280
      ],
      "typeVersion": 1,
      "id": "39d5165a-dbb5-4356-a7f8-2e19bf8061d9",
      "name": "Sticky Note5"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3E1D888E8D8DE07F56022E7FADD21987/token/ED2BF32A855B887106BAAD09/send-text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "client-token",
              "value": "F60d85846fe6a4bfd986f72916b85da2fS"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $('Webhook').item.json.body.phone }}"
            },
            {
              "name": "message",
              "value": "=Parece que você ainda não registrou nenhuma refeição hoje. Mas não tem problema apenas envie uma foto de sua proxíma refeição para adicionarmos! 😊"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3560,
        5540
      ],
      "id": "94d8edb6-877e-4bad-812b-91561537706a",
      "name": "info dieta18",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "459e7f9b-4f9c-4849-881c-4a0dcd59873b",
              "leftValue": "={{ $json.isEmpty() }}",
              "rightValue": false,
              "operator": {
                "type": "boolean",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        3380,
        5160
      ],
      "id": "ea4bc843-585c-4ea3-8649-a15b99dcda5a",
      "name": "If17"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "ab13195a-3f7e-4254-9ae1-d99585979be0",
              "name": "json.text",
              "value": "={{ $('Webhook').item.json.body.text }}",
              "type": "string"
            },
            {
              "id": "3627de05-ee5b-44c1-afcb-e51dcca30fdb",
              "name": "",
              "value": "",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        0,
        0
      ],
      "id": "ff4b2bf8-1eb2-4cc9-bea7-016953331d40",
      "name": "Edit Fields",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "ab13195a-3f7e-4254-9ae1-d99585979be0",
              "name": "json.text",
              "value": "={{ $('Webhook').item.json.body.text }}",
              "type": "string"
            },
            {
              "id": "3627de05-ee5b-44c1-afcb-e51dcca30fdb",
              "name": "",
              "value": "",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -7080,
        4100
      ],
      "id": "13b54017-f2f8-4c37-97a4-f21bdba81c28",
      "name": "Edit Fields2",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "jsCode": "// Get the input message from the previous node\nconst inputMessage = $input.first().json.choices[0].message.content;\n\nfunction parseAndValidateNutrition(message) {\n    // Regex patterns to extract nutritional values\n    const caloriesRegex = /🔥 Calorias: ~(\\d+) kcal/;\n    const carbsRegex = /🌾 Carboidratos: ~(\\d+)g/;\n    const proteinsRegex = /💪 Proteínas: ~(\\d+)g/;\n    const fatsRegex = /🥑 Gorduras: ~(\\d+)g/;\n    \n    // Extract values\n    const caloriesMatch = message.match(caloriesRegex);\n    const carbsMatch = message.match(carbsRegex);\n    const proteinsMatch = message.match(proteinsRegex);\n    const fatsMatch = message.match(fatsRegex);\n    \n    if (!caloriesMatch || !carbsMatch || !proteinsMatch || !fatsMatch) {\n        throw new Error('Could not parse all nutritional values from the message');\n    }\n    \n    const originalCalories = parseInt(caloriesMatch[1]);\n    const carbs = parseInt(carbsMatch[1]);\n    const proteins = parseInt(proteinsMatch[1]);\n    const fats = parseInt(fatsMatch[1]);\n    \n    // Calculate correct calories (carbs: 4kcal/g, proteins: 4kcal/g, fats: 9kcal/g)\n    const calculatedCalories = (carbs * 4) + (proteins * 4) + (fats * 9);\n    \n    // Check if calories need correction\n    const needsCorrection = originalCalories !== calculatedCalories;\n    \n    let correctedMessage = message;\n    if (needsCorrection) {\n        // Replace the calories in the message\n        correctedMessage = message.replace(\n            caloriesRegex, \n            `🔥 Calorias: ~${calculatedCalories} kcal`\n        );\n    }\n    \n    return {\n        needsCorrection,\n        originalCalories,\n        calculatedCalories,\n        correctedMessage,\n        calorieDifference: calculatedCalories - originalCalories,\n        breakdown: {\n            carbs: { grams: carbs, calories: carbs * 4 },\n            proteins: { grams: proteins, calories: proteins * 4 },\n            fats: { grams: fats, calories: fats * 9 }\n        }\n    };\n}\n\ntry {\n    const result = parseAndValidateNutrition(inputMessage);\n    \n    return {\n        json: {\n            success: true,\n            originalMessage: inputMessage,\n            correctedMessage: result.correctedMessage,\n            needsCorrection: result.needsCorrection,\n            calories: {\n                original: result.originalCalories,\n                calculated: result.calculatedCalories,\n                difference: result.calorieDifference\n            },\n            nutritionalBreakdown: result.breakdown\n        }\n    };\n    \n} catch (error) {\n    return {\n        json: {\n            success: false,\n            error: error.message,\n            originalMessage: inputMessage\n        }\n    };\n}"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1340,
        3380
      ],
      "id": "e441e234-b22b-4984-85a8-75d5528bf51a",
      "name": "Code6"
    },
    {
      "parameters": {
        "operation": "formatDate",
        "date": "={{$now}}",
        "format": "yyyy-MM-dd",
        "options": {}
      },
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        -6260,
        3720
      ],
      "id": "b457cfaf-f6ca-4191-bc16-f035cd8caaf2",
      "name": "Date & Time1"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Webhook').item.json.body.text.message }}",
                    "rightValue": "1",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "f8bc973b-84df-4497-9408-f65b1803af5e"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "masculino"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "43d6fb8c-e351-4bd4-bc05-bc6a08e8e7fa",
                    "leftValue": "={{ $('Webhook').item.json.body.text.message }}",
                    "rightValue": "2",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "feminino"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        5740,
        2180
      ],
      "id": "2653a646-564b-4b69-963c-0e7d334dfb20",
      "name": "Switch3"
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "users",
        "filters": {
          "conditions": [
            {
              "keyName": "telefone",
              "condition": "eq",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "sexo",
              "fieldValue": "=feminino"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        6020,
        2260
      ],
      "id": "97126b23-52bb-4453-b8de-73264c126728",
      "name": "Supabase40",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const altura = $('Webhook').first().json.body.text.message;\n\nconst regex = /^\\d{3}$/;\n\nreturn [\n  {\n    json: {\n      valid: regex.test(altura)\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4700,
        1260
      ],
      "id": "fa2dceb7-08b6-495b-8bb7-2e5f9a87af73",
      "name": "Code8"
    },
    {
      "parameters": {
        "jsCode": "const altura = $('Webhook').first().json.body.text.message;\n\nconst regex = /^\\d{2,3}$/;\n\nreturn [\n  {\n    json: {\n      valid: regex.test(altura)\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4700,
        1500
      ],
      "id": "41aee33a-7360-47a9-860f-5d9152987be9",
      "name": "Code9"
    },
    {
      "parameters": {
        "jsCode": "const altura = $('Webhook').first().json.body.text.message;\n\nconst regex = /^\\d{1,2}$/;\n\nreturn [\n  {\n    json: {\n      valid: regex.test(altura)\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4720,
        1840
      ],
      "id": "6c74482a-5142-4c48-9a66-8bbdb80979b9",
      "name": "Code10"
    },
    {
      "parameters": {
        "content": "## alteração\nsupabe22 atualiza o peso ao invez de altura\n\n- info dieta mensagem de rro alterada",
        "height": 140,
        "width": 330
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        5900,
        1660
      ],
      "id": "ace3bb1f-8ce0-416c-b9dd-ce1fd078ca97",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "content": "## alteração\nvalidação no if",
        "height": 140,
        "width": 330
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        4860,
        1980
      ],
      "id": "9bd90652-3993-4218-b8d5-f224e782477c",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3E1D888E8D8DE07F56022E7FADD21987/token/ED2BF32A855B887106BAAD09/send-text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "client-token",
              "value": "F60d85846fe6a4bfd986f72916b85da2fS"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $('Webhook').item.json.body.phone }}"
            },
            {
              "name": "message",
              "value": "👌Perfeito! Agora, me diga seu email(ex: emagrecer@gmail.com)."
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5600,
        -1180
      ],
      "id": "996072a8-3e7e-4911-9095-6b5c7b68e691",
      "name": "Pergunta email",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "estados_conversa",
        "filters": {
          "conditions": [
            {
              "keyName": "usuario_telefone",
              "condition": "eq",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "estado_atual",
              "fieldValue": "resposta_email"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        5800,
        -1180
      ],
      "id": "0c690974-24f7-4ec3-97a6-e8ad71f0f7cc",
      "name": "Atualiza estado2",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "users",
        "filters": {
          "conditions": [
            {
              "keyName": "telefone",
              "condition": "eq",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "nome",
              "fieldValue": "={{ $('Webhook').item.json.body.text.message }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        5400,
        -1180
      ],
      "id": "bccb65cd-1722-4519-aa80-02ad07cdd61d",
      "name": "guarda o nome1",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "estados_conversa",
        "filters": {
          "conditions": [
            {
              "keyName": "usuario_telefone",
              "condition": "eq",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "estado_atual",
              "fieldValue": "resposta_dieta"
            },
            {
              "fieldId": "dados_contexto",
              "fieldValue": "={{ $('Webhook').item.json.body.text.message }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        5240,
        -1180
      ],
      "id": "e2a2af0d-06cf-4c54-ab6b-d502faa0454c",
      "name": "update estado18",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "content": "## pergunta Email\n",
        "height": 300,
        "width": 860,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        5180,
        -1260
      ],
      "id": "5333eb36-4ddb-40c8-ad1a-b7f9c6f9487a",
      "name": "Sticky Note6"
    },
    {
      "parameters": {
        "content": "## original \n**Double click** to edit me. [Guide](https://docs.n8n.io/workflows/sticky-notes/)",
        "height": 200,
        "width": 940
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        4980,
        -1520
      ],
      "id": "fcc106f8-fdd7-463b-a19f-3706e931fe8e",
      "name": "Sticky Note7"
    },
    {
      "parameters": {
        "jsCode": "const email = $('Webhook').first().json.body.text.message;\n\nconst regex = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/;\n\nreturn [\n  {\n    json: {\n      valid: regex.test(email)\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4000,
        -560
      ],
      "id": "fa971d5a-1e4c-44a5-8459-59a2a8bf1616",
      "name": "validaEmail"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "5fc2e957-0a47-4127-8f07-7299bd7210f0",
              "leftValue": "={{ $('Webhook').item.json.body.text.message }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            },
            {
              "id": "523b3b9c-58c3-46ad-bbb3-70c3caba8bcb",
              "leftValue": "={{ $json.valid }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        4280,
        -560
      ],
      "id": "118fec1a-2661-4f5d-8747-78f95b257e3d",
      "name": "If19"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3E1D888E8D8DE07F56022E7FADD21987/token/ED2BF32A855B887106BAAD09/send-text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "client-token",
              "value": "F60d85846fe6a4bfd986f72916b85da2fS"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $('Webhook').item.json.body.phone }}"
            },
            {
              "name": "message",
              "value": "=Perfeito, {{ $('Webhook').item.json.body.text.message }}! \nAgora, me conte: você já tem uma dieta estabelecida?  \n1️⃣ Sim, já tenho uma dieta definida  \n2️⃣ Não, preciso de ajuda para criar uma "
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4660,
        -600
      ],
      "id": "20a3c406-a42a-4d33-a7d6-d5ea85717f5b",
      "name": "Já tem dieta?1",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "estados_conversa",
        "filters": {
          "conditions": [
            {
              "keyName": "usuario_telefone",
              "condition": "eq",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "estado_atual",
              "fieldValue": "resposta_dieta"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        5100,
        -600
      ],
      "id": "e13d0c56-f725-4383-b21b-0d2c531475f8",
      "name": "Atualiza estado3",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3E1D888E8D8DE07F56022E7FADD21987/token/ED2BF32A855B887106BAAD09/send-text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "client-token",
              "value": "F60d85846fe6a4bfd986f72916b85da2fS"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $('Webhook').item.json.body.phone }}"
            },
            {
              "name": "message",
              "value": "=Não entendi.\nPor favor, insira um email válido(ex emagrecer@gmail.com)"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4660,
        -400
      ],
      "id": "238f1d46-b3f4-4e0b-86fd-a2363823de32",
      "name": "email_invalido",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "estados_conversa",
        "filters": {
          "conditions": [
            {
              "keyName": "usuario_telefone",
              "condition": "eq",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "estado_atual",
              "fieldValue": "resposta_email"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        4860,
        -400
      ],
      "id": "1909262c-c7e5-4daa-a872-a37cc5d577d6",
      "name": "update estado19",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "content": "## Email\n**Double click** to edit me. [Guide](https://docs.n8n.io/workflows/sticky-notes/)",
        "height": 560,
        "width": 1380
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        3960,
        -680
      ],
      "id": "921e8416-a4b7-4b5a-a5e5-e80f28b45e31",
      "name": "Sticky Note8"
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "users",
        "filters": {
          "conditions": [
            {
              "keyName": "telefone",
              "condition": "eq",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "email",
              "fieldValue": "={{ $('Webhook').item.json.body.text.message }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        4900,
        -600
      ],
      "id": "c5fe774f-fcbb-4d5e-ad82-57f3838e98d1",
      "name": "guarda email",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "content": "## Alterar code7 para salvar o nome do alimento além das clories e macros.\n",
        "width": 280
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1400,
        3740
      ],
      "id": "8ab017e6-6a58-4b59-9e7d-b7c5135bbf9b",
      "name": "Sticky Note9"
    },
    {
      "parameters": {
        "content": "### RELATÓRIOS\n",
        "height": 1220,
        "width": 3160,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2380,
        4800
      ],
      "id": "1e836a1a-16bd-4b4c-8215-5608cb8805c7",
      "name": "Sticky Note10"
    },
    {
      "parameters": {
        "jsCode": "const calorias = $('Webhook').first().json.body.text.message;\n\nconst regex = /^(\\d{1,3}|[1-4]\\d{3}|5000)$/;\n\nreturn [\n  {\n    json: {\n      valid: regex.test(calorias)\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        5200,
        240
      ],
      "id": "cf18a2e4-83f9-4b2b-842e-aeaa1581bce3",
      "name": "Valida_calorias"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3E1D888E8D8DE07F56022E7FADD21987/token/ED2BF32A855B887106BAAD09/send-text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "client-token",
              "value": "F60d85846fe6a4bfd986f72916b85da2fS"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $('Webhook').item.json.body.phone }}"
            },
            {
              "name": "message",
              "value": "=Não entendi, mande novamente suas calorias diárias mas seguindo estritamente o formato de exemplo (ex: 3000)."
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5780,
        280
      ],
      "id": "19b5a89e-4ca1-4d94-b483-38e963a42e32",
      "name": "qtd calorias1",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "dietas",
        "filters": {
          "conditions": [
            {
              "keyName": "usuario_telefone",
              "condition": "eq",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "calorias_diarias",
              "fieldValue": "={{ $('Webhook').item.json.body.text.message }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        6240,
        140
      ],
      "id": "eac45153-0a7d-4cb9-b277-fc3a99b926d6",
      "name": "atualiza_calorias",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "estados_conversa",
        "filters": {
          "conditions": [
            {
              "keyName": "usuario_telefone",
              "condition": "eq",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "estado_atual",
              "fieldValue": "quantidade_calorias"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        6020,
        280
      ],
      "id": "e3d8ebf7-d225-4c5f-9993-182f98f0bd01",
      "name": "update estado20",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const proteinas = $('Webhook').first().json.body.text.message;\n\nconst regex = /^\\d{1,3}$/;\n\nreturn [\n  {\n    json: {\n      valid: regex.test(proteinas)\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        5200,
        480
      ],
      "id": "75ff03d4-2432-4851-8ed8-b090f2eed675",
      "name": "Valida_proteinas"
    },
    {
      "parameters": {
        "jsCode": "const carboidratos = $('Webhook').first().json.body.text.message;\n\nconst regex = /^\\d{1,3}$/;\n\nreturn [\n  {\n    json: {\n      valid: regex.test(carboidratos)\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        5160,
        740
      ],
      "id": "6d0136a7-1fba-42d9-af26-e7dee873d730",
      "name": "Valida_carboidrato"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3E1D888E8D8DE07F56022E7FADD21987/token/ED2BF32A855B887106BAAD09/send-text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "client-token",
              "value": "F60d85846fe6a4bfd986f72916b85da2fS"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $('Webhook').item.json.body.phone }}"
            },
            {
              "name": "message",
              "value": "=Sua dieta foi configurada com sucesso!\nCalorias diárias: {{ $json.calorias_diarias }} kcal\nProteínas: {{ $json.proteina_gramas }} g\nCarboidratos:{{ $json.carboidrato_gramas }}g\nGorduras: {{ $json.gordura_gramas }}g\n\n Agora você está pronto(a) para começar a registrar suas refeições!\n O que você gostaria de fazer agora?\n 1️⃣ Enviar uma foto de uma refeição\n 2️⃣ Consultar seu relatório de hoje"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        6380,
        1040
      ],
      "id": "3485fb27-1480-4b53-9e1e-6e061b0aa3f6",
      "name": "dieta_concluida",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "jsCode": "const gorduras = $('Webhook').first().json.body.text.message;\n\nconst regex = /^\\d{1,3}$/;\n\nreturn [\n  {\n    json: {\n      valid: regex.test(gorduras)\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        5160,
        1060
      ],
      "id": "ca12470d-bb7d-4b41-9dbd-bf27975aa51f",
      "name": "Valida_gorduras"
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "estados_conversa",
        "filters": {
          "conditions": [
            {
              "keyName": "usuario_telefone",
              "condition": "eq",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "estado_atual",
              "fieldValue": "quantidade_gordura"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        6800,
        1160
      ],
      "id": "108c6580-a6e1-468c-a0a9-b2380ab63a8d",
      "name": "Supabase7",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "dietas",
        "filters": {
          "conditions": [
            {
              "keyName": "usuario_telefone",
              "condition": "eq",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "carboidrato_gramas",
              "fieldValue": "={{ $('Webhook').item.json.body.text.message }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        7020,
        1160
      ],
      "id": "a54bd5ce-88d7-4562-8a9b-0f003ec3ac68",
      "name": "Supabase41",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3E1D888E8D8DE07F56022E7FADD21987/token/ED2BF32A855B887106BAAD09/send-text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "client-token",
              "value": "F60d85846fe6a4bfd986f72916b85da2fS"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $('Webhook').item.json.body.phone }}"
            },
            {
              "name": "message",
              "value": "=Não entendi, mande novamente suas gorduras diárias mas seguindo estritamente o formato de exemplo (ex: 300)."
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        6620,
        1160
      ],
      "id": "87f4d5bd-f088-4688-89c4-f461211bb237",
      "name": "qtd gordura2",
      "alwaysOutputData": true
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        80,
        80
      ],
      "id": "ebcb92e8-222e-432b-9e4f-00d3aba53a90",
      "name": "Sticky Note11"
    },
    {
      "parameters": {
        "content": "## CONCERTAR PROMPT\n",
        "height": 200,
        "width": 280,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1640,
        3540
      ],
      "id": "8c0a1d57-e5df-4f5e-8721-b9730f2f9482",
      "name": "Sticky Note12"
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        -2480,
        5700
      ],
      "id": "24b3e23a-476b-4abb-9f64-52e529b8652f",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3E1D888E8D8DE07F56022E7FADD21987/token/ED2BF32A855B887106BAAD09/send-text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "client-token",
              "value": "F60d85846fe6a4bfd986f72916b85da2fS"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $('Webhook').item.json.body.phone }}"
            },
            {
              "name": "message",
              "value": "Refeição não adicionada🚫"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -2160,
        4860
      ],
      "id": "0b28ae20-da1c-4ddb-bbc8-7864bf111fe7",
      "name": "envia mensagem de refeição NÃO adicioanda"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('Webhook').item.json.body.text.message }}",
        "options": {
          "systemMessage": "=Você é um assistente de IA que interpreta respostas de usuários. Analise a conversa abaixo e classifique a intenção da \"Resposta do Usuário\" em uma das três categorias.\n\n\n**PERGUNTA FEITA AO USUÁRIO:**\nFoi enviado ao usuário uma análise dos macros de sua refeição junto da seguinte pergunta:\n\"Quer que eu adicione essa refeição ao seu relatório de hoje?\"\n\n**RESPOSTA DO USUÁRIO:**\n\"{{ $('Webhook').item.json.body.text.message }}\"\n\n**Categorias de Intenção Possíveis:**\n- \"CONFIRMAR\": O usuário concorda em adicionar a refeição. (Ex: \"sim\", \"pode adicionar\", \"ok\")\n- \"NEGAR\": O usuário não quer adicionar a refeição. (Ex: \"não\", \"cancela\", \"deixa pra lá\")\n- \"MODIFICAR\": O usuário fornece informações novas ou corretivas sobre a refeição. (Ex: \"você esqueceu o queijo\", \"era mais arroz\", \"na verdade tinha molho barbecue\")\n\nRetorne **apenas e exclusivamente um objeto JSON** com a intenção. Exemplo:\n{\"intent\": \"MODIFICAR\"}"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        -3380,
        4280
      ],
      "id": "f342dc2c-887c-4bf8-b9be-c6c1a0c04433",
      "name": "AI ROUTER"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -3380,
        4460
      ],
      "id": "67901db7-3d9a-4991-88dc-57800490efb4",
      "name": "OpenAI Chat Model4",
      "credentials": {
        "openAiApi": {
          "id": "1GukOqQFTAL9y3Gf",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ JSON.parse($json.output).intent }}",
                    "rightValue": "MODIFICAR",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "ecacdefe-bd50-470c-be9f-9ba26df50e42"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "MODIFICAR"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "cefeaaea-f937-46b1-a889-88d0fe4f9ebd",
                    "leftValue": "={{ JSON.parse($json.output).intent }}",
                    "rightValue": "CONFIRMAR",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "CONFIRMAR"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "c7562ba3-fb16-43f5-8334-1176c0a6b401",
                    "leftValue": "={{ JSON.parse($json.output).intent }}",
                    "rightValue": "NEGAR",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "NEGAR"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -2940,
        4280
      ],
      "id": "59e02a63-3159-4741-a9cb-3ec2aa929170",
      "name": "INTENÇÃO DA RESPOSTA"
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "users",
        "filters": {
          "conditions": [
            {
              "keyName": "telefone",
              "keyValue": "={{ $('Switch1').item.json.phone }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -2360,
        4060
      ],
      "id": "289d13f9-00dc-45a4-8395-552498788b6e",
      "name": "get-user-id1",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "pending_questions",
        "filters": {
          "conditions": [
            {
              "keyName": "phone",
              "keyValue": "={{ $('Switch1').item.json.phone }}"
            },
            {
              "keyName": "status",
              "keyValue": "Pending"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -2120,
        4060
      ],
      "id": "90b8754b-1a05-4d44-8162-b59c67b26df1",
      "name": "get-refeição",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('Webhook').item.json.body.text.message }}",
        "options": {
          "systemMessage": "=Você é um nutricionista de IA. Sua tarefa é refazer a análise original de uma refeição com base em uma correção fornecida pelo usuário.\n\n**ANÁLISE ORIGINAL (que você fez antes):**\n{{ $json.question }}\n\n**JSON DA ANÁLISE ORIGINAL (INFORMAÇÕES DA PRIMEIRA ANÁLISE)\n\n{\n  \"food_name\": {{ $json.food_name }},\n  \"calories\": {{ $json.calories }},\n  \"protein\": {{ $json.protein }},\n  \"carbs\": {{ $json.carbs }},\n  \"fat\": {{ $json.fat }}\n}\n\n**CORREÇÃO/PEDIDO DO USUÁRIO:**\n{{ $('Webhook').item.json.body.text.message }}\n\n**Sua Tarefa:**\n1. Analise a análise original e a correção do usuário.\n2. Gere uma **nova análise nutricional completa**, incorporando a mudança solicitada.\n3. Retorne **apenas e exclusivamente um objeto JSON VÁLIDO** com o MESMO FORMATO do JSON DA ANÁLISE ORIGINAL com o campo food_name contendo os alimentos encontrados (ex: arroz branco (~150g), feijão cozido (~100g), bife grelhado (~100g), peito de frango grelhado (~100g) e farofa (~50g) embaixo do arroz).\nE 3 campos adicionais contendo os macros re-calculados"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        -1820,
        4040
      ],
      "id": "81e81f2d-9786-44e3-9b15-93c00ce2e654",
      "name": "AGENTE RE-ANALISE"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -1820,
        4200
      ],
      "id": "d988bdb6-5b3d-43a7-a3d1-d2f56f072594",
      "name": "OpenAI Chat Model2",
      "credentials": {
        "openAiApi": {
          "id": "1GukOqQFTAL9y3Gf",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "pending_questions",
        "matchType": "allFilters",
        "filters": {
          "conditions": [
            {
              "keyName": "phone",
              "condition": "eq",
              "keyValue": "={{ $('get-user-id1').item.json.telefone }}"
            },
            {
              "keyName": "status",
              "condition": "eq",
              "keyValue": "Pending"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "question",
              "fieldValue": "={{ $json.mensagem_formatada }}"
            },
            {
              "fieldId": "calories",
              "fieldValue": "={{JSON.parse($('AGENTE RE-ANALISE').item.json.output).calories }}"
            },
            {
              "fieldId": "protein",
              "fieldValue": "={{JSON.parse($('AGENTE RE-ANALISE').item.json.output).protein }}"
            },
            {
              "fieldId": "carbs",
              "fieldValue": "={{JSON.parse($('AGENTE RE-ANALISE').item.json.output).carbs }}"
            },
            {
              "fieldId": "fat",
              "fieldValue": "={{JSON.parse($('AGENTE RE-ANALISE').item.json.output).fat }}"
            },
            {
              "fieldId": "food_name",
              "fieldValue": "={{JSON.parse($('AGENTE RE-ANALISE').item.json.output).food_name }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -1140,
        4040
      ],
      "id": "a4b7f815-4e80-45ce-b15a-5d3168bb15ee",
      "name": "Update Na refeição pending",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('Webhook').item.json.body.phone }}"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        -1700,
        4220
      ],
      "id": "e95bb3bf-9f7a-46bd-9752-5d017704d17a",
      "name": "Simple Memory1"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3E1D888E8D8DE07F56022E7FADD21987/token/ED2BF32A855B887106BAAD09/send-text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "client-token",
              "value": "F60d85846fe6a4bfd986f72916b85da2fS"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $('Webhook').item.json.body.phone }}"
            },
            {
              "name": "message",
              "value": "=Analisando novamente...\n\n{{ $('monta mensagem').item.json.mensagem_formatada }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -880,
        4040
      ],
      "id": "339fd966-1cd2-4730-a815-fc0b9965eefe",
      "name": "Envia nova análise"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "9aa84418-c727-4836-8304-6fa1779250a3",
              "name": "mensagem_formatada",
              "value": "=`Que prato caprichado! 🔎 Vejo aqui {{ JSON.parse($json.output).food_name }}\n\n**Resumo nutricional:**\n🔥 Calorias: ~{{ JSON.parse($json.output).calories }} kcal\n🌾 Carboidratos: ~{{ JSON.parse($json.output).carbs }}g\n💪 Proteínas: ~{{ JSON.parse($json.output).protein }}g\n🥑 Gorduras: ~{{ JSON.parse($json.output).fat }}g\n\nQuer que eu adicione essa refeição ao seu relatório de hoje? 📝`",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1400,
        4040
      ],
      "id": "ac835b84-1c5c-4dd8-bfde-ca7dbfed8b73",
      "name": "monta mensagem"
    },
    {
      "parameters": {
        "content": "## Caminho de re-analise\n",
        "height": 300,
        "width": 2360,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -2700,
        3980
      ],
      "id": "42f1969c-aceb-44e6-8a31-c224570830a7",
      "name": "Sticky Note13"
    }
  ],
  "pinData": {
    "AI Agent1": [
      {
        "json": {
          "output": "O feijão vermelho, também conhecido como feijão do tipo kidney, é uma excelente opção para incluir na sua alimentação! Aqui estão alguns pontos interessantes sobre ele:\n\n1. **Nutrição**: O feijão vermelho é uma fonte rica em proteínas, fibras, vitaminas (como as do complexo B) e minerais (como ferro e potássio). As fibras são especialmente importantes para a saúde digestiva e podem ajudar na saciedade.\n\n2. **Saúde do coração**: Por ser rico em fibras e antioxidantes, o feijão vermelho pode ajudar a reduzir o colesterol LDL (\"ruim\") e melhorar a saúde do coração.\n\n3. **Controle de açúcar no sangue**: Devido ao seu baixo índice glicêmico, o feijão vermelho liberação de glicose de maneira mais lenta na corrente sanguínea, o que pode ser benéfico para o controle da glicose.\n\n4. **Versatilidade**: Ele pode ser utilizado em diversas receitas, como sopas, saladas, chili e até mesmo como acompanhamento. \n\n5. **Preparação**: É sempre importante cozinhar bem o feijão vermelho, pois ele contém toxinas que podem ser prejudiciais se ingeridas cruas ou mal cozidas.\n\nSe você tem alguma dúvida específica sobre o feijão vermelho ou como incorporá-lo à sua dieta, sinta-se à vontade para perguntar!"
        }
      }
    ],
    "Webhook": [
      {
        "json": {
          "headers": {
            "host": "n8n.caloscan.com.br",
            "user-agent": "Mozilla/5.0 (X11; Linux i686; rv:111.0) Gecko/20100101 Firefox/111.0",
            "content-length": "766",
            "content-type": "application/json",
            "origin": "https://api.z-api.io",
            "server": "Z-API",
            "via": "2.0 Caddy",
            "x-forwarded-for": "144.22.166.146",
            "x-forwarded-host": "n8n.caloscan.com.br",
            "x-forwarded-proto": "https",
            "z-api-token": "ED2BF32A855B887106BAAD09",
            "accept-encoding": "gzip"
          },
          "params": {},
          "query": {},
          "body": {
            "isStatusReply": false,
            "chatLid": "184980013592738@lid",
            "connectedPhone": "5521974610397",
            "waitingMessage": false,
            "isEdit": false,
            "isGroup": false,
            "isNewsletter": false,
            "instanceId": "3E1D888E8D8DE07F56022E7FADD21987",
            "messageId": "3F024473CB23CCD46503",
            "phone": "5521975911777",
            "fromMe": false,
            "momment": 1754598273000,
            "status": "RECEIVED",
            "chatName": "Pedro Silvestre",
            "senderPhoto": null,
            "senderName": "Pedro 🙃",
            "photo": "https://pps.whatsapp.net/v/t61.24694-24/518324918_1261346258767691_5052322205204026761_n.jpg?ccb=11-4&oh=01_Q5Aa2AEcYYbTiNNpeO3Q2oUaf2gD2qqAGFBzExeyX9vta2ODIg&oe=68A23101&_nc_sid=5e03e0&_nc_cat=101",
            "broadcast": false,
            "participantLid": null,
            "messageExpirationSeconds": 0,
            "forwarded": false,
            "type": "ReceivedCallback",
            "fromApi": false,
            "text": {
              "message": "pode adicionar"
            }
          },
          "webhookUrl": "https://n8n.caloscan.com.br/webhook-test/2fbc3806-4f1c-4999-8b48-eb0367157651",
          "executionMode": "test"
        }
      }
    ]
  },
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "BUSCA DIETA",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Valida_calorias",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Valida_proteinas",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Valida_carboidrato",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Valida_gorduras",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Code8",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Code9",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Code10",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If9",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If10",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If11",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Supabase24",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "validaEmail",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "Inicializa criação dieta",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "qtd calorias",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase5": {
      "main": [
        [
          {
            "node": "Supabase8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "qtd calorias": {
      "main": [
        [
          {
            "node": "update estado2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "qtd proteina": {
      "main": [
        [
          {
            "node": "update estado3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "qtd carbo": {
      "main": [
        [
          {
            "node": "Supabase",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "update estado1": {
      "main": [
        [
          {
            "node": "guarda o nome",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "update estado2": {
      "main": [
        [
          {
            "node": "Supabase5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "update estado3": {
      "main": [
        [
          {
            "node": "atualiza_calorias",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase": {
      "main": [
        [
          {
            "node": "Supabase2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "qtd gordura": {
      "main": [
        [
          {
            "node": "Supabase4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase4": {
      "main": [
        [
          {
            "node": "Supabase6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase11": {
      "main": [
        [
          {
            "node": "Supabase12",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase12": {
      "main": [
        [
          {
            "node": "Supabase13",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase13": {
      "main": [
        [
          {
            "node": "dieta_concluida",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "update estado5": {
      "main": [
        []
      ]
    },
    "info dieta2": {
      "main": [
        [
          {
            "node": "update estado6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "update estado6": {
      "main": [
        [
          {
            "node": "Supabase14",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "info dieta3": {
      "main": [
        [
          {
            "node": "update estado7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "update estado7": {
      "main": [
        [
          {
            "node": "Supabase15",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "info dieta4": {
      "main": [
        [
          {
            "node": "update estado8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "update estado8": {
      "main": [
        [
          {
            "node": "Supabase16",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "info dieta5": {
      "main": [
        [
          {
            "node": "update estado9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "update estado9": {
      "main": [
        [
          {
            "node": "Switch3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "info dieta6": {
      "main": [
        [
          {
            "node": "update estado10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "update estado10": {
      "main": [
        [
          {
            "node": "Supabase18",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "info dieta7": {
      "main": [
        [
          {
            "node": "update estado11",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "update estado11": {
      "main": [
        [
          {
            "node": "Supabase19",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase19": {
      "main": [
        [
          {
            "node": "Supabase20",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase20": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Supabase21",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase21": {
      "main": [
        [
          {
            "node": "info dieta8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase24": {
      "main": [
        [
          {
            "node": "info dieta14",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "BUSCA ESTADO_C": {
      "main": [
        [
          {
            "node": "Já passou pelo onboarding?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Já passou pelo onboarding?": {
      "main": [
        [
          {
            "node": "BUSCA USUÁRIO",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Supabase10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "BUSCA DIETA": {
      "main": [
        [
          {
            "node": "BUSCA ESTADO_C",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "BUSCA USUÁRIO": {
      "main": [
        [
          {
            "node": "primeira mensagem?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "primeira mensagem?": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Cria novo usuário",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cria novo usuário": {
      "main": [
        [
          {
            "node": "Inicializa estados_conversa",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Inicializa estados_conversa": {
      "main": [
        [
          {
            "node": "Pergunta nome",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Pergunta nome": {
      "main": [
        [
          {
            "node": "Atualiza estado",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Inicializa criação dieta": {
      "main": [
        [
          {
            "node": "update estado5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "guarda o nome": {
      "main": [
        [
          {
            "node": "Já tem dieta?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "update estado18",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Cria novo usuário1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If2": {
      "main": [
        [
          {
            "node": "qtd proteina",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "qtd calorias1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If3": {
      "main": [
        [
          {
            "node": "qtd carbo",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "qtd proteina1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If4": {
      "main": [
        [
          {
            "node": "qtd gordura",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "qtd carbo1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If5": {
      "main": [
        [
          {
            "node": "Supabase11",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "qtd gordura2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If6": {
      "main": [
        [
          {
            "node": "info dieta2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Inicializa criação dieta1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If7": {
      "main": [
        [
          {
            "node": "info dieta3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "info dieta",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If8": {
      "main": [
        [
          {
            "node": "info dieta4",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "info dieta10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If9": {
      "main": [
        [
          {
            "node": "info dieta5",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "info dieta11",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If10": {
      "main": [
        [
          {
            "node": "info dieta6",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "info dieta12",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If11": {
      "main": [
        [
          {
            "node": "info dieta7",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "info dieta13",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "qtd carbo1": {
      "main": [
        [
          {
            "node": "Supabase1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase1": {
      "main": [
        [
          {
            "node": "Supabase3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "qtd proteina1": {
      "main": [
        [
          {
            "node": "update estado",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "update estado": {
      "main": [
        [
          {
            "node": "Supabase9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "info dieta": {
      "main": [
        [
          {
            "node": "update estado12",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "update estado12": {
      "main": [
        [
          {
            "node": "Supabase22",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "info dieta10": {
      "main": [
        [
          {
            "node": "update estado13",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "update estado13": {
      "main": [
        [
          {
            "node": "Supabase23",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "info dieta11": {
      "main": [
        [
          {
            "node": "update estado14",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "update estado14": {
      "main": [
        [
          {
            "node": "Supabase26",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "info dieta12": {
      "main": [
        [
          {
            "node": "update estado15",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "update estado15": {
      "main": [
        [
          {
            "node": "Supabase27",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "info dieta13": {
      "main": [
        [
          {
            "node": "update estado16",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "update estado16": {
      "main": [
        [
          {
            "node": "Supabase28",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cria novo usuário1": {
      "main": [
        [
          {
            "node": "Inicializa estados_conversa1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Inicializa estados_conversa1": {
      "main": [
        [
          {
            "node": "Pergunta nome1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Pergunta nome1": {
      "main": [
        [
          {
            "node": "Atualiza estado1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Inicializa criação dieta1": {
      "main": [
        [
          {
            "node": "update estado17",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase10": {
      "main": [
        [
          {
            "node": "If12",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If12": {
      "main": [
        [
          {
            "node": "Check Input Type",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "info dieta15",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "info dieta15": {
      "main": [
        [
          {
            "node": "Supabase29",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase29": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Supabase30",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase30": {
      "main": [
        [
          {
            "node": "If13",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If13": {
      "main": [
        [
          {
            "node": "Check Input Type",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "info dieta17",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "info dieta17": {
      "main": [
        [
          {
            "node": "Supabase32",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "Date & Time1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "barcode-scanner1": {
      "main": [
        [
          {
            "node": "If-chaca-barcode",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "HTTP Request retorna macros para wpp",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "MongoDB": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "HTTP Request3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request3": {
      "main": [
        [
          {
            "node": "HTTP Request4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request4": {
      "main": [
        [
          {
            "node": "Supabase31",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent1": {
      "main": [
        [
          {
            "node": "HTTP Request5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Http Request retorna Mensagem para Wpp": {
      "main": [
        [
          {
            "node": "Supabase cria pending request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase cria pending request": {
      "main": [
        [
          {
            "node": "Http Request retorna Mensagem para Wpp3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request retorna macros para wpp": {
      "main": [
        []
      ]
    },
    "Redis": {
      "main": [
        [
          {
            "node": "Supabase34",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis1": {
      "main": [
        [
          {
            "node": "Switch2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis2": {
      "main": [
        [
          {
            "node": "Switch1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "No Operation, do nothing": {
      "main": [
        [
          {
            "node": "Code3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code2": {
      "main": [
        [
          {
            "node": "Supabase33",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch2": {
      "main": [
        [
          {
            "node": "Code2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Code2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Http Request retorna Mensagem para Wpp1": {
      "main": [
        [
          {
            "node": "Supabase cria pending request1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase cria pending request1": {
      "main": [
        []
      ]
    },
    "Http Request retorna Mensagem para Wpp2": {
      "main": [
        []
      ]
    },
    "Http Request retorna Mensagem para Wpp3": {
      "main": [
        []
      ]
    },
    "Code3": {
      "main": [
        [
          {
            "node": "If14",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code4": {
      "main": [
        [
          {
            "node": "Redis1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Http Request retorna Mensagem para Wpp4": {
      "main": [
        [
          {
            "node": "barcode-scanner1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Http Request retorna Mensagem para Wpp5": {
      "main": [
        [
          {
            "node": "get-user-id",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get-user-id": {
      "main": [
        [
          {
            "node": "get-message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get-message": {
      "main": [
        [
          {
            "node": "If15",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code5": {
      "main": [
        [
          {
            "node": "Supabase38",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "nutrition-extractor": {
      "main": [
        [
          {
            "node": "If16",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Supabase39",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If-chaca-barcode": {
      "main": [
        [
          {
            "node": "MongoDB",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If-checa-mensagem",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If-checa-mensagem": {
      "main": [
        [
          {
            "node": "gpt-api-com-msg",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "gpt-api-sem-msg",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "gpt-api-sem-msg": {
      "main": [
        [
          {
            "node": "Code7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "gpt-api-com-msg": {
      "main": [
        [
          {
            "node": "Code6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Input Type": {
      "main": [
        [
          {
            "node": "Download Z-API Audio",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Text Only Prompt",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Text Only Prompt": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Transcribe Audio": {
      "main": [
        [
          {
            "node": "Audio Prompt",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Audio Prompt": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download Z-API Audio": {
      "main": [
        [
          {
            "node": "Transcribe Audio",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Calculo dos totais": {
      "main": [
        [
          {
            "node": "Compara com a dieta",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Busca dieta": {
      "main": [
        [
          {
            "node": "Busca historico diario",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Busca historico diario": {
      "main": [
        [
          {
            "node": "If17",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Unir Metas e Totais": {
      "main": [
        [
          {
            "node": "enviar o historico",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Monta histórico dos registros": {
      "main": [
        [
          {
            "node": "Unir Metas e Totais",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Compara com a dieta": {
      "main": [
        [
          {
            "node": "Unir Metas e Totais",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Sentiment Analysis1": {
      "main": [
        [
          {
            "node": "Busca dieta",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "AI Agent1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model3": {
      "ai_languageModel": [
        [
          {
            "node": "Sentiment Analysis1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Switch1": {
      "main": [
        [
          {
            "node": "Http Request retorna Mensagem para Wpp4",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "AI ROUTER",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Sentiment Analysis1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase25": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Wait1": {
      "main": [
        [
          {
            "node": "Redis1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase33": {
      "main": [
        [
          {
            "node": "Redis2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If14": {
      "main": [
        [
          {
            "node": "No Operation, do nothing1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase34": {
      "main": [
        [
          {
            "node": "Code4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If15": {
      "main": [
        [
          {
            "node": "nutrition-extractor",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If16": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Supabase36",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase35": {
      "main": [
        [
          {
            "node": "Code5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase36": {
      "main": [
        [
          {
            "node": "Supabase35",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase38": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code7": {
      "main": [
        [
          {
            "node": "Http Request retorna Mensagem para Wpp1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If17": {
      "main": [
        [
          {
            "node": "Calculo dos totais",
            "type": "main",
            "index": 0
          },
          {
            "node": "Monta histórico dos registros",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "info dieta18",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields2": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code6": {
      "main": [
        [
          {
            "node": "Http Request retorna Mensagem para Wpp",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Date & Time1": {
      "main": [
        [
          {
            "node": "Redis",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch3": {
      "main": [
        [
          {
            "node": "Supabase17",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Supabase40",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code8": {
      "main": [
        [
          {
            "node": "If6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code9": {
      "main": [
        [
          {
            "node": "If7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code10": {
      "main": [
        [
          {
            "node": "If8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Pergunta email": {
      "main": [
        [
          {
            "node": "Atualiza estado2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "guarda o nome1": {
      "main": [
        [
          {
            "node": "Pergunta email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "update estado18": {
      "main": [
        [
          {
            "node": "guarda o nome1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "validaEmail": {
      "main": [
        [
          {
            "node": "If19",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If19": {
      "main": [
        [
          {
            "node": "Já tem dieta?1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "email_invalido",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Já tem dieta?1": {
      "main": [
        [
          {
            "node": "guarda email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "email_invalido": {
      "main": [
        [
          {
            "node": "update estado19",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "guarda email": {
      "main": [
        [
          {
            "node": "Atualiza estado3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Valida_calorias": {
      "main": [
        [
          {
            "node": "If2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase8": {
      "main": [
        []
      ]
    },
    "qtd calorias1": {
      "main": [
        [
          {
            "node": "update estado20",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Valida_proteinas": {
      "main": [
        [
          {
            "node": "If3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Valida_carboidrato": {
      "main": [
        [
          {
            "node": "If4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Valida_gorduras": {
      "main": [
        [
          {
            "node": "If5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase7": {
      "main": [
        [
          {
            "node": "Supabase41",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "qtd gordura2": {
      "main": [
        []
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Supabase37": {
      "main": [
        [
          {
            "node": "envia mensagem de refeição NÃO adicioanda",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model4": {
      "ai_languageModel": [
        [
          {
            "node": "AI ROUTER",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "AI ROUTER": {
      "main": [
        [
          {
            "node": "INTENÇÃO DA RESPOSTA",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "INTENÇÃO DA RESPOSTA": {
      "main": [
        [
          {
            "node": "get-user-id1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Http Request retorna Mensagem para Wpp5",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Supabase37",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get-user-id1": {
      "main": [
        [
          {
            "node": "get-refeição",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get-refeição": {
      "main": [
        [
          {
            "node": "AGENTE RE-ANALISE",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "AGENTE RE-ANALISE",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "AGENTE RE-ANALISE": {
      "main": [
        [
          {
            "node": "monta mensagem",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory1": {
      "ai_memory": [
        [
          {
            "node": "AGENTE RE-ANALISE",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Update Na refeição pending": {
      "main": [
        [
          {
            "node": "Envia nova análise",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "monta mensagem": {
      "main": [
        [
          {
            "node": "Update Na refeição pending",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "d626330b-ef6d-4a09-9bf8-5fa910369582",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "47f5151e1feedfc56c8165323ec3b572b376ad9a1737b53f18d620111e7cf651"
  },
  "id": "O9q5IRrRVKDaGdOi",
  "tags": []
}