{
  "name": "onboarding teste cancelamento",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "414225e2-7344-49bf-a375-82ca2cd3d9cc",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -6020,
        -1920
      ],
      "id": "fad82b0b-4d60-4784-be74-049a3de2f746",
      "name": "Webhook",
      "webhookId": "414225e2-7344-49bf-a375-82ca2cd3d9cc"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "bef07082-c3c9-4da4-8f7a-6d5e345adff9",
                    "leftValue": "={{ $('Já passou pelo onboarding?').item.json.estado_atual }}",
                    "rightValue": "aguardando_nome",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "0ce2aa7e-0a90-4ae9-b8c3-6e4f4bcc157d",
                    "leftValue": "={{ $('Já passou pelo onboarding?').item.json.estado_atual }}",
                    "rightValue": "resposta_dieta",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "ad710b87-dcfd-4122-baa2-6993883ae947",
                    "leftValue": "={{ $('Já passou pelo onboarding?').item.json.estado_atual }}",
                    "rightValue": "quantidade_calorias",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "96f087a6-943b-471f-9926-2971c52b84c3",
                    "leftValue": "={{ $('Já passou pelo onboarding?').item.json.estado_atual }}",
                    "rightValue": "quantidade_proteina",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "621009d4-10db-443f-82da-c62cb19cfb56",
                    "leftValue": "={{ $('Já passou pelo onboarding?').item.json.estado_atual }}",
                    "rightValue": "quantidade_carbo",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "9d59ea8b-4ca3-4c4b-bdc6-aff510a96d0c",
                    "leftValue": "={{ $('Já passou pelo onboarding?').item.json.estado_atual }}",
                    "rightValue": "quantidade_gordura",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "842587fa-c8b0-48a8-8e26-5c9aaa0a5c22",
                    "leftValue": "={{ $('Já passou pelo onboarding?').item.json.estado_atual }}",
                    "rightValue": "info_altura",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "84f957f0-275b-4400-be71-db1192f97911",
                    "leftValue": "={{ $('Já passou pelo onboarding?').item.json.estado_atual }}",
                    "rightValue": "info_peso",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "a6217bc2-7998-45d2-9c8f-5c7a798ba7a3",
                    "leftValue": "={{ $('Já passou pelo onboarding?').item.json.estado_atual }}",
                    "rightValue": "=info_idade",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "62a42355-40dc-4de3-b564-1b152d4878b8",
                    "leftValue": "={{ $('Já passou pelo onboarding?').item.json.estado_atual }}",
                    "rightValue": "info_sexo",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "f3bb99ac-cd32-43d7-9942-b94688ca2bf1",
                    "leftValue": "={{ $('Já passou pelo onboarding?').item.json.estado_atual }}",
                    "rightValue": "info_atividade",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "252e7a8f-42b8-4690-853d-e82b8c3b60e0",
                    "leftValue": "={{ $('Já passou pelo onboarding?').item.json.estado_atual }}",
                    "rightValue": "info_objetivo",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "1c461a63-1782-4ba7-9c7f-7353c475cac7",
                    "leftValue": "={{ $('Já passou pelo onboarding?').item.json.estado_atual }}",
                    "rightValue": "opcoes_fluxos",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "d5f2d819-1432-489c-867b-5ead72441772",
                    "leftValue": "={{ $('Já passou pelo onboarding?').item.json.estado_atual }}",
                    "rightValue": "resposta_email",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        2220,
        -260
      ],
      "id": "d9785485-5b4e-42ca-b25c-df52741add29",
      "name": "Switch"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "32671527-4b4e-4bc0-af28-cc615c062168",
              "leftValue": "={{ $('Webhook').item.json.body.text.message }}",
              "rightValue": "1",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        5440,
        -80
      ],
      "id": "49ed3aa2-c7dc-4d3e-b0c6-918950152e9c",
      "name": "If1"
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "users",
        "filters": {
          "conditions": [
            {
              "keyName": "telefone",
              "condition": "eq",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "tem_dieta_previa",
              "fieldValue": "True"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        6060,
        -20
      ],
      "id": "df6ccd5b-6e41-433c-9619-bede30a6d777",
      "name": "Supabase5",
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "dietas",
        "filters": {
          "conditions": [
            {
              "keyName": "usuario_telefone",
              "condition": "eq",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "calorias_diarias",
              "fieldValue": "={{ $('Webhook').item.json.body.text.message }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        6480,
        220
      ],
      "id": "510f8ff1-862d-4857-9705-ff86b62f3b9a",
      "name": "Supabase7",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "tableId": "dietas",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "usuario_telefone",
              "fieldValue": "={{ $('Webhook').item.json.body.phone }}"
            },
            {
              "fieldId": "data_criacao",
              "fieldValue": "={{ $now }}"
            },
            {
              "fieldId": "usuario_id",
              "fieldValue": "={{ $('BUSCA USUÁRIO').item.json.id }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        6200,
        -20
      ],
      "id": "70fe1887-5516-45f2-9fc3-586d54129203",
      "name": "Supabase8",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3E1D888E8D8DE07F56022E7FADD21987/token/ED2BF32A855B887106BAAD09/send-text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "client-token",
              "value": "F60d85846fe6a4bfd986f72916b85da2fS"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $('Webhook').item.json.body.phone }}"
            },
            {
              "name": "message",
              "value": "=Legal! Vamos configurar sua dieta. Quantas calorias você consome por dia?"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5720,
        -20
      ],
      "id": "70dd6fa1-08a9-4ec3-8aba-12d6d7dcfc00",
      "name": "qtd calorias",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3E1D888E8D8DE07F56022E7FADD21987/token/ED2BF32A855B887106BAAD09/send-text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "client-token",
              "value": "F60d85846fe6a4bfd986f72916b85da2fS"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $('Webhook').item.json.body.phone }}"
            },
            {
              "name": "message",
              "value": "=Registrado! Agora, qual a quantidade diária de proteínas em gramas? (exemplo: 100g)"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        6140,
        220
      ],
      "id": "6980e10f-a193-4627-8b03-13bea2d2ab7c",
      "name": "qtd proteina",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3E1D888E8D8DE07F56022E7FADD21987/token/ED2BF32A855B887106BAAD09/send-text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "client-token",
              "value": "F60d85846fe6a4bfd986f72916b85da2fS"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $('Webhook').item.json.body.phone }}"
            },
            {
              "name": "message",
              "value": "=Ótimo! E a quantidade diária de carboidratos em gramas? (exemplo: 250g)"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5940,
        400
      ],
      "id": "99aa9b5d-5344-4145-a3ab-5797bde16f03",
      "name": "qtd carbo",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "estados_conversa",
        "filters": {
          "conditions": [
            {
              "keyName": "usuario_telefone",
              "condition": "eq",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "estado_atual",
              "fieldValue": "resposta_dieta"
            },
            {
              "fieldId": "dados_contexto",
              "fieldValue": "={{ $('Webhook').item.json.body.text.message }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        5480,
        -1120
      ],
      "id": "ec8a6653-a00a-4ccc-863c-f011cabaa18c",
      "name": "update estado1",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "estados_conversa",
        "filters": {
          "conditions": [
            {
              "keyName": "usuario_telefone",
              "condition": "eq",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "estado_atual",
              "fieldValue": "quantidade_calorias"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        5900,
        -20
      ],
      "id": "e074d15e-2174-4037-ad0b-cd70b7af3a6b",
      "name": "update estado2",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "estados_conversa",
        "filters": {
          "conditions": [
            {
              "keyName": "usuario_telefone",
              "condition": "eq",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "estado_atual",
              "fieldValue": "quantidade_proteina"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        6320,
        220
      ],
      "id": "bcad3e12-5c11-4e45-8662-346cc3124233",
      "name": "update estado3",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "estados_conversa",
        "filters": {
          "conditions": [
            {
              "keyName": "usuario_telefone",
              "condition": "eq",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "estado_atual",
              "fieldValue": "quantidade_carbo"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        6120,
        400
      ],
      "id": "7e69f15c-0259-496c-bbac-5832c8f9744b",
      "name": "Supabase",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "dietas",
        "filters": {
          "conditions": [
            {
              "keyName": "usuario_telefone",
              "condition": "eq",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "proteina_gramas",
              "fieldValue": "={{ $('Webhook').item.json.body.text.message }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        6280,
        400
      ],
      "id": "609b08ca-7a30-4484-aaf0-99efbcdd80f6",
      "name": "Supabase2",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3E1D888E8D8DE07F56022E7FADD21987/token/ED2BF32A855B887106BAAD09/send-text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "client-token",
              "value": "F60d85846fe6a4bfd986f72916b85da2fS"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $('Webhook').item.json.body.phone }}"
            },
            {
              "name": "message",
              "value": "=Perfeito! Por último, qual a quantidade diária de gorduras em gramas? (exemplo: 70g)"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5940,
        720
      ],
      "id": "fa3f3299-20b0-426f-93f2-d7e54235e5d1",
      "name": "qtd gordura",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "estados_conversa",
        "filters": {
          "conditions": [
            {
              "keyName": "usuario_telefone",
              "condition": "eq",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "estado_atual",
              "fieldValue": "quantidade_gordura"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        6120,
        720
      ],
      "id": "a9827010-69c2-4f91-8573-84616da29675",
      "name": "Supabase4",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "dietas",
        "filters": {
          "conditions": [
            {
              "keyName": "usuario_telefone",
              "condition": "eq",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "carboidrato_gramas",
              "fieldValue": "={{ $('Webhook').item.json.body.text.message }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        6280,
        720
      ],
      "id": "1bbfe085-a631-4d86-9b8b-54094b3a038f",
      "name": "Supabase6",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "estados_conversa",
        "filters": {
          "conditions": [
            {
              "keyName": "usuario_telefone",
              "condition": "eq",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "estado_atual",
              "fieldValue": "opcoes_fluxos"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        5940,
        1040
      ],
      "id": "1cffd4e7-080b-400b-bd66-5180062c22a6",
      "name": "Supabase11",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "dietas",
        "filters": {
          "conditions": [
            {
              "keyName": "usuario_telefone",
              "condition": "eq",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "gordura_gramas",
              "fieldValue": "={{ $('Webhook').item.json.body.text.message }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        6160,
        1040
      ],
      "id": "c4776282-127b-4a4b-aa67-8a1dfa7b848b",
      "name": "Supabase12",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "dietas",
        "filters": {
          "conditions": [
            {
              "keyName": "usuario_telefone",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        6380,
        1040
      ],
      "id": "1768b9d0-e662-4dee-8d73-bdae1c5f9187",
      "name": "Supabase13",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3E1D888E8D8DE07F56022E7FADD21987/token/ED2BF32A855B887106BAAD09/send-text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "client-token",
              "value": "F60d85846fe6a4bfd986f72916b85da2fS"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $('Webhook').item.json.body.phone }}"
            },
            {
              "name": "message",
              "value": "=Sua dieta foi configurada com sucesso!\nCalorias diárias: {{ $json.calorias_diarias }} kcal\nProteínas: {{ $json.proteina_gramas }} g\nCarboidratos:{{ $json.carboidrato_gramas }}g\nGorduras: {{ $json.gordura_gramas }}g\n\n Agora você está pronto(a) para começar a registrar suas refeições!\n O que você gostaria de fazer agora?\n 1️⃣ Enviar uma foto de uma refeição\n 2️⃣ Consultar seu relatório de hoje"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        6600,
        1040
      ],
      "id": "0a10c308-c73c-4e53-af42-e7d32b0c49c1",
      "name": "qtd gordura1",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "estados_conversa",
        "filters": {
          "conditions": [
            {
              "keyName": "usuario_telefone",
              "condition": "eq",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "estado_atual",
              "fieldValue": "info_altura"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        5900,
        -240
      ],
      "id": "7e6097f5-0073-4155-958b-7982dbd5b9b3",
      "name": "update estado5",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3E1D888E8D8DE07F56022E7FADD21987/token/ED2BF32A855B887106BAAD09/send-text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "client-token",
              "value": "F60d85846fe6a4bfd986f72916b85da2fS"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $('Webhook').item.json.body.phone }}"
            },
            {
              "name": "message",
              "value": "=Registrado! Agora, qual o seu peso atual em kg? (exemplo: 70)"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5500,
        1260
      ],
      "id": "25f97b2f-8921-467a-b2b1-3198c7746292",
      "name": "info dieta2",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "estados_conversa",
        "filters": {
          "conditions": [
            {
              "keyName": "usuario_telefone",
              "condition": "eq",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "estado_atual",
              "fieldValue": "info_peso"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        5740,
        1260
      ],
      "id": "66c6f131-864b-4fc1-80b3-a481a477d369",
      "name": "update estado6",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "users",
        "filters": {
          "conditions": [
            {
              "keyName": "telefone",
              "condition": "eq",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "altura",
              "fieldValue": "={{ $('Webhook').item.json.body.text.message }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        5940,
        1260
      ],
      "id": "e2e92280-9a96-4458-a2e3-6276e3fa98ce",
      "name": "Supabase14",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3E1D888E8D8DE07F56022E7FADD21987/token/ED2BF32A855B887106BAAD09/send-text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "client-token",
              "value": "F60d85846fe6a4bfd986f72916b85da2fS"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $('Webhook').item.json.body.phone }}"
            },
            {
              "name": "message",
              "value": "=Perfeito! Qual a sua idade? (exemplo: 32)"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5500,
        1500
      ],
      "id": "f4939f4e-5aa8-457e-8384-e90f43c6dc47",
      "name": "info dieta3",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "estados_conversa",
        "filters": {
          "conditions": [
            {
              "keyName": "usuario_telefone",
              "condition": "eq",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "estado_atual",
              "fieldValue": "info_idade"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        5720,
        1500
      ],
      "id": "8d4daa34-c807-4c10-a3f3-4b3c3664e54d",
      "name": "update estado7",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "users",
        "filters": {
          "conditions": [
            {
              "keyName": "telefone",
              "condition": "eq",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "peso",
              "fieldValue": "={{ $('Webhook').item.json.body.text.message }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        5900,
        1500
      ],
      "id": "31299e69-ed5b-4143-85c8-15a66eb4678c",
      "name": "Supabase15",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3E1D888E8D8DE07F56022E7FADD21987/token/ED2BF32A855B887106BAAD09/send-text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "client-token",
              "value": "F60d85846fe6a4bfd986f72916b85da2fS"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $('Webhook').item.json.body.phone }}"
            },
            {
              "name": "message",
              "value": "=Agora, com qual sexo você se identifica?\n 1️⃣ Masculino\n 2️⃣ Feminino"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5480,
        1840
      ],
      "id": "93d69c16-a781-4b02-b034-5c35fac4e7b4",
      "name": "info dieta4",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "estados_conversa",
        "filters": {
          "conditions": [
            {
              "keyName": "usuario_telefone",
              "condition": "eq",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "estado_atual",
              "fieldValue": "info_sexo"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        5660,
        1840
      ],
      "id": "92704a4c-26c7-4bc5-a835-99ca0a8d5c04",
      "name": "update estado8",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "users",
        "filters": {
          "conditions": [
            {
              "keyName": "telefone",
              "condition": "eq",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "idade",
              "fieldValue": "={{ $('Webhook').item.json.body.text.message }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        5800,
        1840
      ],
      "id": "e6d19f79-39b3-48ac-b1b0-eac73077df70",
      "name": "Supabase16",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3E1D888E8D8DE07F56022E7FADD21987/token/ED2BF32A855B887106BAAD09/send-text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "client-token",
              "value": "F60d85846fe6a4bfd986f72916b85da2fS"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $('Webhook').item.json.body.phone }}"
            },
            {
              "name": "message",
              "value": "=Entendido! Agora, qual é o seu nível de atividade física?\n 1️⃣ Sedentário (pouco ou nenhum exercício)\n 2️⃣ Levemente ativo (exercício leve 1-3 dias/semana)\n 3️⃣ Moderadamente ativo (exercício moderado 3-5 dias/semana)\n 4️⃣ Muito ativo (exercício intenso 6-7 dias/semana)\n 5️⃣ Extremamente ativo (trabalho físico ou exercício muito intenso)"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5540,
        2180
      ],
      "id": "ee57898e-1a60-4971-9e3a-49a19c809afc",
      "name": "info dieta5",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "estados_conversa",
        "filters": {
          "conditions": [
            {
              "keyName": "usuario_telefone",
              "condition": "eq",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "estado_atual",
              "fieldValue": "info_atividade"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        5720,
        2180
      ],
      "id": "ec8892a6-f5c5-478c-b8e3-a147b3ec623b",
      "name": "update estado9",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "users",
        "filters": {
          "conditions": [
            {
              "keyName": "telefone",
              "condition": "eq",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "sexo",
              "fieldValue": "masculino"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        6240,
        2080
      ],
      "id": "6f21d145-0717-4b85-ba06-ed3cc601c09b",
      "name": "Supabase17",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3E1D888E8D8DE07F56022E7FADD21987/token/ED2BF32A855B887106BAAD09/send-text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "client-token",
              "value": "F60d85846fe6a4bfd986f72916b85da2fS"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $('Webhook').item.json.body.phone }}"
            },
            {
              "name": "message",
              "value": "=Entendido! Agora, qual é o seu principal objetivo?\n1️⃣ Emagrecer\n2️⃣ Manter o peso\n3️⃣ Ganhar massa muscular"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5500,
        2600
      ],
      "id": "1bc0df84-1fd9-47dc-8b29-5868028f46e7",
      "name": "info dieta6",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "estados_conversa",
        "filters": {
          "conditions": [
            {
              "keyName": "usuario_telefone",
              "condition": "eq",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "estado_atual",
              "fieldValue": "info_objetivo"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        5700,
        2600
      ],
      "id": "dafdc14d-a5cf-4563-a79e-9e962df54878",
      "name": "update estado10",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "users",
        "filters": {
          "conditions": [
            {
              "keyName": "telefone",
              "condition": "eq",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "nivel_atividade",
              "fieldValue": "={{ $('Webhook').item.json.body.text.message }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        5880,
        2600
      ],
      "id": "a6e14d04-d6ea-4d6f-ac39-915e5ed4ede8",
      "name": "Supabase18",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3E1D888E8D8DE07F56022E7FADD21987/token/ED2BF32A855B887106BAAD09/send-text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "client-token",
              "value": "F60d85846fe6a4bfd986f72916b85da2fS"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $('Webhook').item.json.body.phone }}"
            },
            {
              "name": "message",
              "value": "=Calculando sua dieta personalizada..."
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5520,
        2960
      ],
      "id": "5ea004f1-b464-4333-8d26-df6d1d6269d6",
      "name": "info dieta7",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "estados_conversa",
        "filters": {
          "conditions": [
            {
              "keyName": "usuario_telefone",
              "condition": "eq",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "estado_atual",
              "fieldValue": "aguardando_pagamento"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        5720,
        2960
      ],
      "id": "6b170c7d-f19d-4b32-b4b8-6265b9d8fd98",
      "name": "update estado11",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "users",
        "filters": {
          "conditions": [
            {
              "keyName": "telefone",
              "condition": "eq",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "objetivo",
              "fieldValue": "={{ $('Webhook').item.json.body.text.message }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        5900,
        2960
      ],
      "id": "66ea255c-6b98-42a8-ae77-26f3f810a1b5",
      "name": "Supabase19",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "dietas",
        "filters": {
          "conditions": [
            {
              "keyName": "usuario_telefone",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        6060,
        2960
      ],
      "id": "80c89093-6087-4b25-aad4-3d091710a7f5",
      "name": "Supabase20",
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "jsCode": "// --- PEGANDO VARIÁVEIS DIRETAMENTE DO NODE 'Supabase19' ---\n// Tentamos pegar as variáveis de forma segura. Se o nó Supabase19 não tiver esses campos,\n// eles serão undefined, e as conversões/validações abaixo lidarão com isso.\nconst itemSupabase = $('Supabase19').first().json;\n\n// Extração e conversão de valores para números.\n// Number() tentará converter e retornará NaN se não for um número válido.\nconst peso = Number(itemSupabase.peso);\nconst altura = Number(itemSupabase.altura);\nconst idade = Number(itemSupabase.idade);\n\n// Variáveis que podem ser strings. Usamos || \"\" para garantir que sejam strings vazias se undefined.\n// .toLowerCase() para padronizar as entradas.\nconst sexo = (itemSupabase.sexo || \"\").toLowerCase();\nconst objetivo = 'emagrecer';\n\n// parseInt() para nível de atividade. Usamos 10 para base decimal.\n// Se não for um número válido, será NaN, o que será tratado na validação.\nconst nivelAtividadeInput = parseInt(itemSupabase.nivel_atividade, 10);\nlet nivelAtividade = 2; // Valor padrão caso a entrada seja inválida ou fora da faixa\n\n// --- VALIDAÇÃO DE ENTRADAS CRÍTICAS ---\n// Retorna um erro se qualquer dado essencial for inválido.\n\n// 1. Validação de peso, altura, idade\nif (isNaN(peso) || peso <= 0 ||\n    isNaN(altura) || altura <= 0 ||\n    isNaN(idade) || idade <= 0) {\n  return [\n    {\n      json: {\n        erro: \"Erro: Peso, altura ou idade inválidos. Certifique-se de que são números positivos.\"\n      }\n    }\n  ];\n}\n\n// 2. Validação de sexo\nif (sexo !== \"masculino\" && sexo !== \"feminino\") {\n  return [\n    {\n      json: {\n        erro: \"Erro: Sexo inválido. Use 'masculino' ou 'feminino'.\"\n      }\n    }\n  ];\n}\n\n// 3. Validação de objetivo\n// Adicionando um array de objetivos válidos para validação mais robusta\nconst objetivosValidos = [\"emagrecer\", \"manter\", \"ganhar\"];\nif (!objetivosValidos.includes(objetivo)) {\n  return [\n    {\n      json: {\n        erro: `Erro: Objetivo inválido. Use um dos seguintes: ${objetivosValidos.join(', ')}.`\n      }\n    }\n  ];\n}\n\n// 4. Validação e ajuste de Nível de Atividade\n// Se o nível de atividade do input for um número válido e dentro da faixa, use-o.\n// Caso contrário, o 'nivelAtividade' já está definido como 2 (padrão).\nif (!isNaN(nivelAtividadeInput) && nivelAtividadeInput >= 1 && nivelAtividadeInput <= 5) {\n  nivelAtividade = nivelAtividadeInput;\n} else {\n    // Podemos retornar um aviso aqui ou apenas usar o padrão sem erro fatal\n    // console.warn(\"Aviso: Nível de atividade inválido. Usando o valor padrão (2 - atividade leve).\");\n}\n\n// --- FATORES DE ATIVIDADE (PARA CÁLCULO DO GET) ---\nconst fatoresAtividade = {\n  1: 1.2,    // Sedentário\n  2: 1.375,  // Levemente Ativo (1-3 dias/semana)\n  3: 1.55,   // Moderadamente Ativo (3-5 dias/semana)\n  4: 1.725,  // Muito Ativo (6-7 dias/semana)\n  5: 1.9     // Extremamente Ativo (Atletas, 2x ao dia)\n};\n\n// --- CÁLCULO DA TMB (TAXA METABÓLICA BASAL) ---\nlet tmb = 0;\nif (sexo === \"masculino\") {\n  tmb = (10 * peso) + (6.25 * altura) - (5 * idade) + 5;\n} else { // sexo === \"feminino\" (já validado)\n  tmb = (10 * peso) + (6.25 * altura) - (5 * idade) - 161;\n}\n\n// --- CÁLCULO DO GET (GASTO ENERGÉTICO TOTAL) ---\n// Usa o fator de atividade correspondente, ou 1.2 (sedentário) como fallback.\nconst fatorAtividadeAplicado = fatoresAtividade[nivelAtividade] || 1.2;\nlet calorias = tmb * fatorAtividadeAplicado;\n\n// --- AJUSTE DE CALORIAS PELO OBJETIVO ---\nif (objetivo === \"emagrecer\") {\n  calorias *= 0.8; // Reduz em 20%\n} else if (objetivo === \"ganhar\") {\n  calorias *= 1.15; // Aumenta em 15%\n}\ncalorias = Math.round(calorias); // Arredonda para o número inteiro mais próximo\n\n// --- CÁLCULO DOS MACRONUTRIENTES ---\nlet proteinaPorKg = 2.0; // Padrão\nlet gorduraPorKg = 0.8;  // Padrão\n\nif (objetivo === \"emagrecer\") {\n  proteinaPorKg = 2.2; // Maior para emagrecimento\n  gorduraPorKg = 0.7;  // Menor para emagrecimento\n} else if (objetivo === \"ganhar\") {\n  proteinaPorKg = 2.0; // Mantém\n  gorduraPorKg = 1.0;  // Um pouco mais para ganho\n}\n\nconst proteinas = Math.round(proteinaPorKg * peso);\nconst kcalProteinas = proteinas * 4; // 1g Proteína = 4 kcal\n\nconst gorduras = Math.round(gorduraPorKg * peso);\nconst kcalGorduras = gorduras * 9; // 1g Gordura = 9 kcal\n\n// Carboidratos preenchem o restante das calorias\nconst kcalRestantesParaCarboidratos = calorias - (kcalProteinas + kcalGorduras);\n// Garante que carboidratos não sejam negativos\nconst carboidratos = Math.max(0, Math.round(kcalRestantesParaCarboidratos / 4)); // 1g Carboidrato = 4 kcal\n\n// --- RETORNO DOS RESULTADOS ---\n// O N8N espera um array de objetos, onde cada objeto tem uma propriedade 'json'.\nreturn [\n  {\n    json: {\n      peso,\n      altura,\n      idade,\n      sexo,\n      objetivo,\n      nivelAtividade, // Nível de atividade final (pode ser o padrão 2)\n      tmb: Math.round(tmb), // Arredonda TMB para facilitar a leitura\n      fatorAtividadeAplicado, // O fator usado para o cálculo do GET\n      calorias, // Este é o GET final ajustado\n      proteinas,\n      carboidratos,\n      gorduras,\n      // Opcional: retornar as calorias de cada macronutriente para verificação\n      kcalProteinas,\n      kcalGorduras,\n      kcalCarboidratos: carboidratos * 4 // Calorias dos carboidratos\n    }\n  }\n];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        6240,
        2960
      ],
      "id": "137560b8-1177-41d6-b130-67d8d66bb7e3",
      "name": "Code",
      "alwaysOutputData": false,
      "retryOnFail": true
    },
    {
      "parameters": {
        "tableId": "dietas",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "calorias_diarias",
              "fieldValue": "={{ $json.calorias }}"
            },
            {
              "fieldId": "proteina_gramas",
              "fieldValue": "={{ $json.proteinas }}"
            },
            {
              "fieldId": "carboidrato_gramas",
              "fieldValue": "={{ $json.carboidratos }}"
            },
            {
              "fieldId": "gordura_gramas",
              "fieldValue": "={{ $json.gorduras }}"
            },
            {
              "fieldId": "data_criacao",
              "fieldValue": "={{ $today }}"
            },
            {
              "fieldId": "usuario_telefone",
              "fieldValue": "={{ $('Webhook').item.json.body.phone }}"
            },
            {
              "fieldId": "usuario_id",
              "fieldValue": "={{ $('BUSCA USUÁRIO').item.json.id }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        6420,
        2960
      ],
      "id": "fdd2c6af-c751-4254-941a-92c585840e7d",
      "name": "Supabase21",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3E1D888E8D8DE07F56022E7FADD21987/token/ED2BF32A855B887106BAAD09/send-text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "client-token",
              "value": "F60d85846fe6a4bfd986f72916b85da2fS"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $('Webhook').item.json.body.phone }}"
            },
            {
              "name": "message",
              "value": "=Sua dieta personalizada foi criada com sucesso! 🎉\n\nConfira os detalhes:\n- Calorias diárias: {{ $json.calorias_diarias }}kcal\n- Proteínas: {{ $json.proteina_gramas }}g\n- Carboidratos: {{ $json.carboidrato_gramas }}g\n- Gorduras: {{ $json.gordura_gramas }}g\n\nLembre-se que esta é uma estimativa. Para resultados ainda melhores, consulte um profissional de saúde.\n\nAgora você está quase pronto(a) para atingir os seus objetivos! \nPor favor, clique no link e execute o pagamento.\nhttps://buy.stripe.com/9B6dR97EPgkY95Q75z7IY0a"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        6600,
        2960
      ],
      "id": "50300395-0726-449c-8b34-2ceec6ffe5e3",
      "name": "info dieta8",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "estados_conversa",
        "filters": {
          "conditions": [
            {
              "keyName": "usuario_telefone",
              "condition": "eq",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "estado_atual",
              "fieldValue": "fluxo_real"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        5020,
        3320
      ],
      "id": "1eba46a0-eead-4ae5-a94e-fd63e8d32d2e",
      "name": "Supabase24",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "estados_conversa",
        "filters": {
          "conditions": [
            {
              "keyName": "usuario_telefone",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -1600,
        -20
      ],
      "id": "c0386a0b-1bf5-484b-9a15-a7417f387c44",
      "name": "BUSCA ESTADO_C",
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "92a936be-352b-499e-91fb-0dc9d50093a2",
              "leftValue": "={{ $json.estado_atual }}",
              "rightValue": "fluxo_real",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              }
            },
            {
              "id": "0ee50b0e-0b9c-48d7-b564-d07384519389",
              "leftValue": "={{ $json.estado_atual }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notExists",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {
          "ignoreCase": false
        }
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1440,
        -20
      ],
      "id": "0bed3fee-4431-47fc-bd47-3401cbdb5b40",
      "name": "Já passou pelo onboarding?"
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "dietas",
        "filters": {
          "conditions": [
            {
              "keyName": "usuario_telefone",
              "keyValue": "={{ $json.body.phone }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -1760,
        -20
      ],
      "id": "b1e91dac-5eb6-4afd-81a4-e75746e0608a",
      "name": "BUSCA DIETA",
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "users",
        "filters": {
          "conditions": [
            {
              "keyName": "telefone",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -580,
        -20
      ],
      "id": "0ef1fcaf-abb0-4b57-b2a9-be378dc5458e",
      "name": "BUSCA USUÁRIO",
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cbc2dc42-22ff-4362-bfc6-cbebf8c9afa5",
              "leftValue": "={{ $json.telefone }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -280,
        -20
      ],
      "id": "0f7440a3-984d-4502-95fa-1da7eadfdbb2",
      "name": "primeira mensagem?"
    },
    {
      "parameters": {
        "tableId": "users",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "telefone",
              "fieldValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        380,
        320
      ],
      "id": "409f5899-9b63-4348-81c9-d19ea240583b",
      "name": "Cria novo usuário",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "tableId": "estados_conversa",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "usuario_telefone",
              "fieldValue": "={{ $('Webhook').item.json.body.phone }}"
            },
            {
              "fieldId": "usuario_id",
              "fieldValue": "={{ $('Cria novo usuário').item.json.id }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        800,
        320
      ],
      "id": "d5d21aff-df4a-4f4f-9c37-9fec3d1ca0e0",
      "name": "Inicializa estados_conversa",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3E1D888E8D8DE07F56022E7FADD21987/token/ED2BF32A855B887106BAAD09/send-text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "client-token",
              "value": "F60d85846fe6a4bfd986f72916b85da2fS"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $('Webhook').item.json.body.phone }}"
            },
            {
              "name": "message",
              "value": "👋 Olá! Bem-vindo(a) ao CaloScan! Vamos personalizar sua experiência. Para começar, me diga seu nome completo."
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1000,
        320
      ],
      "id": "03bd4c7c-3536-499c-8228-3d6608a837b6",
      "name": "Pergunta nome",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "estados_conversa",
        "filters": {
          "conditions": [
            {
              "keyName": "usuario_telefone",
              "condition": "eq",
              "keyValue": "={{ $('Cria novo usuário').item.json.telefone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "estado_atual",
              "fieldValue": "aguardando_nome"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        1180,
        320
      ],
      "id": "fb03070e-d5b8-44f4-81d0-930211843b9b",
      "name": "Atualiza estado",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "users",
        "filters": {
          "conditions": [
            {
              "keyName": "telefone",
              "condition": "eq",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "nome",
              "fieldValue": "={{ $('Webhook').item.json.body.text.message }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        5640,
        -1120
      ],
      "id": "d00412fc-ae43-4494-960c-3ac73dfcb7dd",
      "name": "guarda o nome",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3E1D888E8D8DE07F56022E7FADD21987/token/ED2BF32A855B887106BAAD09/send-text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "client-token",
              "value": "F60d85846fe6a4bfd986f72916b85da2fS"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $('Webhook').item.json.body.phone }}"
            },
            {
              "name": "message",
              "value": "=Sem problemas! Vamos criar sua dieta personalizada. Para isso, preciso de algumas informações.\n Qual a sua altura em centímetros? (exemplo: 175)"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5700,
        -240
      ],
      "id": "df1a7c71-606a-48dd-a202-7aeb4edb334d",
      "name": "Inicializa criação dieta",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "content": "Recebe infos dieta atual\n",
        "height": 1060,
        "width": 1540,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        4700,
        200
      ],
      "id": "37083323-0209-4412-a62c-bde5aafd1f98",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "Cria dieta\n",
        "height": 2000,
        "width": 2600,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        3960,
        1300
      ],
      "id": "ea465476-e0a1-4781-8edf-a9d7d75544e8",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "e5493b26-c7a4-4353-95bb-c3aeba91201a",
              "leftValue": "",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        4860,
        -960
      ],
      "id": "67e479a1-2ba0-48bb-8ada-f0fe4dfad6cc",
      "name": "If"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "a69c037c-8a23-44bc-886b-607495687b60",
              "leftValue": "={{ $('Webhook').item.json.body.text.message }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        5680,
        240
      ],
      "id": "774d558b-c35b-4d0c-a9d3-1330416a116a",
      "name": "If2"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "25a2d426-914b-4155-8a51-6d0ad050302d",
              "leftValue": "={{ $('Webhook').item.json.body.text.message }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        5680,
        480
      ],
      "id": "5ada0921-f300-4436-a441-e2ee461309ca",
      "name": "If3"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "7df40a8f-e45f-4b8e-9b53-1241779aadf1",
              "leftValue": "={{ $('Webhook').item.json.body.text.message }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        5680,
        740
      ],
      "id": "2d42e756-593c-4674-b075-a21e5f73ff2a",
      "name": "If4"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "cba8d89d-a89a-44f8-88fa-3db23e2552f2",
              "leftValue": "={{ $('Webhook').item.json.body.text.message }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        5600,
        1060
      ],
      "id": "ef5bdf96-3eb9-41e8-ab1a-1681aaf8983a",
      "name": "If5"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "5fc2e957-0a47-4127-8f07-7299bd7210f0",
              "leftValue": "={{ $('Webhook').item.json.body.text.message }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            },
            {
              "id": "523b3b9c-58c3-46ad-bbb3-70c3caba8bcb",
              "leftValue": "={{ $json.valid }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        5160,
        1260
      ],
      "id": "0f215e40-8221-4e48-8f29-a9f27bdea697",
      "name": "If6"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "a55ef95c-0d50-4e99-aa8c-e0db6b75768c",
              "leftValue": "={{ $('Webhook').item.json.body.text.message }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            },
            {
              "id": "2b41c78c-a672-4410-bb86-9e70f2c980ed",
              "leftValue": "={{ $json.valid }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        5160,
        1500
      ],
      "id": "f423bcbd-5192-46ca-8dcb-f8df3a9f3463",
      "name": "If7"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "7e96bc71-95f1-4faa-bd1d-bd44ea85576a",
              "leftValue": "={{ $('Webhook').item.json.body.text.message }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            },
            {
              "id": "809cc22f-2096-49b0-b3dd-edaca22101b9",
              "leftValue": "={{ $json.valid }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        5180,
        1840
      ],
      "id": "f81a6712-0d3b-472a-9c4b-6f8cab55b123",
      "name": "If8"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "a2e94a2c-7ea9-4b2f-a364-7087b579d5a6",
              "leftValue": "={{ $('Webhook').item.json.body.text.message }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            },
            {
              "id": "c3cd0cfa-7b27-4417-95cf-6a151c841bb9",
              "leftValue": "={{ $('Webhook').item.json.body.text.message }}",
              "rightValue": "=1",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        5240,
        2140
      ],
      "id": "36c3ed45-7797-444d-8876-f2d0ac62665d",
      "name": "If9"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "19a245e3-f13d-4b80-b128-1bb84cf9f868",
              "leftValue": "={{ $('Webhook').item.json.body.text.message }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        5240,
        2620
      ],
      "id": "9169eec4-9e20-40d6-9d90-9f8edd4d8b40",
      "name": "If10"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "30892285-c34b-48c6-a673-ef914efebd8f",
              "leftValue": "={{ $('Webhook').item.json.body.text.message }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        5240,
        2940
      ],
      "id": "a62f6473-d622-4f78-9b06-7cac30148de2",
      "name": "If11"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3E1D888E8D8DE07F56022E7FADD21987/token/ED2BF32A855B887106BAAD09/send-text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "client-token",
              "value": "F60d85846fe6a4bfd986f72916b85da2fS"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $('Webhook').item.json.body.phone }}"
            },
            {
              "name": "message",
              "value": "=Por favor, digite a quantidade diária de carboidratos em gramas. (exemplo: 250g)"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        6020,
        880
      ],
      "id": "8ca59047-be76-4924-a634-69d46ffa0169",
      "name": "qtd carbo1",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "estados_conversa",
        "filters": {
          "conditions": [
            {
              "keyName": "usuario_telefone",
              "condition": "eq",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "estado_atual",
              "fieldValue": "quantidade_carbo"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        6200,
        880
      ],
      "id": "8b4b1f0a-9985-44b5-8f67-3ec40c9b348e",
      "name": "Supabase1",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "dietas",
        "filters": {
          "conditions": [
            {
              "keyName": "usuario_telefone",
              "condition": "eq",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "proteina_gramas",
              "fieldValue": "={{ $('Webhook').item.json.body.text.message }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        6420,
        880
      ],
      "id": "1a4b9a59-798b-46b3-ba4b-8070bf4fe56f",
      "name": "Supabase3",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "dietas",
        "filters": {
          "conditions": [
            {
              "keyName": "usuario_telefone",
              "condition": "eq",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "calorias_diarias",
              "fieldValue": "={{ $('Webhook').item.json.body.text.message }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        6280,
        560
      ],
      "id": "07937d4d-8e39-453f-bcdb-7bcba2d1f0a6",
      "name": "Supabase9",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3E1D888E8D8DE07F56022E7FADD21987/token/ED2BF32A855B887106BAAD09/send-text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "client-token",
              "value": "F60d85846fe6a4bfd986f72916b85da2fS"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $('Webhook').item.json.body.phone }}"
            },
            {
              "name": "message",
              "value": "=Registrado! Agora, qual a quantidade diária de proteínas em gramas? (exemplo: 100g)"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5940,
        560
      ],
      "id": "025a948f-0dad-4c74-9a42-3d6c29caf4e6",
      "name": "qtd proteina1",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "estados_conversa",
        "filters": {
          "conditions": [
            {
              "keyName": "usuario_telefone",
              "condition": "eq",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "estado_atual",
              "fieldValue": "quantidade_proteina"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        6120,
        560
      ],
      "id": "f67f6b32-0c31-4d7c-93df-d640a14da6b6",
      "name": "update estado",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3E1D888E8D8DE07F56022E7FADD21987/token/ED2BF32A855B887106BAAD09/send-text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "client-token",
              "value": "F60d85846fe6a4bfd986f72916b85da2fS"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $('Webhook').item.json.body.phone }}"
            },
            {
              "name": "message",
              "value": "=Registrado! Agora, qual o seu peso atual em kg? (exemplo: 70)"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5500,
        1680
      ],
      "id": "ab39fba7-b734-4a8c-93e9-eb88cce8080a",
      "name": "info dieta",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "estados_conversa",
        "filters": {
          "conditions": [
            {
              "keyName": "usuario_telefone",
              "condition": "eq",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "estado_atual",
              "fieldValue": "info_peso"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        5720,
        1680
      ],
      "id": "00300354-342c-4234-a43c-f07061366d0b",
      "name": "update estado12",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "users",
        "filters": {
          "conditions": [
            {
              "keyName": "telefone",
              "condition": "eq",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "altura",
              "fieldValue": "={{ $('Webhook').item.json.body.text.message }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        5920,
        1680
      ],
      "id": "98af85d2-87ab-401c-9671-8f31ca9ac6ba",
      "name": "Supabase22",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3E1D888E8D8DE07F56022E7FADD21987/token/ED2BF32A855B887106BAAD09/send-text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "client-token",
              "value": "F60d85846fe6a4bfd986f72916b85da2fS"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $('Webhook').item.json.body.phone }}"
            },
            {
              "name": "message",
              "value": "=Não entendi. Qual a sua idade? (exemplo: 32)"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5540,
        2000
      ],
      "id": "f2c416e8-9dcb-4e2f-b524-d07f0406d294",
      "name": "info dieta10",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "estados_conversa",
        "filters": {
          "conditions": [
            {
              "keyName": "usuario_telefone",
              "condition": "eq",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "estado_atual",
              "fieldValue": "info_idade"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        5760,
        2000
      ],
      "id": "a7be5b8e-8261-4379-b8d3-45719ce2d97b",
      "name": "update estado13",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "users",
        "filters": {
          "conditions": [
            {
              "keyName": "telefone",
              "condition": "eq",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "peso",
              "fieldValue": "={{ $('Webhook').item.json.body.text.message }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        5940,
        2000
      ],
      "id": "aecaa316-39be-47b6-89e2-e85f9c726dcb",
      "name": "Supabase23",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3E1D888E8D8DE07F56022E7FADD21987/token/ED2BF32A855B887106BAAD09/send-text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "client-token",
              "value": "F60d85846fe6a4bfd986f72916b85da2fS"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $('Webhook').item.json.body.phone }}"
            },
            {
              "name": "message",
              "value": "=Agora, com qual sexo você se identifica?\n 1️⃣ Masculino\n 2️⃣ Feminino"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5540,
        2380
      ],
      "id": "45f788e5-4f9b-4bf7-8dfe-22e7c8d8a65b",
      "name": "info dieta11",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "estados_conversa",
        "filters": {
          "conditions": [
            {
              "keyName": "usuario_telefone",
              "condition": "eq",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "estado_atual",
              "fieldValue": "info_sexo"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        5720,
        2380
      ],
      "id": "c3e85de1-d6ee-4991-8f7a-beceaea774f5",
      "name": "update estado14",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "users",
        "filters": {
          "conditions": [
            {
              "keyName": "telefone",
              "condition": "eq",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "idade",
              "fieldValue": "={{ $('Webhook').item.json.body.text.message }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        5880,
        2380
      ],
      "id": "3a320d5b-a8e0-4d57-923a-bb0457c478c8",
      "name": "Supabase26",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3E1D888E8D8DE07F56022E7FADD21987/token/ED2BF32A855B887106BAAD09/send-text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "client-token",
              "value": "F60d85846fe6a4bfd986f72916b85da2fS"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $('Webhook').item.json.body.phone }}"
            },
            {
              "name": "message",
              "value": "=Entendido! Agora, qual é o seu nível de atividade física?\n 1️⃣ Sedentário (pouco ou nenhum exercício)\n 2️⃣ Levemente ativo (exercício leve 1-3 dias/semana)\n 3️⃣ Moderadamente ativo (exercício moderado 3-5 dias/semana)\n 4️⃣ Muito ativo (exercício intenso 6-7 dias/semana)\n 5️⃣ Extremamente ativo (trabalho físico ou exercício muito intenso)"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5500,
        2780
      ],
      "id": "c9790fcb-8714-40e7-888a-9e24f7969e3e",
      "name": "info dieta12",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "estados_conversa",
        "filters": {
          "conditions": [
            {
              "keyName": "usuario_telefone",
              "condition": "eq",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "estado_atual",
              "fieldValue": "info_atividade"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        5660,
        2780
      ],
      "id": "8645972b-2e76-4f74-9ccc-865bd6da54d0",
      "name": "update estado15",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "users",
        "filters": {
          "conditions": [
            {
              "keyName": "telefone",
              "condition": "eq",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "sexo",
              "fieldValue": "={{ $('Webhook').item.json.body.text.message }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        5820,
        2780
      ],
      "id": "8e70e2a2-4523-400f-a288-d6d2d21f03f2",
      "name": "Supabase27",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3E1D888E8D8DE07F56022E7FADD21987/token/ED2BF32A855B887106BAAD09/send-text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "client-token",
              "value": "F60d85846fe6a4bfd986f72916b85da2fS"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $('Webhook').item.json.body.phone }}"
            },
            {
              "name": "message",
              "value": "=Entendido! Agora, qual é o seu principal objetivo?\n1️⃣ Emagrecer\n2️⃣ Manter o peso\n3️⃣ Ganhar massa muscular"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5520,
        3100
      ],
      "id": "9261546f-a24d-4065-a235-cfa89e7c6157",
      "name": "info dieta13",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "estados_conversa",
        "filters": {
          "conditions": [
            {
              "keyName": "usuario_telefone",
              "condition": "eq",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "estado_atual",
              "fieldValue": "info_objetivo"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        5720,
        3100
      ],
      "id": "9ef993a9-5b2c-45d0-a7af-72b07d55a152",
      "name": "update estado16",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "users",
        "filters": {
          "conditions": [
            {
              "keyName": "telefone",
              "condition": "eq",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "nivel_atividade",
              "fieldValue": "={{ $('Webhook').item.json.body.text.message }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        5900,
        3100
      ],
      "id": "7008585d-e718-4da7-b771-fd5fc2eb9973",
      "name": "Supabase28",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "tableId": "users",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "telefone",
              "fieldValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        5460,
        -880
      ],
      "id": "096c4a31-e661-4188-8e8c-8b0940542f7f",
      "name": "Cria novo usuário1",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "tableId": "estados_conversa",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "usuario_telefone",
              "fieldValue": "={{ $('Webhook').item.json.body.phone }}"
            },
            {
              "fieldId": "usuario_id",
              "fieldValue": "={{ $('BUSCA USUÁRIO').item.json.id }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        5660,
        -880
      ],
      "id": "5f0164ab-fbb1-4d46-901c-3703696716a5",
      "name": "Inicializa estados_conversa1",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3E1D888E8D8DE07F56022E7FADD21987/token/ED2BF32A855B887106BAAD09/send-text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "client-token",
              "value": "F60d85846fe6a4bfd986f72916b85da2fS"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $('Webhook').item.json.body.phone }}"
            },
            {
              "name": "message",
              "value": "👋 Olá! Bem-vindo(a) ao CaloScan! Vamos personalizar sua experiência. Para começar, me diga seu nome completo."
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5860,
        -880
      ],
      "id": "e9dee6aa-852b-42cc-a793-f8f2bb1cb7b8",
      "name": "Pergunta nome1",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "estados_conversa",
        "filters": {
          "conditions": [
            {
              "keyName": "usuario_telefone",
              "condition": "eq",
              "keyValue": "={{ $('Cria novo usuário1').item.json.telefone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "estado_atual",
              "fieldValue": "aguardando_nome"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        6060,
        -880
      ],
      "id": "5c7c2cb9-7697-4b69-b96f-813aa5a630bc",
      "name": "Atualiza estado1",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "estados_conversa",
        "filters": {
          "conditions": [
            {
              "keyName": "usuario_telefone",
              "condition": "eq",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "estado_atual",
              "fieldValue": "info_altura"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        6400,
        1380
      ],
      "id": "57a6ed22-4494-447e-8298-073a67aa4bcd",
      "name": "update estado17",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3E1D888E8D8DE07F56022E7FADD21987/token/ED2BF32A855B887106BAAD09/send-text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "client-token",
              "value": "F60d85846fe6a4bfd986f72916b85da2fS"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $('Webhook').item.json.body.phone }}"
            },
            {
              "name": "message",
              "value": "=Não entendi.\nQual a sua altura em centímetros? (exemplo: 175)"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        6060,
        1400
      ],
      "id": "9813194a-84c1-46d7-8284-c6e6cb74c65e",
      "name": "Inicializa criação dieta1",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3E1D888E8D8DE07F56022E7FADD21987/token/ED2BF32A855B887106BAAD09/send-text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "client-token",
              "value": "F60d85846fe6a4bfd986f72916b85da2fS"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $('Webhook').item.json.body.phone }}"
            },
            {
              "name": "message",
              "value": "=Estamos quase lá!\nPara ter acesso a todos os nossos benefícios, complete a assinatura através do link:\nhttps://buy.stripe.com/00wbJ1aR16Ko4PA61v7IY02"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5240,
        3320
      ],
      "id": "b0573e06-9c01-4f1b-a0b1-3b3cbe8a8e5b",
      "name": "info dieta14",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "users",
        "filters": {
          "conditions": [
            {
              "keyName": "telefone",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -1220,
        80
      ],
      "id": "42ba957a-9eac-4e6f-a389-34f7d506a3de",
      "name": "Supabase10",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "861eb2d7-2abd-43af-b6d1-1f82f1ef6f43",
              "leftValue": "={{ $json.assinatura_ativa }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1000,
        80
      ],
      "id": "c101c2c3-e3f7-4afb-bd27-afc3a8aa5ea7",
      "name": "If12"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3E1D888E8D8DE07F56022E7FADD21987/token/ED2BF32A855B887106BAAD09/send-text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "client-token",
              "value": "F60d85846fe6a4bfd986f72916b85da2fS"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $('Webhook').item.json.body.phone }}"
            },
            {
              "name": "message",
              "value": "=Estamos quase lá!\nPara ter acesso a todos os nossos benefícios, complete a assinatura através do link:\nhttps://buy.stripe.com/00wbJ1aR16Ko4PA61v7IY02\n"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -4980,
        1340
      ],
      "id": "224ced08-d270-4efa-9648-595494836136",
      "name": "info dieta15",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "estados_conversa",
        "filters": {
          "conditions": [
            {
              "keyName": "usuario_telefone",
              "condition": "eq",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "estado_atual",
              "fieldValue": "aguardando_pagamento"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -4760,
        1340
      ],
      "id": "39562bc5-1691-452c-afe8-971c06633b24",
      "name": "Supabase29",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "amount": 300
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -4540,
        1340
      ],
      "id": "f7e08645-401e-4b5a-a545-49f5fb581a0e",
      "name": "Wait",
      "webhookId": "ed35336d-114d-4a8a-8119-315bd03f0f85"
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "users",
        "filters": {
          "conditions": [
            {
              "keyName": "telefone",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -4320,
        1340
      ],
      "id": "f4b64ac0-646f-48c7-9705-d96787eaa469",
      "name": "Supabase30",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "df0cee08-b2ed-4cfe-ac60-9702bc0ebfb9",
              "leftValue": "={{ $json.assinatura_ativa }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -4100,
        1340
      ],
      "id": "f1d4d716-b0ce-403f-880e-ea638c8d74cf",
      "name": "If13"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3E1D888E8D8DE07F56022E7FADD21987/token/ED2BF32A855B887106BAAD09/send-text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "client-token",
              "value": "F60d85846fe6a4bfd986f72916b85da2fS"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $('Webhook').item.json.body.phone }}"
            },
            {
              "name": "message",
              "value": "=Não conseguimos identificar o seu pagamento...\nPara ter acesso a todos os nossos benefícios, complete a assinatura através do link:\nhttps://buy.stripe.com/00wbJ1aR16Ko4PA61v7IY02\n"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -3800,
        1680
      ],
      "id": "49afd3a2-756b-47be-9713-ad80e749daba",
      "name": "info dieta17",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "estados_conversa",
        "filters": {
          "conditions": [
            {
              "keyName": "usuario_telefone",
              "condition": "eq",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "estado_atual",
              "fieldValue": "aguardando_pagamento"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -3640,
        1680
      ],
      "id": "d5f52726-bafc-487e-9217-73cd46efa576",
      "name": "Supabase32",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "906511c9-457d-4610-961d-d817039a350c",
              "name": "body.messageId",
              "value": "={{ $('Webhook').item.json.body.messageId }}",
              "type": "string"
            },
            {
              "id": "59f45bf0-18d5-408d-bb51-448d2afccbc7",
              "name": "body.phone",
              "value": "={{ $('Webhook').item.json.body.phone }}",
              "type": "string"
            },
            {
              "id": "df0f1137-3fa2-4fbc-81e9-8e4d1dace7c0",
              "name": "body.chatName",
              "value": "={{ $('Webhook').item.json.body.chatName }}",
              "type": "string"
            },
            {
              "id": "aed460bc-bec5-4e9a-8c55-45247dc3478f",
              "name": "body.photo",
              "value": "={{ $('Webhook').item.json.body.photo }}",
              "type": "string"
            },
            {
              "id": "3ccd9ed9-d315-4b5c-b1d1-84d22fee88f2",
              "name": "body.image",
              "value": "={{ $('Webhook').item.json.body.image }}",
              "type": "object"
            },
            {
              "id": "19aae071-e4db-43f8-940e-f315dc43cd16",
              "name": "body.image.imageUrl",
              "value": "={{ $('Webhook').item.json.body.image.imageUrl }}",
              "type": "string"
            },
            {
              "id": "3bf4069e-8ae4-4d15-9bd9-4ff679a84f5d",
              "name": "body.image.thumbnailUrl",
              "value": "={{ $('Webhook').item.json.body.image.thumbnailUrl }}",
              "type": "string"
            },
            {
              "id": "a54c2772-da1c-4311-966c-44a4c9adf188",
              "name": "body.text",
              "value": "={{ $json.text }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -6480,
        3720
      ],
      "id": "5588e5d1-7497-4f9a-bb98-17b864b27c82",
      "name": "Edit Fields1",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://barcode-scanner-production.up.railway.app/detect-flexible",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer 91c4c1f5-e612-4718-8d08-4777e73d8a15"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "image_url",
              "value": "={{ $('Webhook1').item.json.body.image.imageUrl }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1980,
        3380
      ],
      "id": "24714616-ea4a-4218-8fab-580b9d5b974d",
      "name": "barcode-scanner1",
      "alwaysOutputData": true,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "jsCode": "return items.map(item => {\n\t// --- Extrai e garante que são números ---\n\tconst {\n\t\tserving_quantity,\n\t\tfat_100g,\n\t\tcarbohydrates_100g,\n\t\tproteins_100g,\n\t} = item.json;\n\n\tconst porcao = Number(serving_quantity) || 0;\n\tconst fat100  = Number(fat_100g) || 0;\n\tconst carb100 = Number(carbohydrates_100g) || 0;\n\tconst prot100 = Number(proteins_100g) || 0;\n\n\t// --- Converte valores para a porção específica ---\n\tconst fator = porcao / 100;\n\tconst gordPorcao = +(fat100  * fator).toFixed(1);   // uma casa decimal\n\tconst carbPorcao = +(carb100 * fator).toFixed(1);\n\tconst protPorcao = +(prot100 * fator).toFixed(1);\n\n\t// --- Calcula calorias ---\n\tconst kcal = Math.round(gordPorcao*9 + (carbPorcao + protPorcao)*4);\n\n\t// --- Monta a frase no formato pedido ---\n\tconst prompt = `O produto tem ${porcao} g: ${kcal} kcal (${carbPorcao} g carb, ${protPorcao} g prot, ${gordPorcao} g gord). Deseja adicionar ao diário? (sim/não)`;\n\n\t// Anexa a nova chave ao item e devolve\n\titem.json.prompt = prompt;\n\treturn item;\n});"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1320,
        3180
      ],
      "id": "f8a74187-1cd7-468c-9144-d3d950c7b175",
      "name": "Code1"
    },
    {
      "parameters": {
        "collection": "products",
        "options": {},
        "query": "={\"code\": \"{{ $json.data.barcodeValue }}\"}"
      },
      "type": "n8n-nodes-base.mongoDb",
      "typeVersion": 1.1,
      "position": [
        -1540,
        3180
      ],
      "id": "35cbe98e-1be4-4be2-baca-17198aa9ccf4",
      "name": "MongoDB",
      "credentials": {
        "mongoDb": {
          "id": "R0XB7GXfu4DVDkeF",
          "name": "MongoDB account 2"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Se a resposta for positiva, registre no Supabase o seguinte conteúdo:\n\nMensagem do usuário: {{ $('Code2').item.json.message }}\n\nPergunta correspondente: {{ $json.question }}\n\nUtilize esses dois campos como base para o registro no banco de dados.",
        "options": {
          "systemMessage": "A partir da mensagem escrita pelo usuário, extraia:\n\n- nome do alimento ou refeição\n- valor estimado de calorias\n- quantidade de proteínas, carboidratos e gorduras\n\nUse esses dados para preencher uma linha da tabela `registros_alimentares` no Supabase.\n\nRetorne apenas o corpo do JSON a ser enviado por POST para o endpoint REST do Supabase:\n\n```json\n{\n  \"nome_alimento\": \"<nome do alimento>\",\n  \"calorias\": <valor em kcal>,\n  \"carboidratos\": <gramas>,\n  \"proteinas\": <gramas>,\n  \"gorduras\": <gramas>\n}\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        -140,
        4340
      ],
      "id": "a9da0475-abe0-433d-bfda-9fa4969c7dc1",
      "name": "AI Agent",
      "executeOnce": true
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -100,
        4560
      ],
      "id": "14208044-0aff-4c0a-bf72-75bf3ed194c9",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "1GukOqQFTAL9y3Gf",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3E1D888E8D8DE07F56022E7FADD21987/token/ED2BF32A855B887106BAAD09/send-text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "client-token",
              "value": "F60d85846fe6a4bfd986f72916b85da2fS"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $('Webhook').item.json.body.phone }}"
            },
            {
              "name": "message",
              "value": "=Item adicionado ao log"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        240,
        4440
      ],
      "id": "4eff1f1c-4f33-4762-b108-9e6a40ddd42a",
      "name": "HTTP Request3"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3E1D888E8D8DE07F56022E7FADD21987/token/ED2BF32A855B887106BAAD09/send-text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "client-token",
              "value": "F60d85846fe6a4bfd986f72916b85da2fS"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $('Webhook').item.json.body.phone }}"
            },
            {
              "name": "message",
              "value": "=Posso te ajudar de uma outra forma?"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        460,
        4440
      ],
      "id": "d38f4405-5469-412e-8d81-22c887e73be7",
      "name": "HTTP Request4"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('Code2').item.json.message }}",
        "options": {
          "systemMessage": "Você é uma nutricionista virtual altamente qualificada, com conhecimento avançado em nutrição, bioquímica, dietética, saúde metabólica e hábitos alimentares.\n\nSeu papel é orientar, educar e responder às dúvidas dos usuários com base em evidências científicas, usando uma linguagem amigável, clara e adaptada ao público geral.\n\n### Seu tom:\n- Profissional, mas acolhedor\n- Didático, sem ser técnico demais\n- Sem julgamentos ou imposições\n- Motivacional, quando apropriado\n\n### Seu objetivo:\nAjudar o usuário a compreender melhor a alimentação, tomar decisões mais conscientes e manter uma relação saudável com a comida.\n\n### Você pode:\n- Explicar diferenças entre alimentos (ex: arroz branco vs integral)\n- Avaliar escolhas alimentares (ex: “comi pão à noite, é ruim?”)\n- Estimar calorias e macronutrientes de refeições\n- Sugerir substituições mais saudáveis\n- Explicar conceitos como índice glicêmico, déficit calórico, jejum intermitente, etc.\n- Ajudar com metas como emagrecimento, ganho de massa ou alimentação consciente\n\n### Você não pode:\n- Prescrever dietas específicas ou recomendar suplementação medicamentosa\n- Fazer diagnóstico médico\n- Repreender o usuário\n\nSempre responda de forma humanizada, empática e fundamentada. Se não tiver dados suficientes para responder com confiança, diga isso com honestidade e oriente o usuário a procurar um nutricionista humano presencial.\n\nExemplos de respostas:\n- \"Essa escolha pode ser boa dependendo do seu objetivo! Posso te explicar as diferenças.\"\n- \"Sim, arroz integral tem mais fibras, o que ajuda na saciedade.\"\n- \"Se quiser perder peso, o ideal é manter um déficit calórico. Posso te ajudar a entender isso melhor.\"\n\n⚠️ Você está aqui para **educar e apoiar**, nunca para julgar.\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        -2380,
        5480
      ],
      "id": "db1b1106-7613-4424-88f9-9f049781a30d",
      "name": "AI Agent1"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -2300,
        5700
      ],
      "id": "b2ea7ec3-5163-4b0d-9699-1a86802d26c2",
      "name": "OpenAI Chat Model1",
      "credentials": {
        "openAiApi": {
          "id": "1GukOqQFTAL9y3Gf",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3E1D888E8D8DE07F56022E7FADD21987/token/ED2BF32A855B887106BAAD09/send-text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "client-token",
              "value": "F60d85846fe6a4bfd986f72916b85da2fS"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $('Webhook').item.json.body.phone }}"
            },
            {
              "name": "message",
              "value": "={{ $json.output }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -2000,
        5480
      ],
      "id": "27b7f440-e2a7-44c7-a1a6-658d1140e02f",
      "name": "HTTP Request5"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3E1D888E8D8DE07F56022E7FADD21987/token/ED2BF32A855B887106BAAD09/send-text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "client-token",
              "value": "F60d85846fe6a4bfd986f72916b85da2fS"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $('Webhook').item.json.body.phone }}"
            },
            {
              "name": "message",
              "value": "={{ $json.originalMessage }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -880,
        3380
      ],
      "id": "07dcf737-e3fd-4f2e-876f-7e1db9f7dd40",
      "name": "Http Request retorna Mensagem para Wpp"
    },
    {
      "parameters": {
        "tableId": "pending_questions",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "phone",
              "fieldValue": "={{ $('Edit Fields1').item.json.body.phone }}"
            },
            {
              "fieldId": "question",
              "fieldValue": "={{ $('gpt-api-com-msg').item.json.choices[0].message.content }}"
            },
            {
              "fieldId": "status",
              "fieldValue": "Pending"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -660,
        3380
      ],
      "id": "e6fe6b2c-4f8c-454c-89c7-7852625055d5",
      "name": "Supabase cria pending request",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3E1D888E8D8DE07F56022E7FADD21987/token/ED2BF32A855B887106BAAD09/send-text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "client-token",
              "value": "F60d85846fe6a4bfd986f72916b85da2fS"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $('Webhook').item.json.body.phone }}"
            },
            {
              "name": "message",
              "value": "={{ $json.prompt }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1100,
        3180
      ],
      "id": "4b83e329-3dfc-4429-bccf-f6fd2a578595",
      "name": "HTTP Request retorna macros para wpp"
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $('Edit Fields1').item.json.body.phone }}",
        "messageData": "={{ JSON.stringify({ \n  ...$('Edit Fields1').item.json.body, \n  timestamp: Date.now(),\n  created_at: $json.formattedDate\n}) }}"
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -6040,
        3720
      ],
      "id": "c665fa64-6b58-4383-ae90-973487e97731",
      "name": "Redis",
      "credentials": {
        "redis": {
          "id": "SorfswMQy49pOxNc",
          "name": "Redis account 2"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "key": "={{ $('Edit Fields1').item.json.body.phone }}",
        "options": {}
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -5080,
        4420
      ],
      "id": "f3cf295a-0e56-4c29-8f0c-e471cb94643d",
      "name": "Redis1",
      "credentials": {
        "redis": {
          "id": "SorfswMQy49pOxNc",
          "name": "Redis account 2"
        }
      }
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "={{ $('Code2').item.json.phoneNumber }}"
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -4200,
        4180
      ],
      "id": "1f9c545d-07f0-4371-840a-c1a500dfc68f",
      "name": "Redis2",
      "credentials": {
        "redis": {
          "id": "SorfswMQy49pOxNc",
          "name": "Redis account 2"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -4640,
        4440
      ],
      "id": "f135f63d-9396-413c-8bef-57e7feeb43bd",
      "name": "No Operation, do nothing"
    },
    {
      "parameters": {
        "jsCode": "const rawMessages = $input.first().json.propertyName;\n\n// 1. Parsear as strings JSON, filtrando as que forem inválidas\nconst parsed = rawMessages\n  .map(str => {\n    try { return JSON.parse(str); }\n    catch { return null; }\n  })\n  .filter(Boolean);\n\n// 2. Encontrar a URL da imagem mais recente.\n// A sua lógica está correta, pois o array já vem ordenado do mais novo para o mais antigo.\n// O primeiro item com imagem que o loop encontrar será o mais recente.\nlet latestImageUrl = null;\nfor (const msg of parsed) {\n  if (msg.image?.imageUrl) {\n    latestImageUrl = msg.image.imageUrl;\n    break; // Encontrou a mais recente, pode parar o loop\n  }\n}\n\n// 3. Extrair um único número de telefone (são todos iguais)\nconst phoneNumber = parsed.length > 0 ? parsed[0].phone : null;\n\n// 4. Concatenar todas as mensagens de texto da MAIS ANTIGA para a MAIS NOVA\nconst message = [...parsed] // Cria uma cópia para não alterar o array 'parsed'\n  .reverse() // Inverte para ordenar da mais antiga para a mais nova\n  .map(msg => {\n    // LÓGICA CORRIGIDA: Verifica a estrutura {\"text\": {\"message\": \"...\"}}\n    if (msg.text?.message) {\n      return msg.text.message;\n    }\n    // Mantém a verificação para outras possíveis estruturas\n    if (typeof msg.text === 'string') {\n      return msg.text;\n    }\n    return ''; // Retorna string vazia para mensagens sem texto (ex: só imagem)\n  })\n  .filter(text => text) // Remove as strings vazias\n  .join(' '); // Junta todas as mensagens com um espaço\n\n// 5. Retornar o objeto final\nreturn [{\n  json: {\n    message: message || null, // Retorna a string ou nulo se não houver mensagens\n    imageUrl: latestImageUrl,\n    phoneNumber: phoneNumber\n  }\n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -4640,
        4180
      ],
      "id": "74f6838f-1916-42fa-90fd-a2e7f2cd6052",
      "name": "Code2"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.propertyName.length }}",
                    "rightValue": 5,
                    "operator": {
                      "type": "number",
                      "operation": "gte"
                    },
                    "id": "9f965796-dc0d-494a-9230-073bd8817904"
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ JSON.parse($json.propertyName[0]).timestamp }}",
                    "rightValue": "={{ Date.now() - 5000 }}",
                    "operator": {
                      "type": "number",
                      "operation": "lte"
                    },
                    "id": "eeebb6dc-eb66-44fd-ae07-f0fc7470039e"
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -4860,
        4340
      ],
      "id": "67e88957-733d-45be-bc44-41d695759c83",
      "name": "Switch2"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3E1D888E8D8DE07F56022E7FADD21987/token/ED2BF32A855B887106BAAD09/send-text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "client-token",
              "value": "F60d85846fe6a4bfd986f72916b85da2fS"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $('Code2').item.json.phoneNumber }}"
            },
            {
              "name": "message",
              "value": "={{ $json.correctedMessage }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -880,
        3580
      ],
      "id": "9d5067e6-1767-4594-b89d-57b9af2d8e02",
      "name": "Http Request retorna Mensagem para Wpp1"
    },
    {
      "parameters": {
        "tableId": "pending_questions",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "phone",
              "fieldValue": "={{ $('Edit Fields1').item.json.body.phone }}"
            },
            {
              "fieldId": "question",
              "fieldValue": "={{ $('Code7').item.json.correctedMessage }}"
            },
            {
              "fieldId": "status",
              "fieldValue": "Pending"
            },
            {
              "fieldId": "calories",
              "fieldValue": "={{ $('Code7').item.json.calories.calculated }}"
            },
            {
              "fieldId": "protein",
              "fieldValue": "={{ $('Code7').item.json.nutritionalBreakdown.proteins.grams }}"
            },
            {
              "fieldId": "carbs",
              "fieldValue": "={{ $('Code7').item.json.nutritionalBreakdown.carbs.grams }}"
            },
            {
              "fieldId": "fat",
              "fieldValue": "={{ $('Code7').item.json.nutritionalBreakdown.fats.grams }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -660,
        3580
      ],
      "id": "db432dcf-296a-44c2-8e2d-ff2b7e3f1354",
      "name": "Supabase cria pending request1",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3E1D888E8D8DE07F56022E7FADD21987/token/ED2BF32A855B887106BAAD09/send-text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "client-token",
              "value": "F60d85846fe6a4bfd986f72916b85da2fS"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $('Webhook').item.json.body.phone }}"
            },
            {
              "name": "message",
              "value": "Deseja adicionar esta refeição ao relatório?"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -440,
        3580
      ],
      "id": "38a47c38-c4da-469b-ba19-3b6a68e463a3",
      "name": "Http Request retorna Mensagem para Wpp2"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3E1D888E8D8DE07F56022E7FADD21987/token/ED2BF32A855B887106BAAD09/send-text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "client-token",
              "value": "F60d85846fe6a4bfd986f72916b85da2fS"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $('Webhook').item.json.body.phone }}"
            },
            {
              "name": "message",
              "value": "Deseja adicionar esta refeição ao relatório?"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -440,
        3380
      ],
      "id": "58021091-1185-4221-8bb5-f89233c7125e",
      "name": "Http Request retorna Mensagem para Wpp3"
    },
    {
      "parameters": {
        "jsCode": "const currentCounter = parseInt($execution.customData.get('counter') || '0');\n$execution.customData.set('counter', (currentCounter + 1).toString());\n\nreturn {\n  json: {\n    counter: currentCounter + 1,\n    item: $input.first().json // pass through your loop data\n  }\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -4420,
        4440
      ],
      "id": "86e4d29a-e012-471b-95b1-cf94c1e4111b",
      "name": "Code3"
    },
    {
      "parameters": {
        "jsCode": "$execution.customData.set('counter', '0');\n\nreturn {\n  json: {\n    message: \"Counter initialized to 0\"\n  }\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -5600,
        3720
      ],
      "id": "922fb235-0ebf-42fb-a82b-2cbf3d9600c2",
      "name": "Code4"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -3980,
        4380
      ],
      "id": "b7b274ae-d3ee-485b-999f-db642f79d13e",
      "name": "No Operation, do nothing1"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3E1D888E8D8DE07F56022E7FADD21987/token/ED2BF32A855B887106BAAD09/send-text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "client-token",
              "value": "F60d85846fe6a4bfd986f72916b85da2fS"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $('Webhook').item.json.body.phone }}"
            },
            {
              "name": "message",
              "value": "Calculando..."
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -2200,
        3380
      ],
      "id": "9e33f3bf-6d31-4170-9d39-ca677adc9d6a",
      "name": "Http Request retorna Mensagem para Wpp4"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3E1D888E8D8DE07F56022E7FADD21987/token/ED2BF32A855B887106BAAD09/send-text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "client-token",
              "value": "F60d85846fe6a4bfd986f72916b85da2fS"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $('Webhook').item.json.body.phone }}"
            },
            {
              "name": "message",
              "value": "Adicionando..."
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1820,
        4580
      ],
      "id": "9b3266eb-47bf-4d12-8d75-790b29414cdf",
      "name": "Http Request retorna Mensagem para Wpp5"
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "users",
        "filters": {
          "conditions": [
            {
              "keyName": "telefone",
              "keyValue": "={{ $('Switch1').item.json.phone }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -1240,
        4580
      ],
      "id": "b5f90e4d-0e1a-498b-b7df-b614e476a211",
      "name": "get-user-id",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "pending_questions",
        "filters": {
          "conditions": [
            {
              "keyName": "phone",
              "condition": "eq",
              "keyValue": "={{ $json.telefone }}"
            },
            {
              "keyName": "status",
              "condition": "eq",
              "keyValue": "Pending "
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "status",
              "fieldValue": "Processing "
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -1020,
        4580
      ],
      "id": "b9fbfcb1-ec31-4188-bb7d-7fa2718d1a0c",
      "name": "get-message",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "jsCode": "function determineMealType(currentTime, existingMeals) {\n  const timeToMinutes = (timeStr) => {\n    if (!timeStr || typeof timeStr !== 'string') {\n      return 0; // Default to midnight if invalid\n    }\n    const [hours, minutes] = timeStr.split(':').map(Number);\n    return hours * 60 + minutes;\n  };\n  \n  const currentMinutes = timeToMinutes(currentTime);\n  const morningCutoff = 11 * 60 + 30; // 11:30\n  const afternoonCutoff = 18 * 60 + 30; // 18:30\n  \n  let mealType;\n  \n  if (currentMinutes < morningCutoff) {\n    // Morning period\n    const morningMeals = existingMeals.filter(meal => {\n      if (!meal || !meal.hora_consumo) return false;\n      const mealMinutes = timeToMinutes(meal.hora_consumo);\n      return mealMinutes < morningCutoff;\n    });\n    \n    const count = morningMeals.length + 1;\n    mealType = count === 1 ? 'cafe da manha' : `lanche da manha ${count - 1}`;\n    \n  } else if (currentMinutes < afternoonCutoff) {\n    // Afternoon period\n    const afternoonMeals = existingMeals.filter(meal => {\n      if (!meal || !meal.hora_consumo) return false;\n      const mealMinutes = timeToMinutes(meal.hora_consumo);\n      return mealMinutes >= morningCutoff && mealMinutes < afternoonCutoff;\n    });\n    \n    const count = afternoonMeals.length + 1;\n    mealType = count === 1 ? 'almoco' : `lanche da tarde ${count - 1}`;\n    \n  } else {\n    // Evening period\n    const eveningMeals = existingMeals.filter(meal => {\n      if (!meal || !meal.hora_consumo) return false;\n      const mealMinutes = timeToMinutes(meal.hora_consumo);\n      return mealMinutes >= afternoonCutoff;\n    });\n    \n    const count = eveningMeals.length + 1;\n    mealType = count === 1 ? 'jantar' : `lanche da noite ${count - 1}`;\n  }\n  \n  return mealType;\n}\n\n// Get data from previous nodes using correct n8n syntax\nconst nutritionData = $('nutrition-extractor').first().json;\nconst existingMealsData = $('Supabase35').first().json;\n\n// Get current time in Brazil timezone (UTC-3)\nconst now = new Date();\nconst brazilTime = new Date(now.getTime() - (3 * 60 * 60 * 1000)); // UTC-3\nconst currentTime = brazilTime.toTimeString().split(' ')[0].substring(0, 5);\n\n// Handle the case where existingMealsData might be an array or single object\nlet existingMeals = [];\nif (Array.isArray(existingMealsData)) {\n  existingMeals = existingMealsData;\n} else if (existingMealsData) {\n  existingMeals = [existingMealsData];\n}\n\nconst mealType = determineMealType(currentTime, existingMeals);\n\nreturn [{\n  json: {\n    ...nutritionData,\n    tipo_refeicao: mealType,\n    data_consumo: new Date().toISOString().split('T')[0],\n    hora_consumo: currentTime\n  }\n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        460,
        4740
      ],
      "id": "2390f76f-e1e1-4cff-adaf-a3bde831f7e2",
      "name": "Code5"
    },
    {
      "parameters": {
        "jsCode": "function extractNutrition(text) {\n  const nutrition = {\n    calories: 0,\n    carbs: 0,\n    proteins: 0,\n    fats: 0\n  };\n  \n  // Check if text exists and is a string\n  if (!text || typeof text !== 'string') {\n    return nutrition;\n  }\n  \n  // Calories patterns\n  const caloriesRegex = /(?:calorias?|kcal|energia)\\s*:?\\s*~?(\\d+(?:[.,]\\d+)?)/i;\n  const caloriesMatch = text.match(caloriesRegex);\n  if (caloriesMatch) nutrition.calories = parseFloat(caloriesMatch[1].replace(',', '.'));\n  \n  // Carbs patterns\n  const carbsRegex = /(?:carboidratos?|carbs?)\\s*:?\\s*~?(\\d+(?:[.,]\\d+)?)g?/i;\n  const carbsMatch = text.match(carbsRegex);\n  if (carbsMatch) nutrition.carbs = parseFloat(carbsMatch[1].replace(',', '.'));\n  \n  // Proteins patterns\n  const proteinsRegex = /(?:proteínas?|proteins?)\\s*:?\\s*~?(\\d+(?:[.,]\\d+)?)g?/i;\n  const proteinsMatch = text.match(proteinsRegex);\n  if (proteinsMatch) nutrition.proteins = parseFloat(proteinsMatch[1].replace(',', '.'));\n  \n  // Fats patterns\n  const fatsRegex = /(?:gorduras?|fats?|lipídios?)\\s*:?\\s*~?(\\d+(?:[.,]\\d+)?)g?/i;\n  const fatsMatch = text.match(fatsRegex);\n  if (fatsMatch) nutrition.fats = parseFloat(fatsMatch[1].replace(',', '.'));\n  \n  return nutrition;\n}\n\n// Get the question field from your JSON input\nconst message = $input.first().json.question;\n\n// Extract nutrition data\nconst extractedData = extractNutrition(message);\n\nreturn [{\n  json: {\n    ...extractedData,\n    original_message: message,\n    extraction_method: 'regex',\n    extracted_at: new Date().toISOString(),\n    // Keep original data for reference\n    id: $input.first().json.id,\n    phone: $input.first().json.phone,\n    status: $input.first().json.status\n  }\n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -580,
        4580
      ],
      "id": "2d07695a-08e3-4236-9ced-12dd62002325",
      "name": "nutrition-extractor"
    },
    {
      "parameters": {
        "inputText": "={{ $('Switch1').item.json.question }}",
        "options": {
          "categories": "Positive, Neutral, Negative"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.sentimentAnalysis",
      "typeVersion": 1,
      "position": [
        -1620,
        4680
      ],
      "id": "edbfc91b-9762-4126-bfe0-80fff6d845e2",
      "name": "Sentiment Analysis"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -1700,
        4900
      ],
      "id": "4740f1c1-2c03-4d60-8679-7107f5a2b23f",
      "name": "OpenAI Chat Model2",
      "credentials": {
        "openAiApi": {
          "id": "1GukOqQFTAL9y3Gf",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3E1D888E8D8DE07F56022E7FADD21987/token/ED2BF32A855B887106BAAD09/send-text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "client-token",
              "value": "F60d85846fe6a4bfd986f72916b85da2fS"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $('nutrition-extractor').item.json.phone }}"
            },
            {
              "name": "message",
              "value": "=Item adicionado ao relatório"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        880,
        4740
      ],
      "id": "674a038f-f1b0-466d-a21e-d94815f6a6d8",
      "name": "HTTP Request"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "e61db71f-6cc8-4eac-8e8d-2f31e18b6a83",
              "leftValue": "={{ $json.data.barcodeValue }}",
              "rightValue": "=",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1760,
        3380
      ],
      "id": "f6fc5a5b-05dc-4672-bbb8-5a8252e3fd52",
      "name": "If-chaca-barcode"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "b99fd8fd-a371-42d8-a4a1-6cf909484252",
              "leftValue": "={{ $('Code2').item.json.message }}",
              "rightValue": "={{null}}",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1540,
        3480
      ],
      "id": "cb5d794d-7258-4054-b1f5-e9bed43dc617",
      "name": "If-checa-mensagem"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.openai.com/v1/chat/completions",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer 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"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"model\": \"gpt-4o\",\n  \"messages\": [\n    {\n      \"role\": \"system\",\n      \"content\": \"*Prompt para Análise Nutricional - Logger de Comida*\\n\\nVocê é um nutricionista virtual especialista em análise de pratos via WhatsApp. Ao receber a imagem de uma refeição, siga rigorosamente este processo:\\n\\n---\\n\\n**PASSO 1: IDENTIFICAÇÃO DO PRATO**\\n- Liste cada alimento visível na foto\\n- Estime o peso aproximado de cada item em gramas (g)\\n- Use porções típicas e bom senso visual\\n\\n**PASSO 2: CÁLCULO NUTRICIONAL DETALHADO**\\nPara cada alimento identificado, informe os seguintes valores por 100g:\\n- Calorias (kcal)\\n- Carboidratos (g)\\n- Proteínas (g)\\n- Gorduras (g)\\n\\n**PASSO 3: CÁLCULO TOTAL PROPORCIONAL**\\nCom base na estimativa de peso, calcule os macros e calorias proporcionais de cada item e faça a soma total da refeição.\\n\\n**PASSO 4: RESPOSTA FINAL - FORMATO WHATSAPP**\\nA resposta final deve ser leve, amigável e com emojis. Siga este formato EXATO de exemplo:\\n\\n---\\n\\n*Exemplo de resposta desejada:*\\n\\n\\\"Que prato gostoso! Vejo aqui arroz branco (~150g) e carne moída com molho (~100g).\\n\\n**Resumo nutricional:**\\n🔥 Calorias: ~556 kcal\\n🌾 Carboidratos: ~50g\\n💪 Proteínas: ~25g\\n🥑 Gorduras: ~25g\\n\\nQuer que eu adicione essa refeição ao seu log de hoje? 📝\\\"\\n\\n---\\n\\n**REGRAS IMPORTANTES:**\\n- Não invente alimentos que não aparecem claramente na imagem\\n- Use linguagem simples e prática\\n- Use negrito nos valores principais (calorias, macros)\\n- Use emojis para deixar o texto leve\\n- Tamanho máximo de resposta: 2 a 3 parágrafos\\n- Inclua sempre a pergunta final sobre adicionar ao log\\n- Seja direto e objetivo\\n- O estilo e tom devem seguir o exemplo acima\\n\\nA saída precisa estar pronta para ser enviada ao WhatsApp, sem necessidade de ajustes.\"\n    },\n    {\n      \"role\": \"user\",\n      \"content\": [\n        {\n          \"type\": \"image_url\",\n          \"image_url\": {\n            \"url\": \"{{ $('Code2').item.json.imageUrl }}\"\n          }\n        }\n      ]\n    }\n  ],\n  \"max_tokens\": 500\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1320,
        3580
      ],
      "id": "47af6a8f-e724-497f-8579-d6981670cef6",
      "name": "gpt-api-sem-msg"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.openai.com/v1/chat/completions",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer 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"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"model\": \"gpt-4o\",\n  \"messages\": [\n    {\n      \"role\": \"system\",\n      \"content\": \"*Prompt para Análise Nutricional – Logger de Comida*\\n\\nVocê é um nutricionista virtual especializado em análise de pratos via *WhatsApp*. Ao receber a imagem de uma refeição, faça sua análise interna completa mas RESPONDA APENAS com o resultado final formatado para o usuário.\\n\\n*PROCESSO INTERNO (NÃO MOSTRAR):*\\n1. Identifique cada alimento e estime pesos em gramas\\n2. Calcule valores nutricionais por 100g de cada item\\n3. Calcule valores proporcionais ao peso estimado\\n4. Some todos os valores\\n\\n*RESPOSTA FINAL (FORMATO OBRIGATÓRIO):*\\nApenas envie uma mensagem com:\\n1. Frase animada com emoji\\n2. Descrição breve do prato identificado\\n3. Resumo nutricional total com emojis específicos:\\n   - 🔥 *XXX kcal* (calorias)\\n   - 💪 *XXg* (proteínas) \\n   - 🥑 *XXg* (gorduras)\\n   - 🌾 *XXg* (carboidratos)\\n4. Pergunta final: \\\"Quer que eu adicione essa refeição ao seu log de hoje? 📝\\\"\\n\\n*DIRETRIZES OBRIGATÓRIAS:*\\n- NÃO mostre seu processo de pensamento ou cálculos\\n- NÃO liste ingredientes individuais ou pesos\\n- NÃO explique sua metodologia\\n- APENAS envie a resposta final formatada\\n- Use *negrito* para os valores numéricos\\n- Máximo 4 linhas de texto para mobile\\n- Linguagem casual e amigável\"\n    },\n    {\n      \"role\": \"user\",\n      \"content\": [\n        {\n          \"type\": \"text\",\n          \"text\": \"{{ $('Code2').item.json.message }}\"\n        },\n        {\n          \"type\": \"image_url\",\n          \"image_url\": {\n            \"url\": \"{{ $('Code2').item.json.imageUrl }}\"\n          }\n        }\n      ]\n    }\n  ],\n  \"max_tokens\": 500\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1320,
        3380
      ],
      "id": "72680266-3621-4067-af8f-28fc34bfb392",
      "name": "gpt-api-com-msg"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "202af928-a324-411a-bf15-68a349e7bf9e",
                    "leftValue": "={{ $('Webhook').item.json.body.audio }}",
                    "rightValue": "",
                    "operator": {
                      "type": "object",
                      "operation": "exists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "audio"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Webhook').item.json.body.text }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "exists",
                      "singleValue": true
                    },
                    "id": "08fd0c80-307e-4f45-b1de-35192ee4ec5e"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "ebc3bf39-edd8-4ca2-b2cd-260ea6e89b28",
                    "leftValue": "={{ $('Webhook').item.json.body.image.imageUrl }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "exists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "image"
            }
          ]
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -7360,
        3720
      ],
      "id": "70a3cdc4-62aa-4c8e-ae16-48f9a8de19b6",
      "name": "Check Input Type"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "c05a7fbf-309a-407e-9fee-7e0b03f4a5c8",
              "name": "text",
              "value": "={{ $('Webhook').item.json.body.text.message }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -6900,
        3800
      ],
      "id": "4f9b0623-3350-420c-b694-f3d3d0c9c208",
      "name": "Text Only Prompt"
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "binaryPropertyName": "audio",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        -6920,
        3620
      ],
      "id": "158afd26-3ecc-4d95-8aac-e562848e8c04",
      "name": "Transcribe Audio",
      "credentials": {
        "openAiApi": {
          "id": "1GukOqQFTAL9y3Gf",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "219577d5-b028-48fc-90be-980f4171ab68",
              "name": "text",
              "value": "={{ $json.text }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -6700,
        3620
      ],
      "id": "e7de7a87-122c-421d-ab31-682853d25182",
      "name": "Audio Prompt"
    },
    {
      "parameters": {
        "url": "={{ $json.body.audio.audioUrl }}",
        "options": {
          "response": {
            "response": {
              "responseFormat": "file",
              "outputPropertyName": "audio"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -7140,
        3620
      ],
      "id": "150b7995-de66-4ce4-8b00-d9e96436c4e1",
      "name": "Download Z-API Audio"
    },
    {
      "parameters": {
        "jsCode": "// Loop over input items and add a new field called 'myNewField' to the JSON of each one\n\n//valores iniciais\nlet totais = {\n  calorias : 0,\n  carboidratos : 0,\n  proteinas : 0,\n  gorduras : 0\n};\n\n\n// somatório das refeições\nfor (const item of items) {\n  const r = item.json;\n  totais.calorias += r.calorias;\n  totais.carboidratos += r.carboidratos;\n  totais.proteinas += r.proteinas;\n  totais.gorduras += r.gorduras;\n  \n}\n\n// json com os valores totais \nreturn totais;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4240,
        5060
      ],
      "id": "5d9be4b8-299d-4686-991b-4e185985757f",
      "name": "Calculo dos totais"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3E1D888E8D8DE07F56022E7FADD21987/token/ED2BF32A855B887106BAAD09/send-text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "client-token",
              "value": "F60d85846fe6a4bfd986f72916b85da2fS"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $json.phone }}"
            },
            {
              "name": "message",
              "value": "={{ $json.text }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5280,
        5420
      ],
      "id": "5746cddc-3d56-48d9-b7ea-7488a139ad2b",
      "name": "enviar o historico",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "dietas",
        "filters": {
          "conditions": [
            {
              "keyName": "usuario_telefone",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        2920,
        5160
      ],
      "id": "ecf70462-3011-45b8-b27b-fb995469bcf3",
      "name": "Busca dieta",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "operation": "getAll",
        "tableId": "registros_alimentares",
        "returnAll": true,
        "filterType": "=manual",
        "matchType": "allFilters",
        "filters": {
          "conditions": [
            {
              "keyName": "usuario_id",
              "condition": "eq",
              "keyValue": "={{ $('BUSCA DIETA').item.json.usuario_id }}"
            },
            {
              "keyName": "data_consumo",
              "condition": "eq",
              "keyValue": "={{DateTime.now() }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        3180,
        5160
      ],
      "id": "d72830d7-26ae-4166-a2f3-a414a3a2a7ba",
      "name": "Busca historico diario",
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {},
      "name": "Unir Metas e Totais",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2,
      "position": [
        5040,
        5420
      ],
      "id": "085ecb95-f6ed-40d5-8001-1b5063965281"
    },
    {
      "parameters": {
        "jsCode": "let resposta = \"📊 Registros alimentares do dia:\\n\\n\";\n\nfor (const item of items) {\n  const r = item.json;\n  resposta += `🍽️ Refeição: ${r.tipo_refeicao}\\n`;\n  resposta += `🍛 Alimento: ${r.nome_alimento}\\n`;\n  resposta += `🔥 Calorias: ${r.calorias} kcal\\n`;\n  resposta += `🥖 Carboidratos: ${r.carboidratos}g\\n`;\n  resposta += `🥩 Proteínas: ${r.proteinas}g\\n`;\n  resposta += `🧈 Gorduras: ${r.gorduras}g\\n`;\n  resposta += `🕒 Hora: ${r.hora_consumo}\\n\\n`;\n}\n\nreturn [{ json: { text: resposta, phone: $('Webhook').first().json.body.phone } }];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4380,
        5820
      ],
      "id": "431ee6c7-1881-456b-bda7-a13d23952fba",
      "name": "Monta histórico dos registros"
    },
    {
      "parameters": {
        "jsCode": "const dados_dieta = $('Busca dieta').first().json;\nconst dados_consumidos = $('Calculo dos totais').first().json;\n \n\n\nfunction avaliar(consumido, meta, unidade = \"g\") {\n  const diff = consumido - meta;\n  if (diff < 0) {\n    return `${consumido}${unidade} / ${meta}${unidade} → Faltam ${Math.abs(diff)}${unidade}`;\n  } else if (diff === 0) {\n    return `${consumido}${unidade} / ${meta}${unidade} → Meta atingida! 🎯`;\n  } else {\n    return `${consumido}${unidade} / ${meta}${unidade} → Excedeu em ${diff}${unidade} ⚠️`;\n  }\n}\n\nlet resposta = \"📊 Comparativo da dieta diária:\\n\\n\";\nresposta += `🔥 Calorias: ${avaliar(dados_consumidos.calorias, dados_dieta.calorias_diarias, \" kcal\")}\\n`;\nresposta += `🥖 Carboidratos: ${avaliar(dados_consumidos.carboidratos, dados_dieta.carboidrato_gramas)}\\n`;\nresposta += `🥩 Proteínas: ${avaliar(dados_consumidos.proteinas, dados_dieta.proteina_gramas)}\\n`;\nresposta += `🧈 Gorduras: ${avaliar(dados_consumidos.gorduras, dados_dieta.gordura_gramas)}\\n`;\n\nreturn [{ json: { text: resposta,\n                phone: dados_dieta.usuario_telefone} }];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4840,
        5060
      ],
      "id": "bbe23b9c-d676-4963-a7b3-d9dd87ead783",
      "name": "Compara com a dieta",
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "inputText": "={{ $('Code2').item.json.message }}",
        "options": {
          "categories": "Quer Relatorio, não quer relatorio"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.sentimentAnalysis",
      "typeVersion": 1,
      "position": [
        -3400,
        5140
      ],
      "id": "76af228b-e78f-4892-9379-296a9f155b1d",
      "name": "Sentiment Analysis1"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -3420,
        5440
      ],
      "id": "14a72be0-b61e-4769-b284-7812e3c6dbf3",
      "name": "OpenAI Chat Model3",
      "credentials": {
        "openAiApi": {
          "id": "1GukOqQFTAL9y3Gf",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Code2').item.json.imageUrl }}",
                    "rightValue": "={{ null }}",
                    "operator": {
                      "type": "string",
                      "operation": "notEquals"
                    },
                    "id": "339fe544-e0ad-4616-95e4-e3ea4f827f06"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Image"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "da1a564a-5c9b-48f8-ad18-da4df85d58cf",
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "=Pending",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Response"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "95820790-3755-4e65-b02b-0d517829ce4d",
                    "leftValue": "={{ $('Code2').item.json.message }}",
                    "rightValue": "={{ null }}",
                    "operator": {
                      "type": "string",
                      "operation": "notEquals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Text"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -3980,
        4180
      ],
      "id": "095f8f1e-7db8-43d6-8f60-4c5c87726e99",
      "name": "Switch1",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "tableId": "registros_alimentares",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "usuario_id",
              "fieldValue": "={{ $('get-user-id').item.json.id }}"
            },
            {
              "fieldId": "nome_alimento",
              "fieldValue": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('fieldValues1_Field_Value', ``, 'string') }}"
            },
            {
              "fieldId": "calorias",
              "fieldValue": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('fieldValues2_Field_Value', ``, 'string') }}"
            },
            {
              "fieldId": "proteinas",
              "fieldValue": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('fieldValues3_Field_Value', ``, 'string') }}"
            },
            {
              "fieldId": "gorduras",
              "fieldValue": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('fieldValues4_Field_Value', ``, 'string') }}"
            },
            {
              "fieldId": "carboidratos",
              "fieldValue": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('fieldValues6_Field_Value', ``, 'string') }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabaseTool",
      "typeVersion": 1,
      "position": [
        20,
        4560
      ],
      "id": "41dd040b-b1a5-43f7-8f60-b2aa9b951f1f",
      "name": "Supabase25",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "operation": "delete",
        "tableId": "pending_questions",
        "filters": {
          "conditions": [
            {
              "keyName": "phone",
              "condition": "eq",
              "keyValue": "={{ $('get-message').item.json.phone }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        680,
        4440
      ],
      "id": "fcd24adf-61e6-4d49-8098-5139519a55a2",
      "name": "Supabase31",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "content": "## Workflow de processamento de imagem\n",
        "height": 760,
        "width": 2480,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -2960,
        3060
      ],
      "typeVersion": 1,
      "id": "702644a3-2178-49a5-8c34-66b177e64604",
      "name": "Sticky Note4"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -3980,
        4620
      ],
      "id": "0d8dfecb-67ca-45bf-bdf7-4781566e7535",
      "name": "Wait1",
      "webhookId": "1ee0416f-fb22-48a8-ac8a-9ca0fb481208"
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "pending_questions",
        "filters": {
          "conditions": [
            {
              "keyName": "phone",
              "keyValue": "={{ $json.phoneNumber }}"
            },
            {
              "keyName": "status",
              "keyValue": "Pending"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -4420,
        4180
      ],
      "id": "ecc96047-2924-47d1-8f6d-adbdc924faaa",
      "name": "Supabase33",
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "22851519-e7dc-462d-bd72-cf4956fdda3b",
              "leftValue": "={{ $json.counter }}",
              "rightValue": 5,
              "operator": {
                "type": "number",
                "operation": "gte"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -4200,
        4440
      ],
      "id": "479c6577-a6f3-4d36-8ae7-c09bd3fee59f",
      "name": "If14"
    },
    {
      "parameters": {
        "tableId": "workflow_locks",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "phone",
              "fieldValue": "={{ $json.body.phone }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -5820,
        3720
      ],
      "id": "68e954b0-df63-47b1-9cb7-53e43ffe946d",
      "name": "Supabase34",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "46a2307b-f116-48e2-9f4e-eb005e607b57",
              "leftValue": "={{  $items(\"get-message\").length}}",
              "rightValue": 0,
              "operator": {
                "type": "number",
                "operation": "gt"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -800,
        4580
      ],
      "id": "ce192ff3-893f-423f-882a-baf9d52ec6d1",
      "name": "If15"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "fe7f54a7-9972-464c-b84d-7903a0b558db",
              "leftValue": "={{ $json.calories }}",
              "rightValue": "",
              "operator": {
                "type": "number",
                "operation": "notExists",
                "singleValue": true
              }
            },
            {
              "id": "882e3255-e64d-40fc-8093-fd62617c6b4b",
              "leftValue": "={{ $json.carbs }}",
              "rightValue": "",
              "operator": {
                "type": "number",
                "operation": "notExists",
                "singleValue": true
              }
            },
            {
              "id": "755cbeea-5327-4f5d-aa10-7437588a54d2",
              "leftValue": "={{ $json.proteins }}",
              "rightValue": "",
              "operator": {
                "type": "number",
                "operation": "notExists",
                "singleValue": true
              }
            },
            {
              "id": "91456a8b-2bb1-480f-8b2f-861c040c658f",
              "leftValue": "={{ $json.fats }}",
              "rightValue": "",
              "operator": {
                "type": "number",
                "operation": "notExists",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -360,
        4580
      ],
      "id": "3ecbb5a3-a7c4-41f4-a5ae-9d5bc4847755",
      "name": "If16"
    },
    {
      "parameters": {
        "tableId": "registros_alimentares",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "usuario_id",
              "fieldValue": "={{ $json.id }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        240,
        4740
      ],
      "id": "3d80980a-e4e1-42d2-9adf-fb3c9975c810",
      "name": "Supabase35",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "users",
        "filters": {
          "conditions": [
            {
              "keyName": "telefone",
              "keyValue": "={{ $json.phone }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -60,
        4740
      ],
      "id": "79d843ec-e08b-4c2f-99a2-7215d85c49a9",
      "name": "Supabase36",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "operation": "delete",
        "tableId": "pending_questions",
        "filters": {
          "conditions": [
            {
              "keyName": "phone",
              "condition": "eq",
              "keyValue": "={{ $('Switch1').item.json.phone }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -1200,
        4920
      ],
      "id": "72fbacb5-5191-4a7c-807b-f98b86a5fe72",
      "name": "Supabase37",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "tableId": "registros_alimentares",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "usuario_id",
              "fieldValue": "={{ $('Supabase35').item.json.usuario_id }}"
            },
            {
              "fieldId": "data_consumo",
              "fieldValue": "={{ $json.data_consumo }}"
            },
            {
              "fieldId": "hora_consumo",
              "fieldValue": "={{ $json.hora_consumo }}"
            },
            {
              "fieldId": "calorias",
              "fieldValue": "={{ $json.calories }}"
            },
            {
              "fieldId": "carboidratos",
              "fieldValue": "={{ $json.carbs }}"
            },
            {
              "fieldId": "proteinas",
              "fieldValue": "={{ $json.proteins }}"
            },
            {
              "fieldId": "gorduras",
              "fieldValue": "={{ $json.fats }}"
            },
            {
              "fieldId": "tipo_refeicao",
              "fieldValue": "={{ $json.tipo_refeicao }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        680,
        4740
      ],
      "id": "ea2234cd-064d-462f-a5e7-4fd9e97f12d4",
      "name": "Supabase38",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "operation": "delete",
        "tableId": "pending_questions",
        "filters": {
          "conditions": [
            {
              "keyName": "phone",
              "condition": "eq",
              "keyValue": "={{ $('Supabase36').item.json.telefone }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        1060,
        4740
      ],
      "id": "959bc195-faa8-4237-9811-41fbdb1c2328",
      "name": "Supabase39",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Get the input message from the previous node\nconst inputMessage = $input.first().json.choices[0].message.content;\n\nfunction parseAndValidateNutrition(message) {\n    // Regex patterns to extract nutritional values\n    const caloriesRegex = /🔥 Calorias: ~(\\d+) kcal/;\n    const carbsRegex = /🌾 Carboidratos: ~(\\d+)g/;\n    const proteinsRegex = /💪 Proteínas: ~(\\d+)g/;\n    const fatsRegex = /🥑 Gorduras: ~(\\d+)g/;\n    \n    // Extract values\n    const caloriesMatch = message.match(caloriesRegex);\n    const carbsMatch = message.match(carbsRegex);\n    const proteinsMatch = message.match(proteinsRegex);\n    const fatsMatch = message.match(fatsRegex);\n    \n    if (!caloriesMatch || !carbsMatch || !proteinsMatch || !fatsMatch) {\n        throw new Error('Could not parse all nutritional values from the message');\n    }\n    \n    const originalCalories = parseInt(caloriesMatch[1]);\n    const carbs = parseInt(carbsMatch[1]);\n    const proteins = parseInt(proteinsMatch[1]);\n    const fats = parseInt(fatsMatch[1]);\n    \n    // Calculate correct calories (carbs: 4kcal/g, proteins: 4kcal/g, fats: 9kcal/g)\n    const calculatedCalories = (carbs * 4) + (proteins * 4) + (fats * 9);\n    \n    // Check if calories need correction\n    const needsCorrection = originalCalories !== calculatedCalories;\n    \n    let correctedMessage = message;\n    if (needsCorrection) {\n        // Replace the calories in the message\n        correctedMessage = message.replace(\n            caloriesRegex, \n            `🔥 Calorias: ~${calculatedCalories} kcal`\n        );\n    }\n    \n    return {\n        needsCorrection,\n        originalCalories,\n        calculatedCalories,\n        correctedMessage,\n        calorieDifference: calculatedCalories - originalCalories,\n        breakdown: {\n            carbs: { grams: carbs, calories: carbs * 4 },\n            proteins: { grams: proteins, calories: proteins * 4 },\n            fats: { grams: fats, calories: fats * 9 }\n        }\n    };\n}\n\ntry {\n    const result = parseAndValidateNutrition(inputMessage);\n    \n    return {\n        json: {\n            success: true,\n            originalMessage: inputMessage,\n            correctedMessage: result.correctedMessage,\n            needsCorrection: result.needsCorrection,\n            calories: {\n                original: result.originalCalories,\n                calculated: result.calculatedCalories,\n                difference: result.calorieDifference\n            },\n            nutritionalBreakdown: result.breakdown\n        }\n    };\n    \n} catch (error) {\n    return {\n        json: {\n            success: false,\n            error: error.message,\n            originalMessage: inputMessage\n        }\n    };\n}"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1100,
        3580
      ],
      "id": "1c9dfa62-3b0e-4658-a631-2a7f47f1c56a",
      "name": "Code7"
    },
    {
      "parameters": {
        "content": "## Adiciona ao log a refeição",
        "height": 780,
        "width": 3160
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -2540,
        4280
      ],
      "typeVersion": 1,
      "id": "c43370d8-7857-4482-918b-3485f833d508",
      "name": "Sticky Note5"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3E1D888E8D8DE07F56022E7FADD21987/token/ED2BF32A855B887106BAAD09/send-text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "client-token",
              "value": "F60d85846fe6a4bfd986f72916b85da2fS"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $('Webhook').item.json.body.phone }}"
            },
            {
              "name": "message",
              "value": "=Parece que você ainda não registrou nenhuma refeição..."
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3780,
        5540
      ],
      "id": "93d69d30-6fbe-4e89-bdef-ea129763b2ab",
      "name": "info dieta18",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "459e7f9b-4f9c-4849-881c-4a0dcd59873b",
              "leftValue": "={{ $json.isEmpty() }}",
              "rightValue": false,
              "operator": {
                "type": "boolean",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        3600,
        5160
      ],
      "id": "0a1e108f-21ba-4948-b03f-2bce0c519a02",
      "name": "If17"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "ab13195a-3f7e-4254-9ae1-d99585979be0",
              "name": "json.text",
              "value": "={{ $('Webhook').item.json.body.text }}",
              "type": "string"
            },
            {
              "id": "3627de05-ee5b-44c1-afcb-e51dcca30fdb",
              "name": "",
              "value": "",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        0,
        0
      ],
      "id": "aa55a830-6ada-4545-a4ec-6849be88732a",
      "name": "Edit Fields",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "ab13195a-3f7e-4254-9ae1-d99585979be0",
              "name": "json.text",
              "value": "={{ $('Webhook').item.json.body.text }}",
              "type": "string"
            },
            {
              "id": "3627de05-ee5b-44c1-afcb-e51dcca30fdb",
              "name": "",
              "value": "",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -7080,
        4100
      ],
      "id": "ad32c6fe-1a65-440d-8618-5c1a79b13959",
      "name": "Edit Fields2",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "jsCode": "// Get the input message from the previous node\nconst inputMessage = $input.first().json.choices[0].message.content;\n\nfunction parseAndValidateNutrition(message) {\n    // Regex patterns to extract nutritional values\n    const caloriesRegex = /🔥 Calorias: ~(\\d+) kcal/;\n    const carbsRegex = /🌾 Carboidratos: ~(\\d+)g/;\n    const proteinsRegex = /💪 Proteínas: ~(\\d+)g/;\n    const fatsRegex = /🥑 Gorduras: ~(\\d+)g/;\n    \n    // Extract values\n    const caloriesMatch = message.match(caloriesRegex);\n    const carbsMatch = message.match(carbsRegex);\n    const proteinsMatch = message.match(proteinsRegex);\n    const fatsMatch = message.match(fatsRegex);\n    \n    if (!caloriesMatch || !carbsMatch || !proteinsMatch || !fatsMatch) {\n        throw new Error('Could not parse all nutritional values from the message');\n    }\n    \n    const originalCalories = parseInt(caloriesMatch[1]);\n    const carbs = parseInt(carbsMatch[1]);\n    const proteins = parseInt(proteinsMatch[1]);\n    const fats = parseInt(fatsMatch[1]);\n    \n    // Calculate correct calories (carbs: 4kcal/g, proteins: 4kcal/g, fats: 9kcal/g)\n    const calculatedCalories = (carbs * 4) + (proteins * 4) + (fats * 9);\n    \n    // Check if calories need correction\n    const needsCorrection = originalCalories !== calculatedCalories;\n    \n    let correctedMessage = message;\n    if (needsCorrection) {\n        // Replace the calories in the message\n        correctedMessage = message.replace(\n            caloriesRegex, \n            `🔥 Calorias: ~${calculatedCalories} kcal`\n        );\n    }\n    \n    return {\n        needsCorrection,\n        originalCalories,\n        calculatedCalories,\n        correctedMessage,\n        calorieDifference: calculatedCalories - originalCalories,\n        breakdown: {\n            carbs: { grams: carbs, calories: carbs * 4 },\n            proteins: { grams: proteins, calories: proteins * 4 },\n            fats: { grams: fats, calories: fats * 9 }\n        }\n    };\n}\n\ntry {\n    const result = parseAndValidateNutrition(inputMessage);\n    \n    return {\n        json: {\n            success: true,\n            originalMessage: inputMessage,\n            correctedMessage: result.correctedMessage,\n            needsCorrection: result.needsCorrection,\n            calories: {\n                original: result.originalCalories,\n                calculated: result.calculatedCalories,\n                difference: result.calorieDifference\n            },\n            nutritionalBreakdown: result.breakdown\n        }\n    };\n    \n} catch (error) {\n    return {\n        json: {\n            success: false,\n            error: error.message,\n            originalMessage: inputMessage\n        }\n    };\n}"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1120,
        3380
      ],
      "id": "08f1c48b-48f6-4d68-80de-e0479fa06b4f",
      "name": "Code6"
    },
    {
      "parameters": {
        "operation": "formatDate",
        "date": "={{$now}}",
        "format": "yyyy-MM-dd",
        "options": {}
      },
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        -6260,
        3720
      ],
      "id": "a7731042-cc24-4f2c-91bc-0588372418c4",
      "name": "Date & Time1"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Webhook').item.json.body.text.message }}",
                    "rightValue": "1",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "f8bc973b-84df-4497-9408-f65b1803af5e"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "masculino"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "43d6fb8c-e351-4bd4-bc05-bc6a08e8e7fa",
                    "leftValue": "={{ $('Webhook').item.json.body.text.message }}",
                    "rightValue": "2",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "feminino"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        5960,
        2180
      ],
      "id": "f8c17ba5-7b2f-4c97-9eab-68ea594bffea",
      "name": "Switch3"
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "users",
        "filters": {
          "conditions": [
            {
              "keyName": "telefone",
              "condition": "eq",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "sexo",
              "fieldValue": "=feminino"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        6240,
        2260
      ],
      "id": "9bb924e7-3fa1-4547-b3f2-868cbfffe8c7",
      "name": "Supabase40",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const altura = $('Webhook').first().json.body.text.message;\n\nconst regex = /^\\d{3}$/;\n\nreturn [\n  {\n    json: {\n      valid: regex.test(altura)\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4920,
        1260
      ],
      "id": "d5fe85a1-c118-4282-b2ae-e790eeb526c1",
      "name": "Code8"
    },
    {
      "parameters": {
        "jsCode": "const altura = $('Webhook').first().json.body.text.message;\n\nconst regex = /^\\d{2,3}$/;\n\nreturn [\n  {\n    json: {\n      valid: regex.test(altura)\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4920,
        1500
      ],
      "id": "5ee1c086-f2e6-4bf6-8bd3-11cec10d3617",
      "name": "Code9"
    },
    {
      "parameters": {
        "jsCode": "const altura = $('Webhook').first().json.body.text.message;\n\nconst regex = /^\\d{1,2}$/;\n\nreturn [\n  {\n    json: {\n      valid: regex.test(altura)\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4940,
        1840
      ],
      "id": "c83b5669-0df8-490d-b654-99ebc40e886d",
      "name": "Code10"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "c4a32bb8-cdca-4481-ae03-6c9e333e0301",
              "leftValue": "={{ $json.body.text.message }}",
              "rightValue": "'CANCELAR'",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -5640,
        -1920
      ],
      "id": "eaf1110a-ba10-485a-b633-b557c05d10f2",
      "name": "If18"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3E1D888E8D8DE07F56022E7FADD21987/token/ED2BF32A855B887106BAAD09/send-text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "client-token",
              "value": "F60d85846fe6a4bfd986f72916b85da2fS"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $('Webhook').item.json.body.phone }}"
            },
            {
              "name": "message",
              "value": "Poxa, tem certeza que deseja cancelar? Com CaloScan, voce"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -5240,
        -820
      ],
      "id": "a5d163fb-ff50-4921-81d6-9643604e27e4",
      "name": "info dieta9",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "jsCode": "const email = $('Webhook').first().json.body.text.message;\n\nconst regex = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/;\n\nreturn [\n  {\n    json: {\n      valid: regex.test(email)\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4280,
        -560
      ],
      "id": "e5ed88fb-05a7-4fdc-9c35-fc7fd7290ee2",
      "name": "validaEmail"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3E1D888E8D8DE07F56022E7FADD21987/token/ED2BF32A855B887106BAAD09/send-text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "client-token",
              "value": "F60d85846fe6a4bfd986f72916b85da2fS"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $('Webhook').item.json.body.phone }}"
            },
            {
              "name": "message",
              "value": "👌Perfeito! Agora, me diga seu email(ex: emagrecer@gmail.com)."
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        6060,
        -1120
      ],
      "id": "5dd9eb68-c1b9-4eb8-b98d-f487ec41d4a4",
      "name": "Pergunta email",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "5fc2e957-0a47-4127-8f07-7299bd7210f0",
              "leftValue": "={{ $('Webhook').item.json.body.text.message }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            },
            {
              "id": "523b3b9c-58c3-46ad-bbb3-70c3caba8bcb",
              "leftValue": "={{ $json.valid }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        4560,
        -560
      ],
      "id": "62079f5b-b08d-4a05-b761-74b68915c8e0",
      "name": "If19"
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "estados_conversa",
        "filters": {
          "conditions": [
            {
              "keyName": "usuario_telefone",
              "condition": "eq",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "estado_atual",
              "fieldValue": "info_altura"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        5140,
        -400
      ],
      "id": "e6be37eb-adf5-482d-9116-e2ace2ccef58",
      "name": "update estado18",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "estados_conversa",
        "filters": {
          "conditions": [
            {
              "keyName": "usuario_telefone",
              "condition": "eq",
              "keyValue": "={{ $('Cria novo usuário1').item.json.telefone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "estado_atual",
              "fieldValue": "info_email"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        6280,
        -1120
      ],
      "id": "3869f46a-796d-418d-808e-164df42102a8",
      "name": "Atualiza estado2",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "estados_conversa",
        "filters": {
          "conditions": [
            {
              "keyName": "usuario_telefone",
              "condition": "eq",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "estado_atual",
              "fieldValue": "resposta_email"
            },
            {
              "fieldId": "dados_contexto",
              "fieldValue": "={{ $('Webhook').item.json.body.text.message }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        5800,
        -1120
      ],
      "id": "c1fa33f8-0d67-4f5c-9052-295630e7f992",
      "name": "update estado4",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "content": "## Email\n**Double click** to edit me. [Guide](https://docs.n8n.io/workflows/sticky-notes/)",
        "height": 560,
        "width": 1380
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        4240,
        -680
      ],
      "id": "041515fb-2751-4cc2-beb4-0c3dee3f6712",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3E1D888E8D8DE07F56022E7FADD21987/token/ED2BF32A855B887106BAAD09/send-text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "client-token",
              "value": "F60d85846fe6a4bfd986f72916b85da2fS"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $('Webhook').item.json.body.phone }}"
            },
            {
              "name": "message",
              "value": "=Perfeito, {{ $('Webhook').item.json.body.text.message }}! \nAgora, me conte: você já tem uma dieta estabelecida?  \n1️⃣ Sim, já tenho uma dieta definida  \n2️⃣ Não, preciso de ajuda para criar uma "
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4940,
        -600
      ],
      "id": "9e8c5eba-0d89-470d-ad01-b085a9053873",
      "name": "Já tem dieta?1",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "users",
        "filters": {
          "conditions": [
            {
              "keyName": "telefone",
              "condition": "eq",
              "keyValue": "={{ $('Webhook').item.json.body.phone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "nome",
              "fieldValue": "={{ $('Webhook').item.json.body.text.message }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        5180,
        -600
      ],
      "id": "0ed66ab4-9a0f-4cb6-804c-8f42f8d49c0c",
      "name": "guarda o nome1",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "estados_conversa",
        "filters": {
          "conditions": [
            {
              "keyName": "usuario_telefone",
              "condition": "eq",
              "keyValue": "={{ $('Cria novo usuário1').item.json.telefone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "estado_atual",
              "fieldValue": "resposta_dieta"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        5380,
        -600
      ],
      "id": "3060de32-591c-442e-ae50-be5d2af04ac8",
      "name": "Atualiza estado3",
      "credentials": {
        "supabaseApi": {
          "id": "vbkKtR4gnK3Q013f",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3E1D888E8D8DE07F56022E7FADD21987/token/ED2BF32A855B887106BAAD09/send-text",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "client-token",
              "value": "F60d85846fe6a4bfd986f72916b85da2fS"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $('Webhook').item.json.body.phone }}"
            },
            {
              "name": "message",
              "value": "=Não entendi.\nPor favor, insira um email válido(ex emagrecer@gmail.com)"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4940,
        -400
      ],
      "id": "5b2d900d-3718-4d4b-9df8-5e2df19818c5",
      "name": "email_invalido",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "content": "## pergunta Email\n",
        "height": 300,
        "width": 1120,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        5440,
        -1200
      ],
      "id": "e326ed0f-7b8d-49d5-9380-822f83d59ba3",
      "name": "Sticky Note3"
    }
  ],
  "pinData": {
    "AI Agent1": [
      {
        "json": {
          "output": "O feijão vermelho, também conhecido como feijão do tipo kidney, é uma excelente opção para incluir na sua alimentação! Aqui estão alguns pontos interessantes sobre ele:\n\n1. **Nutrição**: O feijão vermelho é uma fonte rica em proteínas, fibras, vitaminas (como as do complexo B) e minerais (como ferro e potássio). As fibras são especialmente importantes para a saúde digestiva e podem ajudar na saciedade.\n\n2. **Saúde do coração**: Por ser rico em fibras e antioxidantes, o feijão vermelho pode ajudar a reduzir o colesterol LDL (\"ruim\") e melhorar a saúde do coração.\n\n3. **Controle de açúcar no sangue**: Devido ao seu baixo índice glicêmico, o feijão vermelho liberação de glicose de maneira mais lenta na corrente sanguínea, o que pode ser benéfico para o controle da glicose.\n\n4. **Versatilidade**: Ele pode ser utilizado em diversas receitas, como sopas, saladas, chili e até mesmo como acompanhamento. \n\n5. **Preparação**: É sempre importante cozinhar bem o feijão vermelho, pois ele contém toxinas que podem ser prejudiciais se ingeridas cruas ou mal cozidas.\n\nSe você tem alguma dúvida específica sobre o feijão vermelho ou como incorporá-lo à sua dieta, sinta-se à vontade para perguntar!"
        }
      }
    ],
    "Webhook": [
      {
        "json": {
          "headers": {
            "host": "n8n.caloscan.com.br",
            "user-agent": "Mozilla/5.0 (X11; Fedora; Linux x86_64; rv:111.0) Gecko/20100101 Firefox/111.0",
            "content-length": "733",
            "content-type": "application/json",
            "origin": "https://api.z-api.io",
            "server": "Z-API",
            "via": "2.0 Caddy",
            "x-forwarded-for": "137.131.235.255",
            "x-forwarded-host": "n8n.caloscan.com.br",
            "x-forwarded-proto": "https",
            "z-api-token": "ED2BF32A855B887106BAAD09",
            "accept-encoding": "gzip"
          },
          "params": {},
          "query": {},
          "body": {
            "isStatusReply": false,
            "chatLid": "143065528418477@lid",
            "connectedPhone": "5521974610397",
            "waitingMessage": false,
            "isEdit": false,
            "isGroup": false,
            "isNewsletter": false,
            "instanceId": "3E1D888E8D8DE07F56022E7FADD21987",
            "messageId": "3A867766678152C5BD81",
            "phone": "5521984138362",
            "fromMe": false,
            "momment": 1753226992000,
            "status": "RECEIVED",
            "chatName": "Giovanna Amaral",
            "senderPhoto": null,
            "senderName": "Giovanna",
            "photo": "https://pps.whatsapp.net/v/t61.24694-24/472760394_1134362931462857_6001521581082879376_n.jpg?ccb=11-4&oh=01_Q5Aa2AE1vi7gwnGfEy7Pq0p14BcsjSRYOJVwomVLbk_FKrJyWQ&oe=688D3CDC&_nc_sid=5e03e0&_nc_cat=111",
            "broadcast": false,
            "participantLid": null,
            "forwarded": false,
            "type": "ReceivedCallback",
            "fromApi": false,
            "text": {
              "message": "Ee"
            }
          },
          "webhookUrl": "https://n8n.caloscan.com.br/webhook/2fbc3806-4f1c-4999-8b48-eb0367157651",
          "executionMode": "production"
        }
      }
    ]
  },
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "If18",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If4",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If5",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Code8",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Code9",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Code10",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If9",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If10",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If11",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Supabase24",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "validaEmail",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "Inicializa criação dieta",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "qtd calorias",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase5": {
      "main": [
        [
          {
            "node": "Supabase8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "qtd calorias": {
      "main": [
        [
          {
            "node": "update estado2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "qtd proteina": {
      "main": [
        [
          {
            "node": "update estado3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "qtd carbo": {
      "main": [
        [
          {
            "node": "Supabase",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "update estado1": {
      "main": [
        [
          {
            "node": "guarda o nome",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "update estado2": {
      "main": [
        [
          {
            "node": "Supabase5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "update estado3": {
      "main": [
        [
          {
            "node": "Supabase7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase": {
      "main": [
        [
          {
            "node": "Supabase2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "qtd gordura": {
      "main": [
        [
          {
            "node": "Supabase4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase4": {
      "main": [
        [
          {
            "node": "Supabase6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase11": {
      "main": [
        [
          {
            "node": "Supabase12",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase12": {
      "main": [
        [
          {
            "node": "Supabase13",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase13": {
      "main": [
        [
          {
            "node": "qtd gordura1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "update estado5": {
      "main": [
        []
      ]
    },
    "info dieta2": {
      "main": [
        [
          {
            "node": "update estado6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "update estado6": {
      "main": [
        [
          {
            "node": "Supabase14",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "info dieta3": {
      "main": [
        [
          {
            "node": "update estado7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "update estado7": {
      "main": [
        [
          {
            "node": "Supabase15",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "info dieta4": {
      "main": [
        [
          {
            "node": "update estado8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "update estado8": {
      "main": [
        [
          {
            "node": "Supabase16",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "info dieta5": {
      "main": [
        [
          {
            "node": "update estado9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "update estado9": {
      "main": [
        [
          {
            "node": "Switch3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "info dieta6": {
      "main": [
        [
          {
            "node": "update estado10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "update estado10": {
      "main": [
        [
          {
            "node": "Supabase18",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "info dieta7": {
      "main": [
        [
          {
            "node": "update estado11",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "update estado11": {
      "main": [
        [
          {
            "node": "Supabase19",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase19": {
      "main": [
        [
          {
            "node": "Supabase20",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase20": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Supabase21",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase21": {
      "main": [
        [
          {
            "node": "info dieta8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase24": {
      "main": [
        [
          {
            "node": "info dieta14",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "BUSCA ESTADO_C": {
      "main": [
        [
          {
            "node": "Já passou pelo onboarding?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Já passou pelo onboarding?": {
      "main": [
        [
          {
            "node": "BUSCA USUÁRIO",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Supabase10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "BUSCA DIETA": {
      "main": [
        [
          {
            "node": "BUSCA ESTADO_C",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "BUSCA USUÁRIO": {
      "main": [
        [
          {
            "node": "primeira mensagem?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "primeira mensagem?": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Cria novo usuário",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cria novo usuário": {
      "main": [
        [
          {
            "node": "Inicializa estados_conversa",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Inicializa estados_conversa": {
      "main": [
        [
          {
            "node": "Pergunta nome",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Pergunta nome": {
      "main": [
        [
          {
            "node": "Atualiza estado",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Inicializa criação dieta": {
      "main": [
        [
          {
            "node": "update estado5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "guarda o nome": {
      "main": [
        [
          {
            "node": "update estado4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "update estado1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Cria novo usuário1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If2": {
      "main": [
        [
          {
            "node": "qtd proteina",
            "type": "main",
            "index": 0
          }
        ],
        []
      ]
    },
    "If3": {
      "main": [
        [
          {
            "node": "qtd carbo",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "qtd proteina1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If4": {
      "main": [
        [
          {
            "node": "qtd gordura",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "qtd carbo1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If5": {
      "main": [
        [
          {
            "node": "Supabase11",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If6": {
      "main": [
        [
          {
            "node": "info dieta2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Inicializa criação dieta1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If7": {
      "main": [
        [
          {
            "node": "info dieta3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "info dieta",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If8": {
      "main": [
        [
          {
            "node": "info dieta4",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "info dieta10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If9": {
      "main": [
        [
          {
            "node": "info dieta5",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "info dieta11",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If10": {
      "main": [
        [
          {
            "node": "info dieta6",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "info dieta12",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If11": {
      "main": [
        [
          {
            "node": "info dieta7",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "info dieta13",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "qtd carbo1": {
      "main": [
        [
          {
            "node": "Supabase1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase1": {
      "main": [
        [
          {
            "node": "Supabase3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "qtd proteina1": {
      "main": [
        [
          {
            "node": "update estado",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "update estado": {
      "main": [
        [
          {
            "node": "Supabase9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "info dieta": {
      "main": [
        [
          {
            "node": "update estado12",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "update estado12": {
      "main": [
        [
          {
            "node": "Supabase22",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "info dieta10": {
      "main": [
        [
          {
            "node": "update estado13",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "update estado13": {
      "main": [
        [
          {
            "node": "Supabase23",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "info dieta11": {
      "main": [
        [
          {
            "node": "update estado14",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "update estado14": {
      "main": [
        [
          {
            "node": "Supabase26",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "info dieta12": {
      "main": [
        [
          {
            "node": "update estado15",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "update estado15": {
      "main": [
        [
          {
            "node": "Supabase27",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "info dieta13": {
      "main": [
        [
          {
            "node": "update estado16",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "update estado16": {
      "main": [
        [
          {
            "node": "Supabase28",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cria novo usuário1": {
      "main": [
        [
          {
            "node": "Inicializa estados_conversa1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Inicializa estados_conversa1": {
      "main": [
        [
          {
            "node": "Pergunta nome1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Pergunta nome1": {
      "main": [
        [
          {
            "node": "Atualiza estado1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Inicializa criação dieta1": {
      "main": [
        [
          {
            "node": "update estado17",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase10": {
      "main": [
        [
          {
            "node": "If12",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If12": {
      "main": [
        [
          {
            "node": "Check Input Type",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "info dieta15",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "info dieta15": {
      "main": [
        [
          {
            "node": "Supabase29",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase29": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Supabase30",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase30": {
      "main": [
        [
          {
            "node": "If13",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If13": {
      "main": [
        [
          {
            "node": "Check Input Type",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "info dieta17",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "info dieta17": {
      "main": [
        [
          {
            "node": "Supabase32",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "Date & Time1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "barcode-scanner1": {
      "main": [
        [
          {
            "node": "If-chaca-barcode",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "HTTP Request retorna macros para wpp",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "MongoDB": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "HTTP Request3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request3": {
      "main": [
        [
          {
            "node": "HTTP Request4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request4": {
      "main": [
        [
          {
            "node": "Supabase31",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent1": {
      "main": [
        [
          {
            "node": "HTTP Request5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Http Request retorna Mensagem para Wpp": {
      "main": [
        [
          {
            "node": "Supabase cria pending request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase cria pending request": {
      "main": [
        [
          {
            "node": "Http Request retorna Mensagem para Wpp3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request retorna macros para wpp": {
      "main": [
        []
      ]
    },
    "Redis": {
      "main": [
        [
          {
            "node": "Supabase34",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis1": {
      "main": [
        [
          {
            "node": "Switch2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis2": {
      "main": [
        [
          {
            "node": "Switch1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "No Operation, do nothing": {
      "main": [
        [
          {
            "node": "Code3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code2": {
      "main": [
        [
          {
            "node": "Supabase33",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch2": {
      "main": [
        [
          {
            "node": "Code2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Code2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Http Request retorna Mensagem para Wpp1": {
      "main": [
        [
          {
            "node": "Supabase cria pending request1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase cria pending request1": {
      "main": [
        [
          {
            "node": "Http Request retorna Mensagem para Wpp2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Http Request retorna Mensagem para Wpp2": {
      "main": [
        []
      ]
    },
    "Http Request retorna Mensagem para Wpp3": {
      "main": [
        []
      ]
    },
    "Code3": {
      "main": [
        [
          {
            "node": "If14",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code4": {
      "main": [
        [
          {
            "node": "Redis1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Http Request retorna Mensagem para Wpp4": {
      "main": [
        [
          {
            "node": "barcode-scanner1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Http Request retorna Mensagem para Wpp5": {
      "main": [
        [
          {
            "node": "Sentiment Analysis",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get-user-id": {
      "main": [
        [
          {
            "node": "get-message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get-message": {
      "main": [
        [
          {
            "node": "If15",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code5": {
      "main": [
        [
          {
            "node": "Supabase38",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "nutrition-extractor": {
      "main": [
        [
          {
            "node": "If16",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Sentiment Analysis": {
      "main": [
        [
          {
            "node": "get-user-id",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Supabase37",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Supabase37",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "Sentiment Analysis",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Supabase39",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If-chaca-barcode": {
      "main": [
        [
          {
            "node": "MongoDB",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If-checa-mensagem",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If-checa-mensagem": {
      "main": [
        [
          {
            "node": "gpt-api-com-msg",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "gpt-api-sem-msg",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "gpt-api-sem-msg": {
      "main": [
        [
          {
            "node": "Code7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "gpt-api-com-msg": {
      "main": [
        [
          {
            "node": "Code6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Input Type": {
      "main": [
        [
          {
            "node": "Download Z-API Audio",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Text Only Prompt",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Text Only Prompt": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Transcribe Audio": {
      "main": [
        [
          {
            "node": "Audio Prompt",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Audio Prompt": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download Z-API Audio": {
      "main": [
        [
          {
            "node": "Transcribe Audio",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Calculo dos totais": {
      "main": [
        [
          {
            "node": "Compara com a dieta",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Busca dieta": {
      "main": [
        [
          {
            "node": "Busca historico diario",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Busca historico diario": {
      "main": [
        [
          {
            "node": "If17",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Unir Metas e Totais": {
      "main": [
        [
          {
            "node": "enviar o historico",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Monta histórico dos registros": {
      "main": [
        [
          {
            "node": "Unir Metas e Totais",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Compara com a dieta": {
      "main": [
        [
          {
            "node": "Unir Metas e Totais",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Sentiment Analysis1": {
      "main": [
        [
          {
            "node": "Busca dieta",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "AI Agent1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model3": {
      "ai_languageModel": [
        [
          {
            "node": "Sentiment Analysis1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Switch1": {
      "main": [
        [
          {
            "node": "Http Request retorna Mensagem para Wpp4",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Http Request retorna Mensagem para Wpp5",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Sentiment Analysis1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase25": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Wait1": {
      "main": [
        [
          {
            "node": "Redis1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase33": {
      "main": [
        [
          {
            "node": "Redis2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If14": {
      "main": [
        [
          {
            "node": "No Operation, do nothing1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase34": {
      "main": [
        [
          {
            "node": "Code4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If15": {
      "main": [
        [
          {
            "node": "nutrition-extractor",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If16": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Supabase36",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase35": {
      "main": [
        [
          {
            "node": "Code5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase36": {
      "main": [
        [
          {
            "node": "Supabase35",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase38": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code7": {
      "main": [
        [
          {
            "node": "Http Request retorna Mensagem para Wpp1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If17": {
      "main": [
        [
          {
            "node": "Calculo dos totais",
            "type": "main",
            "index": 0
          },
          {
            "node": "Monta histórico dos registros",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "info dieta18",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields2": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code6": {
      "main": [
        [
          {
            "node": "Http Request retorna Mensagem para Wpp",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Date & Time1": {
      "main": [
        [
          {
            "node": "Redis",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch3": {
      "main": [
        [
          {
            "node": "Supabase17",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Supabase40",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code8": {
      "main": [
        [
          {
            "node": "If6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code9": {
      "main": [
        [
          {
            "node": "If7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code10": {
      "main": [
        [
          {
            "node": "If8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If18": {
      "main": [
        [
          {
            "node": "BUSCA DIETA",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "info dieta9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "validaEmail": {
      "main": [
        [
          {
            "node": "If19",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Pergunta email": {
      "main": [
        [
          {
            "node": "Atualiza estado2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If19": {
      "main": [
        [
          {
            "node": "Já tem dieta?1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "email_invalido",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "update estado4": {
      "main": [
        [
          {
            "node": "Pergunta email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Já tem dieta?1": {
      "main": [
        [
          {
            "node": "guarda o nome1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "guarda o nome1": {
      "main": [
        [
          {
            "node": "Atualiza estado3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "email_invalido": {
      "main": [
        [
          {
            "node": "update estado18",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "53df69db-5530-47c0-bbd1-96f0d28336c9",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "47f5151e1feedfc56c8165323ec3b572b376ad9a1737b53f18d620111e7cf651"
  },
  "id": "ufGydoBZT0g91mE7",
  "tags": []
}